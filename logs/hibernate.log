[DEBUG] 2020-03-02 23:10:11.492 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-02 23:10:11.495 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-02 23:10:11.497 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-03-02 23:10:11.533 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-03-02 23:10:11.534 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-03-02 23:10:11.618 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-02 23:10:11.759 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-02 23:10:11.769 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-02 23:10:11.770 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-03-02 23:10:11.781 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-03-02 23:10:11.800 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6a74d228
[DEBUG] 2020-03-02 23:10:11.800 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6a74d228
[DEBUG] 2020-03-02 23:10:11.800 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a74d228
[DEBUG] 2020-03-02 23:10:11.800 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@72ba28ee
[DEBUG] 2020-03-02 23:10:11.800 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4917d36b
[DEBUG] 2020-03-02 23:10:11.801 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7b44b63d
[DEBUG] 2020-03-02 23:10:11.801 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@66434cc8
[DEBUG] 2020-03-02 23:10:11.801 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@66434cc8
[DEBUG] 2020-03-02 23:10:11.801 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66434cc8
[DEBUG] 2020-03-02 23:10:11.802 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6d467c87
[DEBUG] 2020-03-02 23:10:11.802 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6d467c87
[DEBUG] 2020-03-02 23:10:11.802 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d467c87
[DEBUG] 2020-03-02 23:10:11.803 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@511d5d04
[DEBUG] 2020-03-02 23:10:11.803 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@511d5d04
[DEBUG] 2020-03-02 23:10:11.803 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@511d5d04
[DEBUG] 2020-03-02 23:10:11.803 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@11653e3b
[DEBUG] 2020-03-02 23:10:11.803 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@11653e3b
[DEBUG] 2020-03-02 23:10:11.803 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@11653e3b
[DEBUG] 2020-03-02 23:10:11.804 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c974942
[DEBUG] 2020-03-02 23:10:11.804 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c974942
[DEBUG] 2020-03-02 23:10:11.804 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7c974942
[DEBUG] 2020-03-02 23:10:11.805 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6b580b88
[DEBUG] 2020-03-02 23:10:11.805 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6b580b88
[DEBUG] 2020-03-02 23:10:11.805 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b580b88
[DEBUG] 2020-03-02 23:10:11.805 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6f8f8a80
[DEBUG] 2020-03-02 23:10:11.805 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6f8f8a80
[DEBUG] 2020-03-02 23:10:11.805 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f8f8a80
[DEBUG] 2020-03-02 23:10:11.806 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7004e3d
[DEBUG] 2020-03-02 23:10:11.806 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7004e3d
[DEBUG] 2020-03-02 23:10:11.806 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@25d958c6
[DEBUG] 2020-03-02 23:10:11.807 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@25d958c6
[DEBUG] 2020-03-02 23:10:11.807 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@695a69a1
[DEBUG] 2020-03-02 23:10:11.807 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@695a69a1
[DEBUG] 2020-03-02 23:10:11.807 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5eeedb60
[DEBUG] 2020-03-02 23:10:11.808 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1b32cd16
[DEBUG] 2020-03-02 23:10:11.808 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@19593091
[DEBUG] 2020-03-02 23:10:11.808 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@19593091
[DEBUG] 2020-03-02 23:10:11.809 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4e868ef5
[DEBUG] 2020-03-02 23:10:11.809 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4e868ef5
[DEBUG] 2020-03-02 23:10:11.811 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2f879bab
[DEBUG] 2020-03-02 23:10:11.811 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f879bab
[DEBUG] 2020-03-02 23:10:11.812 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1d207fad
[DEBUG] 2020-03-02 23:10:11.812 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1d207fad
[DEBUG] 2020-03-02 23:10:11.812 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@488b50ec
[DEBUG] 2020-03-02 23:10:11.812 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@488b50ec
[DEBUG] 2020-03-02 23:10:11.813 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6d2d99fc
[DEBUG] 2020-03-02 23:10:11.813 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6d2d99fc
[DEBUG] 2020-03-02 23:10:11.813 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3a095ec0
[DEBUG] 2020-03-02 23:10:11.814 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3a095ec0
[DEBUG] 2020-03-02 23:10:11.814 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7e8a46b7
[DEBUG] 2020-03-02 23:10:11.814 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7e8a46b7
[DEBUG] 2020-03-02 23:10:11.815 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e6308a9
[DEBUG] 2020-03-02 23:10:11.815 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e6308a9
[DEBUG] 2020-03-02 23:10:11.816 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@43cf6ea3
[DEBUG] 2020-03-02 23:10:11.816 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@43cf6ea3
[DEBUG] 2020-03-02 23:10:11.816 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5ecba515
[DEBUG] 2020-03-02 23:10:11.817 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5ecba515
[DEBUG] 2020-03-02 23:10:11.817 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@64f555e7
[DEBUG] 2020-03-02 23:10:11.817 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@64f555e7
[DEBUG] 2020-03-02 23:10:11.817 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@64f555e7
[DEBUG] 2020-03-02 23:10:11.818 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@44afefd5
[DEBUG] 2020-03-02 23:10:11.819 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@30135202
[DEBUG] 2020-03-02 23:10:11.819 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@30135202
[DEBUG] 2020-03-02 23:10:11.819 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@30135202
[DEBUG] 2020-03-02 23:10:11.819 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78411116
[DEBUG] 2020-03-02 23:10:11.820 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2d195ee4
[DEBUG] 2020-03-02 23:10:11.820 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d195ee4
[DEBUG] 2020-03-02 23:10:11.820 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6b1e7ad3
[DEBUG] 2020-03-02 23:10:11.820 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6b1e7ad3
[DEBUG] 2020-03-02 23:10:11.821 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5972d253
[DEBUG] 2020-03-02 23:10:11.821 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5972d253
[DEBUG] 2020-03-02 23:10:11.821 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@551de37d
[DEBUG] 2020-03-02 23:10:11.821 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@551de37d
[DEBUG] 2020-03-02 23:10:11.822 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7a18e8d
[DEBUG] 2020-03-02 23:10:11.822 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7a18e8d
[DEBUG] 2020-03-02 23:10:11.822 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@bb095
[DEBUG] 2020-03-02 23:10:11.822 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@726a17c4
[DEBUG] 2020-03-02 23:10:11.822 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@726a17c4
[DEBUG] 2020-03-02 23:10:11.823 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@726a17c4
[DEBUG] 2020-03-02 23:10:11.823 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@40ab8a8
[DEBUG] 2020-03-02 23:10:11.823 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@40ab8a8
[DEBUG] 2020-03-02 23:10:11.823 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@40ab8a8
[DEBUG] 2020-03-02 23:10:11.824 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6dd93a21
[DEBUG] 2020-03-02 23:10:11.824 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@12a160c2
[DEBUG] 2020-03-02 23:10:11.824 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7923f5b3
[DEBUG] 2020-03-02 23:10:11.824 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7923f5b3
[DEBUG] 2020-03-02 23:10:11.824 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7923f5b3
[DEBUG] 2020-03-02 23:10:11.825 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@340b7ef6
[DEBUG] 2020-03-02 23:10:11.825 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@340b7ef6
[DEBUG] 2020-03-02 23:10:11.825 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@340b7ef6
[DEBUG] 2020-03-02 23:10:11.825 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@231baf51
[DEBUG] 2020-03-02 23:10:11.825 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5bfc257
[DEBUG] 2020-03-02 23:10:11.826 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7e46d648
[DEBUG] 2020-03-02 23:10:11.826 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e46d648
[DEBUG] 2020-03-02 23:10:11.826 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@38548b19
[DEBUG] 2020-03-02 23:10:11.827 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@12db3386
[DEBUG] 2020-03-02 23:10:11.827 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12db3386
[DEBUG] 2020-03-02 23:10:11.828 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@52fc5eb1
[DEBUG] 2020-03-02 23:10:11.828 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@52fc5eb1
[DEBUG] 2020-03-02 23:10:11.828 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2a49fe
[DEBUG] 2020-03-02 23:10:11.828 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24a298a6
[DEBUG] 2020-03-02 23:10:11.829 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@417d6615
[DEBUG] 2020-03-02 23:10:11.830 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@659a2455
[DEBUG] 2020-03-02 23:10:11.830 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@659a2455
[DEBUG] 2020-03-02 23:10:11.831 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6f8e0cee
[DEBUG] 2020-03-02 23:10:11.831 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@614aeccc
[DEBUG] 2020-03-02 23:10:11.831 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5116ac09
[DEBUG] 2020-03-02 23:10:11.831 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1bc425e7
[DEBUG] 2020-03-02 23:10:11.831 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b2a30d
[DEBUG] 2020-03-02 23:10:11.831 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@322803db
[DEBUG] 2020-03-02 23:10:11.831 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@56ba8773
[DEBUG] 2020-03-02 23:10:11.831 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6ceb7b5e
[DEBUG] 2020-03-02 23:10:11.845 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-02 23:10:11.845 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-02 23:10:11.846 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-02 23:10:11.846 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-02 23:10:11.846 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-02 23:10:11.846 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-02 23:10:11.847 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-02 23:10:11.847 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-02 23:10:11.848 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-02 23:10:11.848 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-02 23:10:11.848 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-02 23:10:11.849 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-02 23:10:11.849 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-02 23:10:11.849 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-02 23:10:11.852 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/adhound-test
[INFO ] 2020-03-02 23:10:11.852 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=devfecta}
[INFO ] 2020-03-02 23:10:11.852 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-02 23:10:11.940 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-02 23:10:12.370 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19-0ubuntu0.19.10.3
      major : 8
      minor : 0
[DEBUG] 2020-03-02 23:10:12.370 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-02 23:10:12.370 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-02 23:10:12.391 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-03-02 23:10:12.403 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-02 23:10:12.439 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-02 23:10:12.463 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-02 23:10:12.465 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6137cf6e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7942a854]
[DEBUG] 2020-03-02 23:10:12.508 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.User
[DEBUG] 2020-03-02 23:10:12.523 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 23:10:12.525 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-03-02 23:10:12.527 [main] EntityBinder - Bind entity com.adhound.entity.User on table users
[DEBUG] 2020-03-02 23:10:12.547 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.550 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-02 23:10:12.551 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:id]
[DEBUG] 2020-03-02 23:10:12.552 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-02 23:10:12.553 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-02 23:10:12.555 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 23:10:12.556 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.556 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-03-02 23:10:12.556 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:address]
[DEBUG] 2020-03-02 23:10:12.556 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-03-02 23:10:12.557 [main] PropertyBinder - Building property address
[DEBUG] 2020-03-02 23:10:12.557 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.557 [main] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-03-02 23:10:12.557 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:city]
[DEBUG] 2020-03-02 23:10:12.557 [main] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-03-02 23:10:12.557 [main] PropertyBinder - Building property city
[DEBUG] 2020-03-02 23:10:12.557 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.557 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-02 23:10:12.557 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:email]
[DEBUG] 2020-03-02 23:10:12.557 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-02 23:10:12.557 [main] PropertyBinder - Building property email
[DEBUG] 2020-03-02 23:10:12.557 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=fax, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.558 [main] PropertyBinder - MetadataSourceProcessor property fax with lazy=false
[DEBUG] 2020-03-02 23:10:12.558 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:fax]
[DEBUG] 2020-03-02 23:10:12.558 [main] SimpleValueBinder - building SimpleValue for fax
[DEBUG] 2020-03-02 23:10:12.558 [main] PropertyBinder - Building property fax
[DEBUG] 2020-03-02 23:10:12.558 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.558 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-02 23:10:12.558 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:firstName]
[DEBUG] 2020-03-02 23:10:12.558 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-02 23:10:12.558 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-03-02 23:10:12.558 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.558 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-02 23:10:12.558 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:lastName]
[DEBUG] 2020-03-02 23:10:12.558 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-02 23:10:12.558 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-03-02 23:10:12.559 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 23:10:12.559 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=locations, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.560 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.567 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.567 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=locations_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.568 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='locations_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 23:10:12.568 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 23:10:12.568 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 23:10:12.569 [main] CollectionBinder - Collection role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:12.570 [main] PropertyBinder - Building property locations
[DEBUG] 2020-03-02 23:10:12.571 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.571 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-03-02 23:10:12.571 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:password]
[DEBUG] 2020-03-02 23:10:12.571 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-03-02 23:10:12.571 [main] PropertyBinder - Building property password
[DEBUG] 2020-03-02 23:10:12.571 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.571 [main] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-03-02 23:10:12.571 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:phone]
[DEBUG] 2020-03-02 23:10:12.571 [main] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-03-02 23:10:12.571 [main] PropertyBinder - Building property phone
[DEBUG] 2020-03-02 23:10:12.571 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='state_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 23:10:12.571 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.572 [main] PropertyBinder - Building property state
[DEBUG] 2020-03-02 23:10:12.573 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=state_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.573 [main] PropertyBinder - MetadataSourceProcessor property stateId with lazy=false
[DEBUG] 2020-03-02 23:10:12.573 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:stateId]
[DEBUG] 2020-03-02 23:10:12.573 [main] SimpleValueBinder - building SimpleValue for stateId
[DEBUG] 2020-03-02 23:10:12.573 [main] PropertyBinder - Building property stateId
[DEBUG] 2020-03-02 23:10:12.573 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 23:10:12.573 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRole, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.573 [main] PropertyBinder - Building property userRole
[DEBUG] 2020-03-02 23:10:12.573 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.573 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-03-02 23:10:12.573 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:username]
[DEBUG] 2020-03-02 23:10:12.573 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-03-02 23:10:12.573 [main] PropertyBinder - Building property username
[DEBUG] 2020-03-02 23:10:12.574 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=zipcode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.574 [main] PropertyBinder - MetadataSourceProcessor property zipcode with lazy=false
[DEBUG] 2020-03-02 23:10:12.574 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:zipcode]
[DEBUG] 2020-03-02 23:10:12.574 [main] SimpleValueBinder - building SimpleValue for zipcode
[DEBUG] 2020-03-02 23:10:12.574 [main] PropertyBinder - Building property zipcode
[DEBUG] 2020-03-02 23:10:12.574 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.UserRole
[DEBUG] 2020-03-02 23:10:12.575 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 23:10:12.575 [main] EntityBinder - Import with entity name UserRole
[DEBUG] 2020-03-02 23:10:12.575 [main] EntityBinder - Bind entity com.adhound.entity.UserRole on table user_roles
[DEBUG] 2020-03-02 23:10:12.575 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.575 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-03-02 23:10:12.575 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:username]
[DEBUG] 2020-03-02 23:10:12.575 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-03-02 23:10:12.575 [main] PropertyBinder - Building property username
[DEBUG] 2020-03-02 23:10:12.576 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(username)]), username, assigned, , ...)
[DEBUG] 2020-03-02 23:10:12.576 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.576 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-02 23:10:12.576 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:id]
[DEBUG] 2020-03-02 23:10:12.577 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-02 23:10:12.577 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-02 23:10:12.577 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.577 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-03-02 23:10:12.577 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:roleName]
[DEBUG] 2020-03-02 23:10:12.577 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-03-02 23:10:12.577 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-03-02 23:10:12.577 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.Location
[DEBUG] 2020-03-02 23:10:12.577 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 23:10:12.577 [main] EntityBinder - Import with entity name Location
[DEBUG] 2020-03-02 23:10:12.577 [main] EntityBinder - Bind entity com.adhound.entity.Location on table locations
[DEBUG] 2020-03-02 23:10:12.579 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.579 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-02 23:10:12.579 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:id]
[DEBUG] 2020-03-02 23:10:12.579 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-02 23:10:12.579 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-02 23:10:12.580 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 23:10:12.580 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.580 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-03-02 23:10:12.580 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:address]
[DEBUG] 2020-03-02 23:10:12.580 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-03-02 23:10:12.580 [main] PropertyBinder - Building property address
[DEBUG] 2020-03-02 23:10:12.580 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.580 [main] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-03-02 23:10:12.580 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:city]
[DEBUG] 2020-03-02 23:10:12.580 [main] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-03-02 23:10:12.580 [main] PropertyBinder - Building property city
[DEBUG] 2020-03-02 23:10:12.580 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=fax, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.580 [main] PropertyBinder - MetadataSourceProcessor property fax with lazy=false
[DEBUG] 2020-03-02 23:10:12.580 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:fax]
[DEBUG] 2020-03-02 23:10:12.580 [main] SimpleValueBinder - building SimpleValue for fax
[DEBUG] 2020-03-02 23:10:12.580 [main] PropertyBinder - Building property fax
[DEBUG] 2020-03-02 23:10:12.581 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.581 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-02 23:10:12.581 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:name]
[DEBUG] 2020-03-02 23:10:12.581 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-02 23:10:12.581 [main] PropertyBinder - Building property name
[DEBUG] 2020-03-02 23:10:12.581 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.581 [main] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-03-02 23:10:12.581 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:phone]
[DEBUG] 2020-03-02 23:10:12.581 [main] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-03-02 23:10:12.581 [main] PropertyBinder - Building property phone
[DEBUG] 2020-03-02 23:10:12.581 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='region_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 23:10:12.581 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=region, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.581 [main] PropertyBinder - Building property region
[DEBUG] 2020-03-02 23:10:12.581 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=region_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.581 [main] PropertyBinder - MetadataSourceProcessor property regionId with lazy=false
[DEBUG] 2020-03-02 23:10:12.583 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:regionId]
[DEBUG] 2020-03-02 23:10:12.583 [main] SimpleValueBinder - building SimpleValue for regionId
[DEBUG] 2020-03-02 23:10:12.583 [main] PropertyBinder - Building property regionId
[DEBUG] 2020-03-02 23:10:12.584 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='state_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 23:10:12.584 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.584 [main] PropertyBinder - Building property state
[DEBUG] 2020-03-02 23:10:12.584 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=state_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.584 [main] PropertyBinder - MetadataSourceProcessor property stateId with lazy=false
[DEBUG] 2020-03-02 23:10:12.584 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:stateId]
[DEBUG] 2020-03-02 23:10:12.584 [main] SimpleValueBinder - building SimpleValue for stateId
[DEBUG] 2020-03-02 23:10:12.584 [main] PropertyBinder - Building property stateId
[DEBUG] 2020-03-02 23:10:12.584 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 23:10:12.584 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.584 [main] PropertyBinder - Building property user
[DEBUG] 2020-03-02 23:10:12.584 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=zipcode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.584 [main] PropertyBinder - MetadataSourceProcessor property zipcode with lazy=false
[DEBUG] 2020-03-02 23:10:12.585 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:zipcode]
[DEBUG] 2020-03-02 23:10:12.585 [main] SimpleValueBinder - building SimpleValue for zipcode
[DEBUG] 2020-03-02 23:10:12.585 [main] PropertyBinder - Building property zipcode
[DEBUG] 2020-03-02 23:10:12.585 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.Region
[DEBUG] 2020-03-02 23:10:12.585 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 23:10:12.585 [main] EntityBinder - Import with entity name Region
[DEBUG] 2020-03-02 23:10:12.585 [main] EntityBinder - Bind entity com.adhound.entity.Region on table location_regions
[DEBUG] 2020-03-02 23:10:12.585 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(location_regions), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.585 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-02 23:10:12.585 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Region:id]
[DEBUG] 2020-03-02 23:10:12.586 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-02 23:10:12.586 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-02 23:10:12.586 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 23:10:12.586 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(location_regions), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.586 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-02 23:10:12.586 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Region:description]
[DEBUG] 2020-03-02 23:10:12.586 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-02 23:10:12.586 [main] PropertyBinder - Building property description
[DEBUG] 2020-03-02 23:10:12.586 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(location_regions), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.586 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-02 23:10:12.586 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Region:name]
[DEBUG] 2020-03-02 23:10:12.586 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-02 23:10:12.586 [main] PropertyBinder - Building property name
[DEBUG] 2020-03-02 23:10:12.586 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.State
[DEBUG] 2020-03-02 23:10:12.586 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 23:10:12.586 [main] EntityBinder - Import with entity name State
[DEBUG] 2020-03-02 23:10:12.587 [main] EntityBinder - Bind entity com.adhound.entity.State on table states
[DEBUG] 2020-03-02 23:10:12.587 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.587 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-02 23:10:12.587 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:id]
[DEBUG] 2020-03-02 23:10:12.587 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-02 23:10:12.587 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-02 23:10:12.587 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 23:10:12.587 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=states_Abbreviation, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.587 [main] PropertyBinder - MetadataSourceProcessor property abbreviation with lazy=false
[DEBUG] 2020-03-02 23:10:12.587 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:abbreviation]
[DEBUG] 2020-03-02 23:10:12.587 [main] SimpleValueBinder - building SimpleValue for abbreviation
[DEBUG] 2020-03-02 23:10:12.587 [main] PropertyBinder - Building property abbreviation
[DEBUG] 2020-03-02 23:10:12.588 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=states_Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 23:10:12.588 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-02 23:10:12.588 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:name]
[DEBUG] 2020-03-02 23:10:12.588 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-02 23:10:12.588 [main] PropertyBinder - Building property name
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for city
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for fax
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for stateId
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for zipcode
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for city
[DEBUG] 2020-03-02 23:10:12.590 [main] SimpleValueBinder - Starting fillSimpleValue for fax
[DEBUG] 2020-03-02 23:10:12.591 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-02 23:10:12.591 [main] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-03-02 23:10:12.591 [main] SimpleValueBinder - Starting fillSimpleValue for regionId
[DEBUG] 2020-03-02 23:10:12.591 [main] SimpleValueBinder - Starting fillSimpleValue for stateId
[DEBUG] 2020-03-02 23:10:12.591 [main] SimpleValueBinder - Starting fillSimpleValue for zipcode
[DEBUG] 2020-03-02 23:10:12.591 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-02 23:10:12.591 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-02 23:10:12.591 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-02 23:10:12.591 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-02 23:10:12.591 [main] SimpleValueBinder - Starting fillSimpleValue for abbreviation
[DEBUG] 2020-03-02 23:10:12.591 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-02 23:10:12.595 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2020-03-02 23:10:12.595 [main] PrimaryKey - Forcing column [username] to be non-null as it is part of the primary key for table [user_roles]
[DEBUG] 2020-03-02 23:10:12.595 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [locations]
[DEBUG] 2020-03-02 23:10:12.595 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [location_regions]
[DEBUG] 2020-03-02 23:10:12.595 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [states]
[DEBUG] 2020-03-02 23:10:12.595 [main] CollectionSecondPass - Second pass for collection: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:12.596 [main] CollectionBinder - Binding a OneToMany: com.adhound.entity.User.locations through a foreign key
[DEBUG] 2020-03-02 23:10:12.596 [main] CollectionBinder - Mapping collection: com.adhound.entity.User.locations -> locations
[DEBUG] 2020-03-02 23:10:12.597 [main] TableBinder - Retrieving property com.adhound.entity.Location.user
[DEBUG] 2020-03-02 23:10:12.597 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.adhound.entity.Location
[DEBUG] 2020-03-02 23:10:12.597 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.Region
[DEBUG] 2020-03-02 23:10:12.598 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.State
[DEBUG] 2020-03-02 23:10:12.599 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.User
[DEBUG] 2020-03-02 23:10:12.599 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.State
[DEBUG] 2020-03-02 23:10:12.599 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.UserRole
[DEBUG] 2020-03-02 23:10:12.600 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.Region
[DEBUG] 2020-03-02 23:10:12.600 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.State
[DEBUG] 2020-03-02 23:10:12.600 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.User
[DEBUG] 2020-03-02 23:10:12.600 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.State
[DEBUG] 2020-03-02 23:10:12.600 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.UserRole
[DEBUG] 2020-03-02 23:10:12.646 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-03-02 23:10:12.647 [main] Settings - SessionFactory name : null
[DEBUG] 2020-03-02 23:10:12.647 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-03-02 23:10:12.647 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-03-02 23:10:12.647 [main] Settings - Statistics: disabled
[DEBUG] 2020-03-02 23:10:12.647 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-03-02 23:10:12.647 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-03-02 23:10:12.647 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-03-02 23:10:12.647 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-03-02 23:10:12.647 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Named query checking : enabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-03-02 23:10:12.648 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-03-02 23:10:12.696 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-03-02 23:10:12.721 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-03-02 23:10:12.721 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/devfecta/IdeaProjects/adhound/target/test-classes:/home/devfecta/IdeaProjects/adhound/target/classes:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/devfecta/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/devfecta/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/devfecta/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/devfecta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/devfecta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/devfecta/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/devfecta/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/devfecta/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/devfecta/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/devfecta/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/devfecta/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/devfecta/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/devfecta/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/devfecta/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/devfecta/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/devfecta/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/devfecta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/devfecta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/devfecta/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/devfecta/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/devfecta/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/devfecta/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/devfecta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/devfecta/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/devfecta/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/devfecta/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/devfecta/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/devfecta/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/devfecta/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/devfecta/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/devfecta/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/devfecta/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/devfecta/.m2/repository/org/mybatis/mybatis/3.5.4/mybatis-3.5.4.jar:, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=/home/devfecta/IdeaProjects/adhound/target/surefire/surefirebooter9809389363816931553.jar /home/devfecta/IdeaProjects/adhound/target/surefire/surefire9606255920642270247tmp /home/devfecta/IdeaProjects/adhound/target/surefire/surefire_017379693594190558464tmp, jdk.debug=release, surefire.test.class.path=/home/devfecta/IdeaProjects/adhound/target/test-classes:/home/devfecta/IdeaProjects/adhound/target/classes:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/devfecta/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/devfecta/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/devfecta/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/devfecta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/devfecta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/devfecta/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/devfecta/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/devfecta/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/devfecta/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/devfecta/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/devfecta/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/devfecta/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/devfecta/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/devfecta/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/devfecta/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/devfecta/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/devfecta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/devfecta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/devfecta/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/devfecta/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/devfecta/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/devfecta/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/devfecta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/devfecta/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/devfecta/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/devfecta/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/devfecta/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/devfecta/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/devfecta/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/devfecta/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/devfecta/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/devfecta/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/devfecta/.m2/repository/org/mybatis/mybatis/3.5.4/mybatis-3.5.4.jar:, sun.cpu.endian=little, user.home=/home/devfecta, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, basedir=/home/devfecta/IdeaProjects/adhound, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, surefire.real.class.path=/home/devfecta/IdeaProjects/adhound/target/surefire/surefirebooter9809389363816931553.jar, connection.password=m3tallica, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu119.10.1, user.name=devfecta, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-40-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/adhound-test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, localRepository=/home/devfecta/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.6, user.dir=/home/devfecta/IdeaProjects/adhound, os.arch=amd64, connection.username=devfecta, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3337d04c, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, idea.version2019.3.2=true, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu119.10.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/adhound-test, java.class.version=55.0}
[DEBUG] 2020-03-02 23:10:12.770 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-03-02 23:10:12.770 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-03-02 23:10:12.774 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-03-02 23:10:12.774 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6137cf6e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1806bc4c]
[DEBUG] 2020-03-02 23:10:12.959 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.User] is safe
[DEBUG] 2020-03-02 23:10:12.959 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.User
[DEBUG] 2020-03-02 23:10:13.142 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.User] is safe
[DEBUG] 2020-03-02 23:10:13.143 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.User
[DEBUG] 2020-03-02 23:10:13.418 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.UserRole] is safe
[DEBUG] 2020-03-02 23:10:13.418 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.UserRole
[DEBUG] 2020-03-02 23:10:13.418 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.UserRole] is safe
[DEBUG] 2020-03-02 23:10:13.418 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.UserRole
[DEBUG] 2020-03-02 23:10:13.427 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.State] is safe
[DEBUG] 2020-03-02 23:10:13.427 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.State
[DEBUG] 2020-03-02 23:10:13.427 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.State] is safe
[DEBUG] 2020-03-02 23:10:13.427 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.State
[DEBUG] 2020-03-02 23:10:13.434 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.Region] is safe
[DEBUG] 2020-03-02 23:10:13.434 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.Region
[DEBUG] 2020-03-02 23:10:13.434 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.Region] is safe
[DEBUG] 2020-03-02 23:10:13.434 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.Region
[DEBUG] 2020-03-02 23:10:13.440 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.Location] is safe
[DEBUG] 2020-03-02 23:10:13.440 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.Location
[DEBUG] 2020-03-02 23:10:13.441 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.Location] is safe
[DEBUG] 2020-03-02 23:10:13.441 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.Location
[DEBUG] 2020-03-02 23:10:13.458 [main] AbstractCollectionPersister - Static SQL for collection: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.458 [main] AbstractCollectionPersister -  Row insert: update locations set user_id=? where id=?
[DEBUG] 2020-03-02 23:10:13.458 [main] AbstractCollectionPersister -  Row update: update locations set  where id=?
[DEBUG] 2020-03-02 23:10:13.458 [main] AbstractCollectionPersister -  Row delete: update locations set user_id=null where user_id=? and id=?
[DEBUG] 2020-03-02 23:10:13.458 [main] AbstractCollectionPersister -  One-shot delete: update locations set user_id=null where user_id=?
[DEBUG] 2020-03-02 23:10:13.461 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.User
[DEBUG] 2020-03-02 23:10:13.461 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2020-03-02 23:10:13.461 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.address as address2_4_, user_.city as city3_4_, user_.email as email4_4_, user_.fax as fax5_4_, user_.first_name as first_na6_4_, user_.last_name as last_nam7_4_, user_.password as password8_4_, user_.phone as phone9_4_, user_.state_id as state_i10_4_, user_.username as usernam11_4_, user_.zipcode as zipcode12_4_ from users user_ where user_.id=?
[DEBUG] 2020-03-02 23:10:13.461 [main] AbstractEntityPersister -  Insert 0: insert into users (address, city, email, fax, first_name, last_name, password, phone, state_id, username, zipcode, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 23:10:13.461 [main] AbstractEntityPersister -  Update 0: update users set address=?, city=?, email=?, fax=?, first_name=?, last_name=?, password=?, phone=?, state_id=?, username=?, zipcode=? where id=?
[DEBUG] 2020-03-02 23:10:13.461 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2020-03-02 23:10:13.461 [main] AbstractEntityPersister -  Identity insert: insert into users (address, city, email, fax, first_name, last_name, password, phone, state_id, username, zipcode) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 23:10:13.476 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@359066bc]
[DEBUG] 2020-03-02 23:10:13.476 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-03-02 23:10:13.476 [main] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-03-02 23:10:13.476 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 23:10:13.476 [main] MetamodelGraphWalker - Visiting attribute path : fax
[DEBUG] 2020-03-02 23:10:13.476 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 23:10:13.477 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 23:10:13.477 [main] MetamodelGraphWalker - Visiting attribute path : locations
[DEBUG] 2020-03-02 23:10:13.480 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50085d9c]
[DEBUG] 2020-03-02 23:10:13.481 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bee8621]
[DEBUG] 2020-03-02 23:10:13.482 [main] MetamodelGraphWalker - Visiting attribute path : locations.address
[DEBUG] 2020-03-02 23:10:13.482 [main] MetamodelGraphWalker - Visiting attribute path : locations.city
[DEBUG] 2020-03-02 23:10:13.482 [main] MetamodelGraphWalker - Visiting attribute path : locations.fax
[DEBUG] 2020-03-02 23:10:13.482 [main] MetamodelGraphWalker - Visiting attribute path : locations.name
[DEBUG] 2020-03-02 23:10:13.482 [main] MetamodelGraphWalker - Visiting attribute path : locations.phone
[DEBUG] 2020-03-02 23:10:13.482 [main] MetamodelGraphWalker - Visiting attribute path : locations.region
[DEBUG] 2020-03-02 23:10:13.482 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23ca36d]
[DEBUG] 2020-03-02 23:10:13.483 [main] MetamodelGraphWalker - Visiting attribute path : locations.region.description
[DEBUG] 2020-03-02 23:10:13.483 [main] MetamodelGraphWalker - Visiting attribute path : locations.region.name
[DEBUG] 2020-03-02 23:10:13.483 [main] MetamodelGraphWalker - Visiting attribute path : locations.regionId
[DEBUG] 2020-03-02 23:10:13.483 [main] MetamodelGraphWalker - Visiting attribute path : locations.state
[DEBUG] 2020-03-02 23:10:13.483 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36c7cbe1]
[DEBUG] 2020-03-02 23:10:13.483 [main] MetamodelGraphWalker - Visiting attribute path : locations.state.abbreviation
[DEBUG] 2020-03-02 23:10:13.483 [main] MetamodelGraphWalker - Visiting attribute path : locations.state.name
[DEBUG] 2020-03-02 23:10:13.483 [main] MetamodelGraphWalker - Visiting attribute path : locations.stateId
[DEBUG] 2020-03-02 23:10:13.483 [main] MetamodelGraphWalker - Visiting attribute path : locations.user
[DEBUG] 2020-03-02 23:10:13.483 [main] MetamodelGraphWalker - Property path deemed to be circular : locations.user
[DEBUG] 2020-03-02 23:10:13.483 [main] MetamodelGraphWalker - Visiting attribute path : locations.zipcode
[DEBUG] 2020-03-02 23:10:13.484 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-02 23:10:13.484 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-03-02 23:10:13.484 [main] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-03-02 23:10:13.484 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43245559]
[DEBUG] 2020-03-02 23:10:13.484 [main] MetamodelGraphWalker - Visiting attribute path : state.abbreviation
[DEBUG] 2020-03-02 23:10:13.484 [main] MetamodelGraphWalker - Visiting attribute path : state.name
[DEBUG] 2020-03-02 23:10:13.484 [main] MetamodelGraphWalker - Visiting attribute path : stateId
[DEBUG] 2020-03-02 23:10:13.485 [main] MetamodelGraphWalker - Visiting attribute path : userRole
[DEBUG] 2020-03-02 23:10:13.486 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@499ee966]
[DEBUG] 2020-03-02 23:10:13.486 [main] MetamodelGraphWalker - Visiting attribute path : userRole.id
[DEBUG] 2020-03-02 23:10:13.486 [main] MetamodelGraphWalker - Visiting attribute path : userRole.roleName
[DEBUG] 2020-03-02 23:10:13.486 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-02 23:10:13.486 [main] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-03-02 23:10:13.486 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 23:10:13.495 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 23:10:13.499 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.User, querySpaceUid=<gen:0>, path=com.adhound.entity.User)
          - CollectionAttributeFetchImpl(collection=com.adhound.entity.User.locations, querySpaceUid=<gen:1>, path=com.adhound.entity.User.locations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.adhound.entity.Location, querySpaceUid=<gen:2>, path=com.adhound.entity.User.locations.<elements>)
                - EntityAttributeFetchImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:3>, path=com.adhound.entity.User.locations.<elements>.region)
                - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:4>, path=com.adhound.entity.User.locations.<elements>.state)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:5>, path=com.adhound.entity.User.state)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:6>, path=com.adhound.entity.User.userRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(locations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.adhound.entity.User.locations)
                - SQL table alias mapping - locations1_
                - alias suffix - 1_
                - suffixed key columns - {user_id10_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.adhound.entity.Location)
                      - SQL table alias mapping - locations1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(region)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.adhound.entity.Region)
                            - SQL table alias mapping - region2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                      - JOIN (JoinDefinedByMetadata(state)) : <gen:2> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.adhound.entity.State)
                            - SQL table alias mapping - state3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
          - JOIN (JoinDefinedByMetadata(state)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.adhound.entity.State)
                - SQL table alias mapping - state4_
                - alias suffix - 5_
                - suffixed key columns - {id1_2_5_}
          - JOIN (JoinDefinedByMetadata(userRole)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.adhound.entity.UserRole)
                - SQL table alias mapping - userrole5_
                - alias suffix - 6_
                - suffixed key columns - {username1_3_6_}

[DEBUG] 2020-03-02 23:10:13.501 [main] EntityLoader - Static select for entity com.adhound.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username1_3_6_, userrole5_.id as id2_3_6_, userrole5_.role_name as role_nam3_3_6_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id inner join user_roles userrole5_ on user0_.username=userrole5_.username where user0_.id=?
[DEBUG] 2020-03-02 23:10:13.501 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c604965]
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : fax
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : locations
[DEBUG] 2020-03-02 23:10:13.501 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c17c0f8]
[DEBUG] 2020-03-02 23:10:13.501 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@260e3837]
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : locations.address
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : locations.city
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : locations.fax
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : locations.name
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : locations.phone
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : locations.region
[DEBUG] 2020-03-02 23:10:13.501 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@498a612d]
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : locations.region.description
[DEBUG] 2020-03-02 23:10:13.501 [main] MetamodelGraphWalker - Visiting attribute path : locations.region.name
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : locations.regionId
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : locations.state
[DEBUG] 2020-03-02 23:10:13.502 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dfdfe7d]
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : locations.state.abbreviation
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : locations.state.name
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : locations.stateId
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : locations.user
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Property path deemed to be circular : locations.user
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : locations.zipcode
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-03-02 23:10:13.502 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f613067]
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : state.abbreviation
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : state.name
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : stateId
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : userRole
[DEBUG] 2020-03-02 23:10:13.502 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@226de93c]
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : userRole.id
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : userRole.roleName
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-02 23:10:13.502 [main] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-03-02 23:10:13.503 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 23:10:13.503 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 23:10:13.504 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.User, querySpaceUid=<gen:0>, path=com.adhound.entity.User)
          - CollectionAttributeFetchImpl(collection=com.adhound.entity.User.locations, querySpaceUid=<gen:1>, path=com.adhound.entity.User.locations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.adhound.entity.Location, querySpaceUid=<gen:2>, path=com.adhound.entity.User.locations.<elements>)
                - EntityAttributeFetchImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:3>, path=com.adhound.entity.User.locations.<elements>.region)
                - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:4>, path=com.adhound.entity.User.locations.<elements>.state)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:5>, path=com.adhound.entity.User.state)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:6>, path=com.adhound.entity.User.userRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(locations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.adhound.entity.User.locations)
                - SQL table alias mapping - locations1_
                - alias suffix - 1_
                - suffixed key columns - {user_id10_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.adhound.entity.Location)
                      - SQL table alias mapping - locations1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(region)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.adhound.entity.Region)
                            - SQL table alias mapping - region2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                      - JOIN (JoinDefinedByMetadata(state)) : <gen:2> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.adhound.entity.State)
                            - SQL table alias mapping - state3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
          - JOIN (JoinDefinedByMetadata(state)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.adhound.entity.State)
                - SQL table alias mapping - state4_
                - alias suffix - 5_
                - suffixed key columns - {id1_2_5_}
          - JOIN (JoinDefinedByMetadata(userRole)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.adhound.entity.UserRole)
                - SQL table alias mapping - userrole5_
                - alias suffix - 6_
                - suffixed key columns - {username1_3_6_}

[DEBUG] 2020-03-02 23:10:13.504 [main] EntityLoader - Static select for entity com.adhound.entity.User [READ]: select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username1_3_6_, userrole5_.id as id2_3_6_, userrole5_.role_name as role_nam3_3_6_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id inner join user_roles userrole5_ on user0_.username=userrole5_.username where user0_.id=?
[DEBUG] 2020-03-02 23:10:13.514 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.User: select user0_.id as id1_4_1_, user0_.address as address2_4_1_, user0_.city as city3_4_1_, user0_.email as email4_4_1_, user0_.fax as fax5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.password as password8_4_1_, user0_.phone as phone9_4_1_, user0_.state_id as state_i10_4_1_, user0_.username as usernam11_4_1_, user0_.zipcode as zipcode12_4_1_, locations1_.user_id as user_id10_1_3_, locations1_.id as id1_1_3_, locations1_.id as id1_1_0_, locations1_.address as address2_1_0_, locations1_.city as city3_1_0_, locations1_.fax as fax4_1_0_, locations1_.name as name5_1_0_, locations1_.phone as phone6_1_0_, locations1_.region_id as region_i7_1_0_, locations1_.state_id as state_id8_1_0_, locations1_.user_id as user_id10_1_0_, locations1_.zipcode as zipcode9_1_0_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id where user0_.id=?
[DEBUG] 2020-03-02 23:10:13.515 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.User: select user0_.id as id1_4_1_, user0_.address as address2_4_1_, user0_.city as city3_4_1_, user0_.email as email4_4_1_, user0_.fax as fax5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.password as password8_4_1_, user0_.phone as phone9_4_1_, user0_.state_id as state_i10_4_1_, user0_.username as usernam11_4_1_, user0_.zipcode as zipcode12_4_1_, locations1_.user_id as user_id10_1_3_, locations1_.id as id1_1_3_, locations1_.id as id1_1_0_, locations1_.address as address2_1_0_, locations1_.city as city3_1_0_, locations1_.fax as fax4_1_0_, locations1_.name as name5_1_0_, locations1_.phone as phone6_1_0_, locations1_.region_id as region_i7_1_0_, locations1_.state_id as state_id8_1_0_, locations1_.user_id as user_id10_1_0_, locations1_.zipcode as zipcode9_1_0_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id where user0_.id=?
[DEBUG] 2020-03-02 23:10:13.515 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.UserRole
[DEBUG] 2020-03-02 23:10:13.515 [main] AbstractEntityPersister -  Version select: select username from user_roles where username =?
[DEBUG] 2020-03-02 23:10:13.515 [main] AbstractEntityPersister -  Snapshot select: select userrole_.username, userrole_.id as id2_3_, userrole_.role_name as role_nam3_3_ from user_roles userrole_ where userrole_.username=?
[DEBUG] 2020-03-02 23:10:13.515 [main] AbstractEntityPersister -  Insert 0: insert into user_roles (id, role_name, username) values (?, ?, ?)
[DEBUG] 2020-03-02 23:10:13.515 [main] AbstractEntityPersister -  Update 0: update user_roles set id=?, role_name=? where username=?
[DEBUG] 2020-03-02 23:10:13.515 [main] AbstractEntityPersister -  Delete 0: delete from user_roles where username=?
[DEBUG] 2020-03-02 23:10:13.515 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c33da7a]
[DEBUG] 2020-03-02 23:10:13.515 [main] MetamodelGraphWalker - Visiting attribute path : id
[DEBUG] 2020-03-02 23:10:13.515 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-03-02 23:10:13.515 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 23:10:13.515 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 23:10:13.515 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:0>, path=com.adhound.entity.UserRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {username1_3_0_}

[DEBUG] 2020-03-02 23:10:13.515 [main] EntityLoader - Static select for entity com.adhound.entity.UserRole [NONE]: select userrole0_.username as username1_3_0_, userrole0_.id as id2_3_0_, userrole0_.role_name as role_nam3_3_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-03-02 23:10:13.515 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a72c4]
[DEBUG] 2020-03-02 23:10:13.516 [main] MetamodelGraphWalker - Visiting attribute path : id
[DEBUG] 2020-03-02 23:10:13.516 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-03-02 23:10:13.516 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 23:10:13.516 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 23:10:13.516 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:0>, path=com.adhound.entity.UserRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {username1_3_0_}

[DEBUG] 2020-03-02 23:10:13.516 [main] EntityLoader - Static select for entity com.adhound.entity.UserRole [READ]: select userrole0_.username as username1_3_0_, userrole0_.id as id2_3_0_, userrole0_.role_name as role_nam3_3_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-03-02 23:10:13.516 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.UserRole: select userrole0_.username as username1_3_0_, userrole0_.id as id2_3_0_, userrole0_.role_name as role_nam3_3_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-03-02 23:10:13.516 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.UserRole: select userrole0_.username as username1_3_0_, userrole0_.id as id2_3_0_, userrole0_.role_name as role_nam3_3_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-03-02 23:10:13.517 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.State
[DEBUG] 2020-03-02 23:10:13.517 [main] AbstractEntityPersister -  Version select: select id from states where id =?
[DEBUG] 2020-03-02 23:10:13.517 [main] AbstractEntityPersister -  Snapshot select: select state_.id, state_.states_Abbreviation as states_A2_2_, state_.states_Name as states_N3_2_ from states state_ where state_.id=?
[DEBUG] 2020-03-02 23:10:13.517 [main] AbstractEntityPersister -  Insert 0: insert into states (states_Abbreviation, states_Name, id) values (?, ?, ?)
[DEBUG] 2020-03-02 23:10:13.517 [main] AbstractEntityPersister -  Update 0: update states set states_Abbreviation=?, states_Name=? where id=?
[DEBUG] 2020-03-02 23:10:13.517 [main] AbstractEntityPersister -  Delete 0: delete from states where id=?
[DEBUG] 2020-03-02 23:10:13.517 [main] AbstractEntityPersister -  Identity insert: insert into states (states_Abbreviation, states_Name) values (?, ?)
[DEBUG] 2020-03-02 23:10:13.517 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@678a9516]
[DEBUG] 2020-03-02 23:10:13.517 [main] MetamodelGraphWalker - Visiting attribute path : abbreviation
[DEBUG] 2020-03-02 23:10:13.517 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 23:10:13.517 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 23:10:13.517 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 23:10:13.517 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.State)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:0>, path=com.adhound.entity.State)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2020-03-02 23:10:13.517 [main] EntityLoader - Static select for entity com.adhound.entity.State [NONE]: select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-03-02 23:10:13.517 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b950f82]
[DEBUG] 2020-03-02 23:10:13.517 [main] MetamodelGraphWalker - Visiting attribute path : abbreviation
[DEBUG] 2020-03-02 23:10:13.517 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 23:10:13.517 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 23:10:13.518 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 23:10:13.518 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.State)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:0>, path=com.adhound.entity.State)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2020-03-02 23:10:13.518 [main] EntityLoader - Static select for entity com.adhound.entity.State [READ]: select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-03-02 23:10:13.518 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.State: select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-03-02 23:10:13.518 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.State: select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-03-02 23:10:13.518 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.Region
[DEBUG] 2020-03-02 23:10:13.518 [main] AbstractEntityPersister -  Version select: select id from location_regions where id =?
[DEBUG] 2020-03-02 23:10:13.518 [main] AbstractEntityPersister -  Snapshot select: select region_.id, region_.description as descript2_0_, region_.name as name3_0_ from location_regions region_ where region_.id=?
[DEBUG] 2020-03-02 23:10:13.518 [main] AbstractEntityPersister -  Insert 0: insert into location_regions (description, name, id) values (?, ?, ?)
[DEBUG] 2020-03-02 23:10:13.518 [main] AbstractEntityPersister -  Update 0: update location_regions set description=?, name=? where id=?
[DEBUG] 2020-03-02 23:10:13.518 [main] AbstractEntityPersister -  Delete 0: delete from location_regions where id=?
[DEBUG] 2020-03-02 23:10:13.518 [main] AbstractEntityPersister -  Identity insert: insert into location_regions (description, name) values (?, ?)
[DEBUG] 2020-03-02 23:10:13.518 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e243175]
[DEBUG] 2020-03-02 23:10:13.518 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 23:10:13.518 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 23:10:13.519 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 23:10:13.519 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 23:10:13.519 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.Region)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:0>, path=com.adhound.entity.Region)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.Region)
          - SQL table alias mapping - region0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-03-02 23:10:13.519 [main] EntityLoader - Static select for entity com.adhound.entity.Region [NONE]: select region0_.id as id1_0_0_, region0_.description as descript2_0_0_, region0_.name as name3_0_0_ from location_regions region0_ where region0_.id=?
[DEBUG] 2020-03-02 23:10:13.519 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d0cdb6]
[DEBUG] 2020-03-02 23:10:13.519 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 23:10:13.519 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 23:10:13.519 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 23:10:13.519 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 23:10:13.519 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.Region)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:0>, path=com.adhound.entity.Region)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.Region)
          - SQL table alias mapping - region0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-03-02 23:10:13.520 [main] EntityLoader - Static select for entity com.adhound.entity.Region [READ]: select region0_.id as id1_0_0_, region0_.description as descript2_0_0_, region0_.name as name3_0_0_ from location_regions region0_ where region0_.id=?
[DEBUG] 2020-03-02 23:10:13.520 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.Region: select region0_.id as id1_0_0_, region0_.description as descript2_0_0_, region0_.name as name3_0_0_ from location_regions region0_ where region0_.id=?
[DEBUG] 2020-03-02 23:10:13.520 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.Region: select region0_.id as id1_0_0_, region0_.description as descript2_0_0_, region0_.name as name3_0_0_ from location_regions region0_ where region0_.id=?
[DEBUG] 2020-03-02 23:10:13.520 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.Location
[DEBUG] 2020-03-02 23:10:13.520 [main] AbstractEntityPersister -  Version select: select id from locations where id =?
[DEBUG] 2020-03-02 23:10:13.520 [main] AbstractEntityPersister -  Snapshot select: select location_.id, location_.address as address2_1_, location_.city as city3_1_, location_.fax as fax4_1_, location_.name as name5_1_, location_.phone as phone6_1_, location_.region_id as region_i7_1_, location_.state_id as state_id8_1_, location_.user_id as user_id10_1_, location_.zipcode as zipcode9_1_ from locations location_ where location_.id=?
[DEBUG] 2020-03-02 23:10:13.520 [main] AbstractEntityPersister -  Insert 0: insert into locations (address, city, fax, name, phone, region_id, state_id, user_id, zipcode, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 23:10:13.520 [main] AbstractEntityPersister -  Update 0: update locations set address=?, city=?, fax=?, name=?, phone=?, region_id=?, state_id=?, user_id=?, zipcode=? where id=?
[DEBUG] 2020-03-02 23:10:13.520 [main] AbstractEntityPersister -  Delete 0: delete from locations where id=?
[DEBUG] 2020-03-02 23:10:13.520 [main] AbstractEntityPersister -  Identity insert: insert into locations (address, city, fax, name, phone, region_id, state_id, user_id, zipcode) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 23:10:13.520 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@629e8212]
[DEBUG] 2020-03-02 23:10:13.520 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-03-02 23:10:13.520 [main] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-03-02 23:10:13.520 [main] MetamodelGraphWalker - Visiting attribute path : fax
[DEBUG] 2020-03-02 23:10:13.520 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 23:10:13.520 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-03-02 23:10:13.520 [main] MetamodelGraphWalker - Visiting attribute path : region
[DEBUG] 2020-03-02 23:10:13.520 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ee9aa7]
[DEBUG] 2020-03-02 23:10:13.520 [main] MetamodelGraphWalker - Visiting attribute path : region.description
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : region.name
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : regionId
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-03-02 23:10:13.521 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58dad04a]
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : state.abbreviation
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : state.name
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : stateId
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 23:10:13.521 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@113ee1ce]
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user.fax
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user.locations
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Property path deemed to be circular : user.locations
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-03-02 23:10:13.521 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43da0955]
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user.state.abbreviation
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user.state.name
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user.stateId
[DEBUG] 2020-03-02 23:10:13.521 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole
[DEBUG] 2020-03-02 23:10:13.522 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d963d70]
[DEBUG] 2020-03-02 23:10:13.522 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole.id
[DEBUG] 2020-03-02 23:10:13.522 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole.roleName
[DEBUG] 2020-03-02 23:10:13.522 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 23:10:13.522 [main] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-03-02 23:10:13.522 [main] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-03-02 23:10:13.522 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 23:10:13.522 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 23:10:13.523 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.Location)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.Location, querySpaceUid=<gen:0>, path=com.adhound.entity.Location)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:1>, path=com.adhound.entity.Location.region)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:2>, path=com.adhound.entity.Location.state)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.User, querySpaceUid=<gen:3>, path=com.adhound.entity.Location.user)
             - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:4>, path=com.adhound.entity.Location.user.state)
             - EntityAttributeFetchImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:5>, path=com.adhound.entity.Location.user.userRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.Location)
          - SQL table alias mapping - location0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(region)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.adhound.entity.Region)
                - SQL table alias mapping - region1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(state)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.adhound.entity.State)
                - SQL table alias mapping - state2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.adhound.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(state)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.adhound.entity.State)
                      - SQL table alias mapping - state4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_2_4_}
                - JOIN (JoinDefinedByMetadata(userRole)) : <gen:3> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.adhound.entity.UserRole)
                      - SQL table alias mapping - userrole5_
                      - alias suffix - 5_
                      - suffixed key columns - {username1_3_5_}

[DEBUG] 2020-03-02 23:10:13.523 [main] EntityLoader - Static select for entity com.adhound.entity.Location [NONE]: select location0_.id as id1_1_0_, location0_.address as address2_1_0_, location0_.city as city3_1_0_, location0_.fax as fax4_1_0_, location0_.name as name5_1_0_, location0_.phone as phone6_1_0_, location0_.region_id as region_i7_1_0_, location0_.state_id as state_id8_1_0_, location0_.user_id as user_id10_1_0_, location0_.zipcode as zipcode9_1_0_, region1_.id as id1_0_1_, region1_.description as descript2_0_1_, region1_.name as name3_0_1_, state2_.id as id1_2_2_, state2_.states_Abbreviation as states_A2_2_2_, state2_.states_Name as states_N3_2_2_, user3_.id as id1_4_3_, user3_.address as address2_4_3_, user3_.city as city3_4_3_, user3_.email as email4_4_3_, user3_.fax as fax5_4_3_, user3_.first_name as first_na6_4_3_, user3_.last_name as last_nam7_4_3_, user3_.password as password8_4_3_, user3_.phone as phone9_4_3_, user3_.state_id as state_i10_4_3_, user3_.username as usernam11_4_3_, user3_.zipcode as zipcode12_4_3_, state4_.id as id1_2_4_, state4_.states_Abbreviation as states_A2_2_4_, state4_.states_Name as states_N3_2_4_, userrole5_.username as username1_3_5_, userrole5_.id as id2_3_5_, userrole5_.role_name as role_nam3_3_5_ from locations location0_ inner join location_regions region1_ on location0_.region_id=region1_.id inner join states state2_ on location0_.state_id=state2_.id left outer join users user3_ on location0_.user_id=user3_.id left outer join states state4_ on user3_.state_id=state4_.id left outer join user_roles userrole5_ on user3_.username=userrole5_.username where location0_.id=?
[DEBUG] 2020-03-02 23:10:13.523 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55736cfe]
[DEBUG] 2020-03-02 23:10:13.523 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-03-02 23:10:13.523 [main] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-03-02 23:10:13.523 [main] MetamodelGraphWalker - Visiting attribute path : fax
[DEBUG] 2020-03-02 23:10:13.523 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 23:10:13.523 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-03-02 23:10:13.523 [main] MetamodelGraphWalker - Visiting attribute path : region
[DEBUG] 2020-03-02 23:10:13.523 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7a2a5]
[DEBUG] 2020-03-02 23:10:13.523 [main] MetamodelGraphWalker - Visiting attribute path : region.description
[DEBUG] 2020-03-02 23:10:13.523 [main] MetamodelGraphWalker - Visiting attribute path : region.name
[DEBUG] 2020-03-02 23:10:13.523 [main] MetamodelGraphWalker - Visiting attribute path : regionId
[DEBUG] 2020-03-02 23:10:13.523 [main] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-03-02 23:10:13.523 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c3719e5]
[DEBUG] 2020-03-02 23:10:13.524 [main] MetamodelGraphWalker - Visiting attribute path : state.abbreviation
[DEBUG] 2020-03-02 23:10:13.524 [main] MetamodelGraphWalker - Visiting attribute path : state.name
[DEBUG] 2020-03-02 23:10:13.524 [main] MetamodelGraphWalker - Visiting attribute path : stateId
[DEBUG] 2020-03-02 23:10:13.524 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 23:10:13.524 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e180aaf]
[DEBUG] 2020-03-02 23:10:13.524 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-03-02 23:10:13.524 [main] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-03-02 23:10:13.524 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 23:10:13.524 [main] MetamodelGraphWalker - Visiting attribute path : user.fax
[DEBUG] 2020-03-02 23:10:13.524 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 23:10:13.524 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 23:10:13.524 [main] MetamodelGraphWalker - Visiting attribute path : user.locations
[DEBUG] 2020-03-02 23:10:13.525 [main] MetamodelGraphWalker - Property path deemed to be circular : user.locations
[DEBUG] 2020-03-02 23:10:13.525 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 23:10:13.525 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-03-02 23:10:13.525 [main] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-03-02 23:10:13.525 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44592c39]
[DEBUG] 2020-03-02 23:10:13.525 [main] MetamodelGraphWalker - Visiting attribute path : user.state.abbreviation
[DEBUG] 2020-03-02 23:10:13.525 [main] MetamodelGraphWalker - Visiting attribute path : user.state.name
[DEBUG] 2020-03-02 23:10:13.525 [main] MetamodelGraphWalker - Visiting attribute path : user.stateId
[DEBUG] 2020-03-02 23:10:13.525 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole
[DEBUG] 2020-03-02 23:10:13.525 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d480b9]
[DEBUG] 2020-03-02 23:10:13.525 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole.id
[DEBUG] 2020-03-02 23:10:13.525 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole.roleName
[DEBUG] 2020-03-02 23:10:13.525 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 23:10:13.525 [main] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-03-02 23:10:13.525 [main] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-03-02 23:10:13.525 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 23:10:13.525 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 23:10:13.526 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.Location)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.Location, querySpaceUid=<gen:0>, path=com.adhound.entity.Location)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:1>, path=com.adhound.entity.Location.region)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:2>, path=com.adhound.entity.Location.state)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.User, querySpaceUid=<gen:3>, path=com.adhound.entity.Location.user)
             - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:4>, path=com.adhound.entity.Location.user.state)
             - EntityAttributeFetchImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:5>, path=com.adhound.entity.Location.user.userRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.Location)
          - SQL table alias mapping - location0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(region)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.adhound.entity.Region)
                - SQL table alias mapping - region1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(state)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.adhound.entity.State)
                - SQL table alias mapping - state2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.adhound.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(state)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.adhound.entity.State)
                      - SQL table alias mapping - state4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_2_4_}
                - JOIN (JoinDefinedByMetadata(userRole)) : <gen:3> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.adhound.entity.UserRole)
                      - SQL table alias mapping - userrole5_
                      - alias suffix - 5_
                      - suffixed key columns - {username1_3_5_}

[DEBUG] 2020-03-02 23:10:13.526 [main] EntityLoader - Static select for entity com.adhound.entity.Location [READ]: select location0_.id as id1_1_0_, location0_.address as address2_1_0_, location0_.city as city3_1_0_, location0_.fax as fax4_1_0_, location0_.name as name5_1_0_, location0_.phone as phone6_1_0_, location0_.region_id as region_i7_1_0_, location0_.state_id as state_id8_1_0_, location0_.user_id as user_id10_1_0_, location0_.zipcode as zipcode9_1_0_, region1_.id as id1_0_1_, region1_.description as descript2_0_1_, region1_.name as name3_0_1_, state2_.id as id1_2_2_, state2_.states_Abbreviation as states_A2_2_2_, state2_.states_Name as states_N3_2_2_, user3_.id as id1_4_3_, user3_.address as address2_4_3_, user3_.city as city3_4_3_, user3_.email as email4_4_3_, user3_.fax as fax5_4_3_, user3_.first_name as first_na6_4_3_, user3_.last_name as last_nam7_4_3_, user3_.password as password8_4_3_, user3_.phone as phone9_4_3_, user3_.state_id as state_i10_4_3_, user3_.username as usernam11_4_3_, user3_.zipcode as zipcode12_4_3_, state4_.id as id1_2_4_, state4_.states_Abbreviation as states_A2_2_4_, state4_.states_Name as states_N3_2_4_, userrole5_.username as username1_3_5_, userrole5_.id as id2_3_5_, userrole5_.role_name as role_nam3_3_5_ from locations location0_ inner join location_regions region1_ on location0_.region_id=region1_.id inner join states state2_ on location0_.state_id=state2_.id left outer join users user3_ on location0_.user_id=user3_.id left outer join states state4_ on user3_.state_id=state4_.id left outer join user_roles userrole5_ on user3_.username=userrole5_.username where location0_.id=?
[DEBUG] 2020-03-02 23:10:13.527 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.Location: select location0_.id as id1_1_0_, location0_.address as address2_1_0_, location0_.city as city3_1_0_, location0_.fax as fax4_1_0_, location0_.name as name5_1_0_, location0_.phone as phone6_1_0_, location0_.region_id as region_i7_1_0_, location0_.state_id as state_id8_1_0_, location0_.user_id as user_id10_1_0_, location0_.zipcode as zipcode9_1_0_ from locations location0_ where location0_.id=?
[DEBUG] 2020-03-02 23:10:13.528 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.Location: select location0_.id as id1_1_0_, location0_.address as address2_1_0_, location0_.city as city3_1_0_, location0_.fax as fax4_1_0_, location0_.name as name5_1_0_, location0_.phone as phone6_1_0_, location0_.region_id as region_i7_1_0_, location0_.state_id as state_id8_1_0_, location0_.user_id as user_id10_1_0_, location0_.zipcode as zipcode9_1_0_ from locations location0_ where location0_.id=?
[DEBUG] 2020-03-02 23:10:13.531 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7aaad0]
[DEBUG] 2020-03-02 23:10:13.531 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eed890d]
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : fax
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : region
[DEBUG] 2020-03-02 23:10:13.532 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35eee641]
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : region.description
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : region.name
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : regionId
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-03-02 23:10:13.532 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64518270]
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : state.abbreviation
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : state.name
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : stateId
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-02 23:10:13.532 [main] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-03-02 23:10:13.533 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 23:10:13.535 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 23:10:13.535 [main] LoadPlanTreePrinter - LoadPlan(collection=com.adhound.entity.User.locations)
    - Returns
       - CollectionReturnImpl(collection=com.adhound.entity.User.locations, querySpaceUid=<gen:0>, path=[com.adhound.entity.User.locations])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.adhound.entity.Location, querySpaceUid=<gen:1>, path=[com.adhound.entity.User.locations].<elements>)
             - EntityAttributeFetchImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:2>, path=[com.adhound.entity.User.locations].<elements>.region)
             - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:3>, path=[com.adhound.entity.User.locations].<elements>.state)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.adhound.entity.User.locations)
          - SQL table alias mapping - locations0_
          - alias suffix - 0_
          - suffixed key columns - {user_id10_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.adhound.entity.Location)
                - SQL table alias mapping - locations0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(region)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.adhound.entity.Region)
                      - SQL table alias mapping - region1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(state)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.adhound.entity.State)
                      - SQL table alias mapping - state2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-03-02 23:10:13.535 [main] CollectionLoader - Static select for collection com.adhound.entity.User.locations: select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-03-02 23:10:13.554 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-03-02 23:10:13.554 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-03-02 23:10:13.554 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-03-02 23:10:13.556 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-03-02 23:10:13.556 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-03-02 23:10:13.557 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-03-02 23:10:13.557 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-03-02 23:10:13.558 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5e1a5f
[DEBUG] 2020-03-02 23:10:13.558 [main] SessionFactoryRegistry - Registering SessionFactory: 2f997ae9-8c95-4543-8c65-f43b98b50b99 (<unnamed>)
[DEBUG] 2020-03-02 23:10:13.558 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-03-02 23:10:13.612 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-03-02 23:10:13.624 [main] SQL - select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username1_3_6_, userrole5_.id as id2_3_6_, userrole5_.role_name as role_nam3_3_6_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id inner join user_roles userrole5_ on user0_.username=userrole5_.username where user0_.id=?
[DEBUG] 2020-03-02 23:10:13.644 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.646 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.653 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.658 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Road
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Processing attribute `city` : value = Fitchburg
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Processing attribute `email` : value = kkelm@outlook.com
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kevin
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelm
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Processing attribute `state` : value = 49
[DEBUG] 2020-03-02 23:10:13.659 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.660 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 49
[DEBUG] 2020-03-02 23:10:13.660 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.660 [main] TwoPhaseLoad - Processing attribute `userRole` : value = kkelm
[DEBUG] 2020-03-02 23:10:13.660 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.660 [main] TwoPhaseLoad - Processing attribute `username` : value = kkelm
[DEBUG] 2020-03-02 23:10:13.660 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.660 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.660 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.661 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.661 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#49]
[DEBUG] 2020-03-02 23:10:13.661 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = WI
[DEBUG] 2020-03-02 23:10:13.661 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.661 [main] TwoPhaseLoad - Processing attribute `name` : value = Wisconsin
[DEBUG] 2020-03-02 23:10:13.661 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.661 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#49]
[DEBUG] 2020-03-02 23:10:13.661 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-03-02 23:10:13.661 [main] TwoPhaseLoad - Processing attribute `id` : value = 1
[DEBUG] 2020-03-02 23:10:13.661 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.661 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Administrator
[DEBUG] 2020-03-02 23:10:13.661 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.661 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-03-02 23:10:13.661 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.662 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.662 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.663 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.663 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#1
[DEBUG] 2020-03-02 23:10:13.663 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.688 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-03-02 23:10:13.700 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@584ca390
[DEBUG] 2020-03-02 23:10:13.716 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.adhound.entity.User as generatedAlias0
[DEBUG] 2020-03-02 23:10:13.719 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 23:10:13.723 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'adhound'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-03-02 23:10:13.740 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-03-02 23:10:13.750 [main] FromElement - FromClause{level=1} : com.adhound.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-03-02 23:10:13.751 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-03-02 23:10:13.753 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-03-02 23:10:13.753 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} users user0_ ) )
[DEBUG] 2020-03-02 23:10:13.762 [main] JoinProcessor - Using FROM fragment [users user0_]
[DEBUG] 2020-03-02 23:10:13.763 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-03-02 23:10:13.763 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=com.adhound.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address as address2_4_, user0_.city as city3_4_, user0_.email as email4_4_, user0_.fax as fax5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.password as password8_4_, user0_.phone as phone9_4_, user0_.state_id as state_i10_4_, user0_.username as usernam11_4_, user0_.zipcode as zipcode12_4_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.adhound.entity.User}}

[DEBUG] 2020-03-02 23:10:13.763 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 23:10:13.768 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.adhound.entity.User as generatedAlias0
[DEBUG] 2020-03-02 23:10:13.768 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.address as address2_4_, user0_.city as city3_4_, user0_.email as email4_4_, user0_.fax as fax5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.password as password8_4_, user0_.phone as phone9_4_, user0_.state_id as state_i10_4_, user0_.username as usernam11_4_, user0_.zipcode as zipcode12_4_ from users user0_
[DEBUG] 2020-03-02 23:10:13.768 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 23:10:13.776 [main] SQL - select user0_.id as id1_4_, user0_.address as address2_4_, user0_.city as city3_4_, user0_.email as email4_4_, user0_.fax as fax5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.password as password8_4_, user0_.phone as phone9_4_, user0_.state_id as state_i10_4_, user0_.username as usernam11_4_, user0_.zipcode as zipcode12_4_ from users user0_
[DEBUG] 2020-03-02 23:10:13.778 [main] Loader - Result set row: 0
[DEBUG] 2020-03-02 23:10:13.778 [main] Loader - Result row: EntityKey[com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.778 [main] Loader - Result set row: 1
[DEBUG] 2020-03-02 23:10:13.778 [main] Loader - Result row: EntityKey[com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.778 [main] Loader - Result set row: 2
[DEBUG] 2020-03-02 23:10:13.779 [main] Loader - Result row: EntityKey[com.adhound.entity.User#3]
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Road
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Processing attribute `city` : value = Fitchburg
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Processing attribute `email` : value = kkelm@outlook.com
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kevin
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelm
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Processing attribute `state` : value = 49
[DEBUG] 2020-03-02 23:10:13.779 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.779 [main] SQL - select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-03-02 23:10:13.781 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.781 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.781 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#49]
[DEBUG] 2020-03-02 23:10:13.781 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = WI
[DEBUG] 2020-03-02 23:10:13.781 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.781 [main] TwoPhaseLoad - Processing attribute `name` : value = Wisconsin
[DEBUG] 2020-03-02 23:10:13.781 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.781 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#49]
[DEBUG] 2020-03-02 23:10:13.781 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.781 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#49
[DEBUG] 2020-03-02 23:10:13.781 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 49
[DEBUG] 2020-03-02 23:10:13.781 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.781 [main] TwoPhaseLoad - Processing attribute `userRole` : value = kkelm
[DEBUG] 2020-03-02 23:10:13.781 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.782 [main] SQL - select userrole0_.username as username1_3_0_, userrole0_.id as id2_3_0_, userrole0_.role_name as role_nam3_3_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-03-02 23:10:13.783 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.783 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Processing attribute `id` : value = 1
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Administrator
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-03-02 23:10:13.784 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.784 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#kkelm
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Processing attribute `username` : value = kkelm
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Processing attribute `email` : value = test@gmail.com
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Darth
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vader
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Processing attribute `password` : value = test
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Processing attribute `state` : value = 25
[DEBUG] 2020-03-02 23:10:13.784 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.784 [main] SQL - select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-03-02 23:10:13.785 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.785 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.785 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:13.785 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = MO
[DEBUG] 2020-03-02 23:10:13.785 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.785 [main] TwoPhaseLoad - Processing attribute `name` : value = Missouri
[DEBUG] 2020-03-02 23:10:13.786 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.786 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:13.786 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.786 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#25
[DEBUG] 2020-03-02 23:10:13.786 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 25
[DEBUG] 2020-03-02 23:10:13.786 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.786 [main] TwoPhaseLoad - Processing attribute `userRole` : value = distributor
[DEBUG] 2020-03-02 23:10:13.786 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.786 [main] SQL - select userrole0_.username as username1_3_0_, userrole0_.id as id2_3_0_, userrole0_.role_name as role_nam3_3_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-03-02 23:10:13.786 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.787 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Processing attribute `id` : value = 2
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:13.787 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.787 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#distributor
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Processing attribute `username` : value = distributor
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#3]
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Circle
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Processing attribute `city` : value = Markesan
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Processing attribute `email` : value = test@yahoo.com
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Luke
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Skywalker
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Processing attribute `password` : value = 123abc
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.787 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.787 [main] SQL - select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-03-02 23:10:13.789 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.789 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.789 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.789 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-03-02 23:10:13.789 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.789 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-03-02 23:10:13.789 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.789 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.789 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.789 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#33
[DEBUG] 2020-03-02 23:10:13.789 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.789 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.789 [main] TwoPhaseLoad - Processing attribute `userRole` : value = runner
[DEBUG] 2020-03-02 23:10:13.789 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.789 [main] SQL - select userrole0_.username as username1_3_0_, userrole0_.id as id2_3_0_, userrole0_.role_name as role_nam3_3_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-03-02 23:10:13.790 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.790 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.790 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#runner]
[DEBUG] 2020-03-02 23:10:13.790 [main] TwoPhaseLoad - Processing attribute `id` : value = 3
[DEBUG] 2020-03-02 23:10:13.790 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.790 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Runner
[DEBUG] 2020-03-02 23:10:13.790 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.790 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#runner]
[DEBUG] 2020-03-02 23:10:13.790 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.790 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#runner
[DEBUG] 2020-03-02 23:10:13.790 [main] TwoPhaseLoad - Processing attribute `username` : value = runner
[DEBUG] 2020-03-02 23:10:13.790 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.790 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.790 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.790 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#3]
[DEBUG] 2020-03-02 23:10:13.792 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.adhound.entity.User.locations#3]
[DEBUG] 2020-03-02 23:10:13.792 [main] SQL - select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-03-02 23:10:13.794 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.adhound.entity.User.locations#3]
[DEBUG] 2020-03-02 23:10:13.794 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.794 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#3]
[DEBUG] 2020-03-02 23:10:13.794 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.794 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.794 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 23:10:13.794 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.794 [main] SQL - select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-03-02 23:10:13.795 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.796 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.796 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.796 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-03-02 23:10:13.796 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.796 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.796 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.796 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.796 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.796 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.796 [main] TwoPhaseLoad - Processing attribute `fax` : value = (987) 654-3210
[DEBUG] 2020-03-02 23:10:13.796 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.796 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Location 51 Updated Updated
[DEBUG] 2020-03-02 23:10:13.796 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.796 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.796 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.796 [main] TwoPhaseLoad - Processing attribute `region` : value = 1
[DEBUG] 2020-03-02 23:10:13.796 [main] TwoPhaseLoad - Attribute (`region`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.796 [main] TwoPhaseLoad - Processing attribute `regionId` : value = 1
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`regionId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `description` : value = Test Region 1 Description
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Region 1
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Location#127]
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `fax` : value = (987) 654-3210
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Location 46
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `region` : value = 1
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`region`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `regionId` : value = 1
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`regionId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.797 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Location#127]
[DEBUG] 2020-03-02 23:10:13.797 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.798 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.798 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.798 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.798 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 23:10:13.798 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.798 [main] SQL - select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-03-02 23:10:13.799 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.799 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.800 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.800 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.800 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.800 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 23:10:13.801 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.803 [main] SQL - select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username1_3_6_, userrole5_.id as id2_3_6_, userrole5_.role_name as role_nam3_3_6_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id inner join user_roles userrole5_ on user0_.username=userrole5_.username where user0_.id=?
[DEBUG] 2020-03-02 23:10:13.806 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.806 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.807 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Road
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `city` : value = Fitchburg
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `email` : value = kkelm@outlook.com
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kevin
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelm
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `state` : value = 49
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 49
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `userRole` : value = kkelm
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `username` : value = kkelm
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#49]
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = WI
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `name` : value = Wisconsin
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#49]
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `id` : value = 1
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Administrator
[DEBUG] 2020-03-02 23:10:13.807 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.808 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-03-02 23:10:13.808 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.808 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.808 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.808 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.808 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#1
[DEBUG] 2020-03-02 23:10:13.808 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.810 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-03-02 23:10:13.810 [main] TransactionImpl - begin
[DEBUG] 2020-03-02 23:10:13.816 [main] TransactionImpl - committing
[DEBUG] 2020-03-02 23:10:13.816 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-03-02 23:10:13.816 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-03-02 23:10:13.822 [main] Collections - Collection found: [com.adhound.entity.User.locations#1], was: [com.adhound.entity.User.locations#1] (initialized)
[DEBUG] 2020-03-02 23:10:13.822 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-03-02 23:10:13.822 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2020-03-02 23:10:13.823 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-03-02 23:10:13.823 [main] EntityPrinter - com.adhound.entity.User{lastName=Kelm, address=123 Test Road, city=Fitchburg, stateId=49, zipcode=12345-67890, firstName=Kevin, password=testPassword, phone=(123) 456-7890, locations=[], id=1, state=com.adhound.entity.State#49, fax=(123) 789-4560, userRole=com.adhound.entity.UserRole#kkelm, email=kkelm@outlook.com, username=kkelm}
[DEBUG] 2020-03-02 23:10:13.825 [main] SQL - update users set address=?, city=?, email=?, fax=?, first_name=?, last_name=?, password=?, phone=?, state_id=?, username=?, zipcode=? where id=?
[DEBUG] 2020-03-02 23:10:13.828 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.828 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.828 [main] SQL - select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username1_3_6_, userrole5_.id as id2_3_6_, userrole5_.role_name as role_nam3_3_6_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id inner join user_roles userrole5_ on user0_.username=userrole5_.username where user0_.id=?
[DEBUG] 2020-03-02 23:10:13.831 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.831 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.832 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Road
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Processing attribute `city` : value = Fitchburg
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Processing attribute `email` : value = kkelm@outlook.com
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kevin
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelm
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Processing attribute `state` : value = 49
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 49
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Processing attribute `userRole` : value = kkelm
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Processing attribute `username` : value = kkelm
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.832 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#49]
[DEBUG] 2020-03-02 23:10:13.833 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = WI
[DEBUG] 2020-03-02 23:10:13.833 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.833 [main] TwoPhaseLoad - Processing attribute `name` : value = Wisconsin
[DEBUG] 2020-03-02 23:10:13.833 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.833 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#49]
[DEBUG] 2020-03-02 23:10:13.833 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-03-02 23:10:13.833 [main] TwoPhaseLoad - Processing attribute `id` : value = 1
[DEBUG] 2020-03-02 23:10:13.833 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.833 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Administrator
[DEBUG] 2020-03-02 23:10:13.833 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.833 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-03-02 23:10:13.833 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.833 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.833 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.833 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.833 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#1
[DEBUG] 2020-03-02 23:10:13.833 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.840 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-03-02 23:10:13.840 [main] TransactionImpl - begin
[DEBUG] 2020-03-02 23:10:13.844 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-03-02 23:10:13.844 [main] SQL - insert into users (address, city, email, fax, first_name, last_name, password, phone, state_id, username, zipcode) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 23:10:13.848 [main] IdentifierGeneratorHelper - Natively generated identity: 132
[DEBUG] 2020-03-02 23:10:13.848 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.848 [main] TransactionImpl - committing
[DEBUG] 2020-03-02 23:10:13.848 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-03-02 23:10:13.848 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-03-02 23:10:13.849 [main] Collections - Collection found: [com.adhound.entity.User.locations#132], was: [<unreferenced>] (initialized)
[DEBUG] 2020-03-02 23:10:13.849 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-03-02 23:10:13.849 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2020-03-02 23:10:13.849 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-03-02 23:10:13.849 [main] EntityPrinter - com.adhound.entity.User{lastName=testLastName, address=123 Test Street, city=testCity, stateId=33, zipcode=12345, firstName=testFirstName, password=testPassword, phone=123-456-7890, locations=[], id=132, state=null, fax=987-654-3210, userRole=null, email=test@email.com, username=testUsername23}
[DEBUG] 2020-03-02 23:10:13.852 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.853 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.853 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-03-02 23:10:13.853 [main] TransactionImpl - begin
[DEBUG] 2020-03-02 23:10:13.855 [main] AbstractSaveEventListener - Generated identifier: testUsername23, using strategy: org.hibernate.id.Assigned
[DEBUG] 2020-03-02 23:10:13.855 [main] TransactionImpl - committing
[DEBUG] 2020-03-02 23:10:13.855 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-03-02 23:10:13.855 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-03-02 23:10:13.855 [main] AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-03-02 23:10:13.855 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-03-02 23:10:13.855 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-03-02 23:10:13.855 [main] EntityPrinter - com.adhound.entity.UserRole{roleName=Distributor, id=0, username=testUsername23}
[DEBUG] 2020-03-02 23:10:13.856 [main] SQL - insert into user_roles (id, role_name, username) values (?, ?, ?)
[DEBUG] 2020-03-02 23:10:13.859 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.859 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.860 [main] SQL - select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username1_3_6_, userrole5_.id as id2_3_6_, userrole5_.role_name as role_nam3_3_6_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id inner join user_roles userrole5_ on user0_.username=userrole5_.username where user0_.id=?
[DEBUG] 2020-03-02 23:10:13.861 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.862 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.862 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.adhound.entity.User.locations#132]
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#132]
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `city` : value = testCity
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `email` : value = test@email.com
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `fax` : value = 987-654-3210
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `firstName` : value = testFirstName
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `lastName` : value = testLastName
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `phone` : value = 123-456-7890
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `userRole` : value = testUsername23
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `username` : value = testUsername23
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#132]
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#testUsername23]
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Processing attribute `id` : value = 129
[DEBUG] 2020-03-02 23:10:13.862 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.863 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-03-02 23:10:13.863 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.863 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#testUsername23]
[DEBUG] 2020-03-02 23:10:13.863 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.863 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#132]
[DEBUG] 2020-03-02 23:10:13.863 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.863 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.863 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#132
[DEBUG] 2020-03-02 23:10:13.863 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.864 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-03-02 23:10:13.865 [main] SQL - select user0_.id as id1_4_, user0_.address as address2_4_, user0_.city as city3_4_, user0_.email as email4_4_, user0_.fax as fax5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.password as password8_4_, user0_.phone as phone9_4_, user0_.state_id as state_i10_4_, user0_.username as usernam11_4_, user0_.zipcode as zipcode12_4_ from users user0_
[DEBUG] 2020-03-02 23:10:13.866 [main] Loader - Result set row: 0
[DEBUG] 2020-03-02 23:10:13.866 [main] Loader - Result row: EntityKey[com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.870 [main] Loader - Result set row: 1
[DEBUG] 2020-03-02 23:10:13.870 [main] Loader - Result row: EntityKey[com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.870 [main] Loader - Result set row: 2
[DEBUG] 2020-03-02 23:10:13.870 [main] Loader - Result row: EntityKey[com.adhound.entity.User#3]
[DEBUG] 2020-03-02 23:10:13.870 [main] Loader - Result set row: 3
[DEBUG] 2020-03-02 23:10:13.870 [main] Loader - Result row: EntityKey[com.adhound.entity.User#132]
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Road
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Processing attribute `city` : value = Fitchburg
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Processing attribute `email` : value = kkelm@outlook.com
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kevin
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelm
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.870 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.871 [main] TwoPhaseLoad - Processing attribute `state` : value = 49
[DEBUG] 2020-03-02 23:10:13.871 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.871 [main] SQL - select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-03-02 23:10:13.873 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.873 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.873 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#49]
[DEBUG] 2020-03-02 23:10:13.873 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = WI
[DEBUG] 2020-03-02 23:10:13.873 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.873 [main] TwoPhaseLoad - Processing attribute `name` : value = Wisconsin
[DEBUG] 2020-03-02 23:10:13.873 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.873 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#49]
[DEBUG] 2020-03-02 23:10:13.873 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.873 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#49
[DEBUG] 2020-03-02 23:10:13.874 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 49
[DEBUG] 2020-03-02 23:10:13.874 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.874 [main] TwoPhaseLoad - Processing attribute `userRole` : value = kkelm
[DEBUG] 2020-03-02 23:10:13.874 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.874 [main] SQL - select userrole0_.username as username1_3_0_, userrole0_.id as id2_3_0_, userrole0_.role_name as role_nam3_3_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-03-02 23:10:13.875 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.875 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.875 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-03-02 23:10:13.875 [main] TwoPhaseLoad - Processing attribute `id` : value = 1
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Administrator
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-03-02 23:10:13.876 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.876 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#kkelm
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Processing attribute `username` : value = kkelm
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Processing attribute `email` : value = test@gmail.com
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Darth
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vader
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Processing attribute `password` : value = test
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Processing attribute `state` : value = 25
[DEBUG] 2020-03-02 23:10:13.876 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.876 [main] SQL - select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-03-02 23:10:13.877 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.877 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.877 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:13.877 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = MO
[DEBUG] 2020-03-02 23:10:13.877 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.877 [main] TwoPhaseLoad - Processing attribute `name` : value = Missouri
[DEBUG] 2020-03-02 23:10:13.877 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.877 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:13.877 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.877 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#25
[DEBUG] 2020-03-02 23:10:13.877 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 25
[DEBUG] 2020-03-02 23:10:13.877 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.877 [main] TwoPhaseLoad - Processing attribute `userRole` : value = distributor
[DEBUG] 2020-03-02 23:10:13.877 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.877 [main] SQL - select userrole0_.username as username1_3_0_, userrole0_.id as id2_3_0_, userrole0_.role_name as role_nam3_3_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-03-02 23:10:13.878 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.878 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Processing attribute `id` : value = 2
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:13.878 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.878 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#distributor
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Processing attribute `username` : value = distributor
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#3]
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Circle
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Processing attribute `city` : value = Markesan
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Processing attribute `email` : value = test@yahoo.com
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.878 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.879 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Luke
[DEBUG] 2020-03-02 23:10:13.879 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.879 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Skywalker
[DEBUG] 2020-03-02 23:10:13.879 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.879 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.879 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.879 [main] TwoPhaseLoad - Processing attribute `password` : value = 123abc
[DEBUG] 2020-03-02 23:10:13.879 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.879 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.879 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.879 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.879 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.879 [main] SQL - select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-03-02 23:10:13.880 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.880 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.880 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.880 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-03-02 23:10:13.880 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.880 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-03-02 23:10:13.880 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.880 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.880 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.880 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#33
[DEBUG] 2020-03-02 23:10:13.881 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.881 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.881 [main] TwoPhaseLoad - Processing attribute `userRole` : value = runner
[DEBUG] 2020-03-02 23:10:13.881 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.881 [main] SQL - select userrole0_.username as username1_3_0_, userrole0_.id as id2_3_0_, userrole0_.role_name as role_nam3_3_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-03-02 23:10:13.882 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.882 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#runner]
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Processing attribute `id` : value = 3
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Runner
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#runner]
[DEBUG] 2020-03-02 23:10:13.882 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.882 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#runner
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Processing attribute `username` : value = runner
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#3]
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#132]
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Processing attribute `city` : value = testCity
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Processing attribute `email` : value = test@email.com
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Processing attribute `fax` : value = 987-654-3210
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Processing attribute `firstName` : value = testFirstName
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Processing attribute `lastName` : value = testLastName
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Processing attribute `phone` : value = 123-456-7890
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.882 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.883 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.883 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.883 [main] TwoPhaseLoad - Processing attribute `userRole` : value = testUsername23
[DEBUG] 2020-03-02 23:10:13.883 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.883 [main] SQL - select userrole0_.username as username1_3_0_, userrole0_.id as id2_3_0_, userrole0_.role_name as role_nam3_3_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-03-02 23:10:13.883 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.883 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.884 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#testUsername23]
[DEBUG] 2020-03-02 23:10:13.884 [main] TwoPhaseLoad - Processing attribute `id` : value = 129
[DEBUG] 2020-03-02 23:10:13.884 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.884 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-03-02 23:10:13.884 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.884 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#testUsername23]
[DEBUG] 2020-03-02 23:10:13.884 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.884 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#testUsername23
[DEBUG] 2020-03-02 23:10:13.884 [main] TwoPhaseLoad - Processing attribute `username` : value = testUsername23
[DEBUG] 2020-03-02 23:10:13.884 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.884 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:13.884 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.884 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#132]
[DEBUG] 2020-03-02 23:10:13.884 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.adhound.entity.User.locations#132]
[DEBUG] 2020-03-02 23:10:13.884 [main] SQL - select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-03-02 23:10:13.885 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.adhound.entity.User.locations#132]
[DEBUG] 2020-03-02 23:10:13.885 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.885 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#132]
[DEBUG] 2020-03-02 23:10:13.885 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.885 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.885 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 23:10:13.886 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.adhound.entity.User.locations#3]
[DEBUG] 2020-03-02 23:10:13.886 [main] SQL - select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-03-02 23:10:13.889 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.adhound.entity.User.locations#3]
[DEBUG] 2020-03-02 23:10:13.889 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.889 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#3]
[DEBUG] 2020-03-02 23:10:13.890 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.890 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.890 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 23:10:13.890 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.890 [main] SQL - select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-03-02 23:10:13.891 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.891 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.891 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.891 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-03-02 23:10:13.892 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Processing attribute `fax` : value = (987) 654-3210
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Location 51 Updated Updated
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Processing attribute `region` : value = 1
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Attribute (`region`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Processing attribute `regionId` : value = 1
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Attribute (`regionId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.892 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Processing attribute `description` : value = Test Region 1 Description
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Region 1
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Location#127]
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Processing attribute `fax` : value = (987) 654-3210
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Location 46
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.893 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.894 [main] TwoPhaseLoad - Processing attribute `region` : value = 1
[DEBUG] 2020-03-02 23:10:13.894 [main] TwoPhaseLoad - Attribute (`region`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.894 [main] TwoPhaseLoad - Processing attribute `regionId` : value = 1
[DEBUG] 2020-03-02 23:10:13.894 [main] TwoPhaseLoad - Attribute (`regionId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.894 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.894 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.894 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.894 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.894 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 23:10:13.894 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.894 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:13.894 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.894 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Location#127]
[DEBUG] 2020-03-02 23:10:13.894 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.894 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.894 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.894 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.894 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 23:10:13.894 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.895 [main] SQL - select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-03-02 23:10:13.896 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.896 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.896 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.896 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.896 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.896 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 23:10:13.896 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.897 [main] SQL - select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username1_3_6_, userrole5_.id as id2_3_6_, userrole5_.role_name as role_nam3_3_6_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id inner join user_roles userrole5_ on user0_.username=userrole5_.username where user0_.id=?
[DEBUG] 2020-03-02 23:10:13.898 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.898 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.899 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.adhound.entity.User.locations#132]
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#132]
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `city` : value = testCity
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `email` : value = test@email.com
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `fax` : value = 987-654-3210
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `firstName` : value = testFirstName
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `lastName` : value = testLastName
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `phone` : value = 123-456-7890
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `userRole` : value = testUsername23
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `username` : value = testUsername23
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#132]
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#testUsername23]
[DEBUG] 2020-03-02 23:10:13.899 [main] TwoPhaseLoad - Processing attribute `id` : value = 129
[DEBUG] 2020-03-02 23:10:13.900 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.900 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-03-02 23:10:13.900 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.900 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#testUsername23]
[DEBUG] 2020-03-02 23:10:13.900 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.900 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#132]
[DEBUG] 2020-03-02 23:10:13.900 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.900 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.900 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#132
[DEBUG] 2020-03-02 23:10:13.900 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.901 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-03-02 23:10:13.901 [main] TransactionImpl - begin
[DEBUG] 2020-03-02 23:10:13.903 [main] SQL - select userrole_.username, userrole_.id as id2_3_, userrole_.role_name as role_nam3_3_ from user_roles userrole_ where userrole_.username=?
[DEBUG] 2020-03-02 23:10:13.904 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.904 [main] TransactionImpl - committing
[DEBUG] 2020-03-02 23:10:13.904 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-03-02 23:10:13.904 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-03-02 23:10:13.905 [main] Collections - Collection dereferenced: [com.adhound.entity.User.locations#132]
[DEBUG] 2020-03-02 23:10:13.905 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-03-02 23:10:13.905 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2020-03-02 23:10:13.905 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-03-02 23:10:13.905 [main] EntityPrinter - com.adhound.entity.User{lastName=testLastName, address=123 Test Street, city=testCity, stateId=33, zipcode=12345, firstName=testFirstName, password=testPassword, phone=123-456-7890, locations=[], id=132, state=com.adhound.entity.State#33, fax=987-654-3210, userRole=com.adhound.entity.UserRole#testUsername23, email=test@email.com, username=testUsername23}
[DEBUG] 2020-03-02 23:10:13.908 [main] SQL - delete from users where id=?
[DEBUG] 2020-03-02 23:10:13.911 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.912 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.912 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-03-02 23:10:13.913 [main] SQL - select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username1_3_6_, userrole5_.id as id2_3_6_, userrole5_.role_name as role_nam3_3_6_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id inner join user_roles userrole5_ on user0_.username=userrole5_.username where user0_.id=?
[DEBUG] 2020-03-02 23:10:13.915 [main] CollectionLoadContext - No collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.915 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.915 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#132
[DEBUG] 2020-03-02 23:10:13.915 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.936 [main] SQL - select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username1_3_6_, userrole5_.id as id2_3_6_, userrole5_.role_name as role_nam3_3_6_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id inner join user_roles userrole5_ on user0_.username=userrole5_.username where user0_.id=?
[DEBUG] 2020-03-02 23:10:13.938 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.938 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.938 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.938 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-03-02 23:10:13.938 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.938 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `email` : value = test@gmail.com
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Darth
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vader
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `password` : value = test
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `state` : value = 25
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 25
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `userRole` : value = distributor
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `username` : value = distributor
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `fax` : value = (987) 654-3210
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Location 51 Updated Updated
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `region` : value = 1
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`region`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `regionId` : value = 1
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`regionId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `description` : value = Test Region 1 Description
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Region 1
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.939 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = MO
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Processing attribute `name` : value = Missouri
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Processing attribute `id` : value = 2
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Location#127]
[DEBUG] 2020-03-02 23:10:13.940 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Processing attribute `fax` : value = (987) 654-3210
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Location 46
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Processing attribute `region` : value = 1
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Attribute (`region`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Processing attribute `regionId` : value = 1
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Attribute (`regionId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.941 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Location#127]
[DEBUG] 2020-03-02 23:10:13.941 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.941 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.941 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.941 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.941 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#2
[DEBUG] 2020-03-02 23:10:13.941 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.942 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-03-02 23:10:13.942 [main] TransactionImpl - begin
[DEBUG] 2020-03-02 23:10:13.943 [main] TransactionImpl - committing
[DEBUG] 2020-03-02 23:10:13.943 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-03-02 23:10:13.943 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-03-02 23:10:13.943 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-03-02 23:10:13.943 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-03-02 23:10:13.943 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-03-02 23:10:13.943 [main] EntityPrinter - com.adhound.entity.Location{zipcode=12345, address=123 Test Street, city=Madison, phone=(123) 456-7890, regionId=1, stateId=33, name=Test Location 46, id=127, state=com.adhound.entity.State#33, fax=(987) 654-3210, region=com.adhound.entity.Region#1, user=com.adhound.entity.User#2}
[DEBUG] 2020-03-02 23:10:13.943 [main] SQL - delete from locations where id=?
[DEBUG] 2020-03-02 23:10:13.948 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.948 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.948 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-03-02 23:10:13.948 [main] SQL - select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username1_3_6_, userrole5_.id as id2_3_6_, userrole5_.role_name as role_nam3_3_6_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id inner join user_roles userrole5_ on user0_.username=userrole5_.username where user0_.id=?
[DEBUG] 2020-03-02 23:10:13.950 [main] CollectionLoadContext - No collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.950 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.950 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#127
[DEBUG] 2020-03-02 23:10:13.950 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.952 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-03-02 23:10:13.952 [main] SQL - select user0_.id as id1_4_, user0_.address as address2_4_, user0_.city as city3_4_, user0_.email as email4_4_, user0_.fax as fax5_4_, user0_.first_name as first_na6_4_, user0_.last_name as last_nam7_4_, user0_.password as password8_4_, user0_.phone as phone9_4_, user0_.state_id as state_i10_4_, user0_.username as usernam11_4_, user0_.zipcode as zipcode12_4_ from users user0_
[DEBUG] 2020-03-02 23:10:13.953 [main] Loader - Result set row: 0
[DEBUG] 2020-03-02 23:10:13.953 [main] Loader - Result row: EntityKey[com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.953 [main] Loader - Result set row: 1
[DEBUG] 2020-03-02 23:10:13.953 [main] Loader - Result row: EntityKey[com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.954 [main] Loader - Result set row: 2
[DEBUG] 2020-03-02 23:10:13.954 [main] Loader - Result row: EntityKey[com.adhound.entity.User#3]
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Road
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Processing attribute `city` : value = Fitchburg
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Processing attribute `email` : value = kkelm@outlook.com
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kevin
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelm
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Processing attribute `state` : value = 49
[DEBUG] 2020-03-02 23:10:13.954 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.954 [main] SQL - select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-03-02 23:10:13.955 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.955 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.955 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#49]
[DEBUG] 2020-03-02 23:10:13.955 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = WI
[DEBUG] 2020-03-02 23:10:13.955 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.955 [main] TwoPhaseLoad - Processing attribute `name` : value = Wisconsin
[DEBUG] 2020-03-02 23:10:13.955 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.955 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#49]
[DEBUG] 2020-03-02 23:10:13.955 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.955 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#49
[DEBUG] 2020-03-02 23:10:13.955 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 49
[DEBUG] 2020-03-02 23:10:13.955 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.955 [main] TwoPhaseLoad - Processing attribute `userRole` : value = kkelm
[DEBUG] 2020-03-02 23:10:13.955 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.955 [main] SQL - select userrole0_.username as username1_3_0_, userrole0_.id as id2_3_0_, userrole0_.role_name as role_nam3_3_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-03-02 23:10:13.956 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.956 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Processing attribute `id` : value = 1
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Administrator
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-03-02 23:10:13.956 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.956 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#kkelm
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Processing attribute `username` : value = kkelm
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#1]
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Processing attribute `email` : value = test@gmail.com
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Darth
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vader
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Processing attribute `password` : value = test
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Processing attribute `state` : value = 25
[DEBUG] 2020-03-02 23:10:13.956 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.956 [main] SQL - select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-03-02 23:10:13.957 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.957 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.957 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:13.957 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = MO
[DEBUG] 2020-03-02 23:10:13.957 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.957 [main] TwoPhaseLoad - Processing attribute `name` : value = Missouri
[DEBUG] 2020-03-02 23:10:13.957 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.957 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:13.957 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.957 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#25
[DEBUG] 2020-03-02 23:10:13.958 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 25
[DEBUG] 2020-03-02 23:10:13.958 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.958 [main] TwoPhaseLoad - Processing attribute `userRole` : value = distributor
[DEBUG] 2020-03-02 23:10:13.958 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.958 [main] SQL - select userrole0_.username as username1_3_0_, userrole0_.id as id2_3_0_, userrole0_.role_name as role_nam3_3_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-03-02 23:10:13.959 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.959 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.959 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:13.959 [main] TwoPhaseLoad - Processing attribute `id` : value = 2
[DEBUG] 2020-03-02 23:10:13.959 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.959 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-03-02 23:10:13.959 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.959 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:13.959 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.960 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#distributor
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Processing attribute `username` : value = distributor
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#3]
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Circle
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Processing attribute `city` : value = Markesan
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Processing attribute `email` : value = test@yahoo.com
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Luke
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Skywalker
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Processing attribute `password` : value = 123abc
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.960 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.960 [main] SQL - select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-03-02 23:10:13.961 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.961 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.961 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.961 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-03-02 23:10:13.961 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.961 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-03-02 23:10:13.961 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.961 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.961 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.961 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#33
[DEBUG] 2020-03-02 23:10:13.961 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.961 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.961 [main] TwoPhaseLoad - Processing attribute `userRole` : value = runner
[DEBUG] 2020-03-02 23:10:13.962 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.962 [main] SQL - select userrole0_.username as username1_3_0_, userrole0_.id as id2_3_0_, userrole0_.role_name as role_nam3_3_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-03-02 23:10:13.962 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.962 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.963 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#runner]
[DEBUG] 2020-03-02 23:10:13.963 [main] TwoPhaseLoad - Processing attribute `id` : value = 3
[DEBUG] 2020-03-02 23:10:13.963 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.963 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Runner
[DEBUG] 2020-03-02 23:10:13.963 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.963 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#runner]
[DEBUG] 2020-03-02 23:10:13.963 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.963 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#runner
[DEBUG] 2020-03-02 23:10:13.963 [main] TwoPhaseLoad - Processing attribute `username` : value = runner
[DEBUG] 2020-03-02 23:10:13.964 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.964 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.964 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.964 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#3]
[DEBUG] 2020-03-02 23:10:13.964 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.adhound.entity.User.locations#3]
[DEBUG] 2020-03-02 23:10:13.964 [main] SQL - select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-03-02 23:10:13.965 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.adhound.entity.User.locations#3]
[DEBUG] 2020-03-02 23:10:13.965 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.965 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#3]
[DEBUG] 2020-03-02 23:10:13.965 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.965 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.965 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 23:10:13.966 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.966 [main] SQL - select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-03-02 23:10:13.966 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.966 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.967 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Processing attribute `fax` : value = (987) 654-3210
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Location 51 Updated Updated
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Processing attribute `region` : value = 1
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Attribute (`region`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Processing attribute `regionId` : value = 1
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Attribute (`regionId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Processing attribute `description` : value = Test Region 1 Description
[DEBUG] 2020-03-02 23:10:13.967 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.968 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Region 1
[DEBUG] 2020-03-02 23:10:13.968 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.968 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:13.968 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.968 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.968 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.968 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.968 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 23:10:13.968 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.968 [main] SQL - select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-03-02 23:10:13.971 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.971 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.971 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#1]
[DEBUG] 2020-03-02 23:10:13.971 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.971 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.971 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 23:10:13.971 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.972 [main] SQL - select location0_.id as id1_1_0_, location0_.address as address2_1_0_, location0_.city as city3_1_0_, location0_.fax as fax4_1_0_, location0_.name as name5_1_0_, location0_.phone as phone6_1_0_, location0_.region_id as region_i7_1_0_, location0_.state_id as state_id8_1_0_, location0_.user_id as user_id10_1_0_, location0_.zipcode as zipcode9_1_0_, region1_.id as id1_0_1_, region1_.description as descript2_0_1_, region1_.name as name3_0_1_, state2_.id as id1_2_2_, state2_.states_Abbreviation as states_A2_2_2_, state2_.states_Name as states_N3_2_2_, user3_.id as id1_4_3_, user3_.address as address2_4_3_, user3_.city as city3_4_3_, user3_.email as email4_4_3_, user3_.fax as fax5_4_3_, user3_.first_name as first_na6_4_3_, user3_.last_name as last_nam7_4_3_, user3_.password as password8_4_3_, user3_.phone as phone9_4_3_, user3_.state_id as state_i10_4_3_, user3_.username as usernam11_4_3_, user3_.zipcode as zipcode12_4_3_, state4_.id as id1_2_4_, state4_.states_Abbreviation as states_A2_2_4_, state4_.states_Name as states_N3_2_4_, userrole5_.username as username1_3_5_, userrole5_.id as id2_3_5_, userrole5_.role_name as role_nam3_3_5_ from locations location0_ inner join location_regions region1_ on location0_.region_id=region1_.id inner join states state2_ on location0_.state_id=state2_.id left outer join users user3_ on location0_.user_id=user3_.id left outer join states state4_ on user3_.state_id=state4_.id left outer join user_roles userrole5_ on user3_.username=userrole5_.username where location0_.id=?
[DEBUG] 2020-03-02 23:10:13.974 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.974 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `fax` : value = (987) 654-3210
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Location 51 Updated Updated
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `region` : value = 1
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`region`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `regionId` : value = 1
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`regionId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `description` : value = Test Region 1 Description
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Region 1
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `email` : value = test@gmail.com
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Darth
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vader
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `password` : value = test
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `state` : value = 25
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 25
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Processing attribute `userRole` : value = distributor
[DEBUG] 2020-03-02 23:10:13.975 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.976 [main] TwoPhaseLoad - Processing attribute `username` : value = distributor
[DEBUG] 2020-03-02 23:10:13.976 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.976 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.976 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.977 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.977 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:13.977 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = MO
[DEBUG] 2020-03-02 23:10:13.977 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.977 [main] TwoPhaseLoad - Processing attribute `name` : value = Missouri
[DEBUG] 2020-03-02 23:10:13.977 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.977 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:13.977 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:13.977 [main] TwoPhaseLoad - Processing attribute `id` : value = 2
[DEBUG] 2020-03-02 23:10:13.977 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.977 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-03-02 23:10:13.977 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.977 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:13.977 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.977 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.977 [main] SQL - select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-03-02 23:10:13.978 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.978 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.978 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.979 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.979 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.979 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.979 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.979 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 23:10:13.979 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.Location#125
[DEBUG] 2020-03-02 23:10:13.979 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.981 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Location as generatedAlias0
[DEBUG] 2020-03-02 23:10:13.981 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.adhound.entity.Location as generatedAlias0
[DEBUG] 2020-03-02 23:10:13.982 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 23:10:13.982 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'adhound'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Location'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-03-02 23:10:13.982 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-03-02 23:10:13.982 [main] FromElement - FromClause{level=1} : com.adhound.entity.Location (generatedAlias0) -> location0_
[DEBUG] 2020-03-02 23:10:13.982 [main] FromReferenceNode - Resolved : generatedAlias0 -> location0_.id
[DEBUG] 2020-03-02 23:10:13.982 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-03-02 23:10:13.983 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} location0_.id ) ( FromClause{level=1} locations location0_ ) )
[DEBUG] 2020-03-02 23:10:13.983 [main] JoinProcessor - Using FROM fragment [locations location0_]
[DEBUG] 2020-03-02 23:10:13.983 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-03-02 23:10:13.983 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (locations)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'location0_.id as id1_1_' {alias=generatedAlias0, className=com.adhound.entity.Location, tableAlias=location0_}
    |  \-[SQL_TOKEN] SqlFragment: 'location0_.address as address2_1_, location0_.city as city3_1_, location0_.fax as fax4_1_, location0_.name as name5_1_, location0_.phone as phone6_1_, location0_.region_id as region_i7_1_, location0_.state_id as state_id8_1_, location0_.user_id as user_id10_1_, location0_.zipcode as zipcode9_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[location0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'locations location0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=locations,tableAlias=location0_,origin=null,columns={,className=com.adhound.entity.Location}}

[DEBUG] 2020-03-02 23:10:13.983 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 23:10:13.983 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.adhound.entity.Location as generatedAlias0
[DEBUG] 2020-03-02 23:10:13.983 [main] QueryTranslatorImpl - SQL: select location0_.id as id1_1_, location0_.address as address2_1_, location0_.city as city3_1_, location0_.fax as fax4_1_, location0_.name as name5_1_, location0_.phone as phone6_1_, location0_.region_id as region_i7_1_, location0_.state_id as state_id8_1_, location0_.user_id as user_id10_1_, location0_.zipcode as zipcode9_1_ from locations location0_
[DEBUG] 2020-03-02 23:10:13.983 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 23:10:13.983 [main] SQL - select location0_.id as id1_1_, location0_.address as address2_1_, location0_.city as city3_1_, location0_.fax as fax4_1_, location0_.name as name5_1_, location0_.phone as phone6_1_, location0_.region_id as region_i7_1_, location0_.state_id as state_id8_1_, location0_.user_id as user_id10_1_, location0_.zipcode as zipcode9_1_ from locations location0_
[DEBUG] 2020-03-02 23:10:13.985 [main] Loader - Result set row: 0
[DEBUG] 2020-03-02 23:10:13.985 [main] Loader - Result row: EntityKey[com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.985 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.985 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.985 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.985 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.985 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.985 [main] TwoPhaseLoad - Processing attribute `fax` : value = (987) 654-3210
[DEBUG] 2020-03-02 23:10:13.985 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.985 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Location 51 Updated Updated
[DEBUG] 2020-03-02 23:10:13.985 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.985 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.985 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.985 [main] TwoPhaseLoad - Processing attribute `region` : value = 1
[DEBUG] 2020-03-02 23:10:13.985 [main] TwoPhaseLoad - Attribute (`region`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.985 [main] SQL - select region0_.id as id1_0_0_, region0_.description as descript2_0_0_, region0_.name as name3_0_0_ from location_regions region0_ where region0_.id=?
[DEBUG] 2020-03-02 23:10:13.986 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.986 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.986 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:13.986 [main] TwoPhaseLoad - Processing attribute `description` : value = Test Region 1 Description
[DEBUG] 2020-03-02 23:10:13.986 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.986 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Region 1
[DEBUG] 2020-03-02 23:10:13.986 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.986 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:13.986 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.986 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.Region#1
[DEBUG] 2020-03-02 23:10:13.986 [main] TwoPhaseLoad - Processing attribute `regionId` : value = 1
[DEBUG] 2020-03-02 23:10:13.986 [main] TwoPhaseLoad - Attribute (`regionId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.986 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.987 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.987 [main] SQL - select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-03-02 23:10:13.987 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.987 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.987 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.987 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-03-02 23:10:13.987 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.987 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-03-02 23:10:13.987 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.987 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.987 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.988 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#33
[DEBUG] 2020-03-02 23:10:13.988 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.988 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.988 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 23:10:13.988 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.988 [main] SQL - select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username1_3_6_, userrole5_.id as id2_3_6_, userrole5_.role_name as role_nam3_3_6_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id inner join user_roles userrole5_ on user0_.username=userrole5_.username where user0_.id=?
[DEBUG] 2020-03-02 23:10:13.988 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.988 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.989 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `email` : value = test@gmail.com
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Darth
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vader
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `password` : value = test
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `state` : value = 25
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 25
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `userRole` : value = distributor
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `username` : value = distributor
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = MO
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `name` : value = Missouri
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `id` : value = 2
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.990 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:13.990 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.991 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.991 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.991 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.991 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#2
[DEBUG] 2020-03-02 23:10:13.991 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:13.991 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.991 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.991 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.993 [main] SQL - select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username1_3_6_, userrole5_.id as id2_3_6_, userrole5_.role_name as role_nam3_3_6_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id inner join user_roles userrole5_ on user0_.username=userrole5_.username where user0_.id=?
[DEBUG] 2020-03-02 23:10:13.995 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:13.996 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:13.996 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Processing attribute `email` : value = test@gmail.com
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Darth
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vader
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Processing attribute `password` : value = test
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Processing attribute `state` : value = 25
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 25
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Processing attribute `userRole` : value = distributor
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Processing attribute `username` : value = distributor
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:13.996 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `fax` : value = (987) 654-3210
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Location 51 Updated Updated
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `region` : value = 1
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`region`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `regionId` : value = 1
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`regionId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `description` : value = Test Region 1 Description
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Region 1
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = MO
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `name` : value = Missouri
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `id` : value = 2
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:13.997 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:13.997 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.997 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:13.997 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:13.997 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:13.997 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#2
[DEBUG] 2020-03-02 23:10:13.997 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:13.999 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-03-02 23:10:13.999 [main] TransactionImpl - begin
[DEBUG] 2020-03-02 23:10:13.999 [main] TransactionImpl - committing
[DEBUG] 2020-03-02 23:10:13.999 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-03-02 23:10:13.999 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-03-02 23:10:13.999 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-03-02 23:10:13.999 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-03-02 23:10:13.999 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-03-02 23:10:13.999 [main] EntityPrinter - com.adhound.entity.Location{zipcode=12345, address=123 Test Street, city=Madison, phone=(123) 456-7890, regionId=1, stateId=33, name=Test Location 51 Updated Updated Updated, id=125, state=com.adhound.entity.State#33, fax=(987) 654-3210, region=com.adhound.entity.Region#1, user=com.adhound.entity.User#2}
[DEBUG] 2020-03-02 23:10:14.000 [main] SQL - update locations set address=?, city=?, fax=?, name=?, phone=?, region_id=?, state_id=?, user_id=?, zipcode=? where id=?
[DEBUG] 2020-03-02 23:10:14.004 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:14.005 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:14.005 [main] SQL - select location0_.id as id1_1_0_, location0_.address as address2_1_0_, location0_.city as city3_1_0_, location0_.fax as fax4_1_0_, location0_.name as name5_1_0_, location0_.phone as phone6_1_0_, location0_.region_id as region_i7_1_0_, location0_.state_id as state_id8_1_0_, location0_.user_id as user_id10_1_0_, location0_.zipcode as zipcode9_1_0_, region1_.id as id1_0_1_, region1_.description as descript2_0_1_, region1_.name as name3_0_1_, state2_.id as id1_2_2_, state2_.states_Abbreviation as states_A2_2_2_, state2_.states_Name as states_N3_2_2_, user3_.id as id1_4_3_, user3_.address as address2_4_3_, user3_.city as city3_4_3_, user3_.email as email4_4_3_, user3_.fax as fax5_4_3_, user3_.first_name as first_na6_4_3_, user3_.last_name as last_nam7_4_3_, user3_.password as password8_4_3_, user3_.phone as phone9_4_3_, user3_.state_id as state_i10_4_3_, user3_.username as usernam11_4_3_, user3_.zipcode as zipcode12_4_3_, state4_.id as id1_2_4_, state4_.states_Abbreviation as states_A2_2_4_, state4_.states_Name as states_N3_2_4_, userrole5_.username as username1_3_5_, userrole5_.id as id2_3_5_, userrole5_.role_name as role_nam3_3_5_ from locations location0_ inner join location_regions region1_ on location0_.region_id=region1_.id inner join states state2_ on location0_.state_id=state2_.id left outer join users user3_ on location0_.user_id=user3_.id left outer join states state4_ on user3_.state_id=state4_.id left outer join user_roles userrole5_ on user3_.username=userrole5_.username where location0_.id=?
[DEBUG] 2020-03-02 23:10:14.007 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:14.007 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Processing attribute `fax` : value = (987) 654-3210
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Location 51 Updated Updated Updated
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Processing attribute `region` : value = 1
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Attribute (`region`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Processing attribute `regionId` : value = 1
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Attribute (`regionId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.007 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `description` : value = Test Region 1 Description
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Region 1
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `email` : value = test@gmail.com
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Darth
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vader
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `password` : value = test
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `state` : value = 25
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 25
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `userRole` : value = distributor
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `username` : value = distributor
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = MO
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.008 [main] TwoPhaseLoad - Processing attribute `name` : value = Missouri
[DEBUG] 2020-03-02 23:10:14.009 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.009 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:14.009 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:14.009 [main] TwoPhaseLoad - Processing attribute `id` : value = 2
[DEBUG] 2020-03-02 23:10:14.009 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.009 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-03-02 23:10:14.009 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.009 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:14.009 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:14.009 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:14.009 [main] SQL - select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-03-02 23:10:14.010 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:14.010 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:14.010 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:14.010 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:14.010 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:14.010 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:14.010 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:14.010 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 23:10:14.010 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.Location#125
[DEBUG] 2020-03-02 23:10:14.010 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:14.012 [main] SQL - select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username1_3_6_, userrole5_.id as id2_3_6_, userrole5_.role_name as role_nam3_3_6_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id inner join user_roles userrole5_ on user0_.username=userrole5_.username where user0_.id=?
[DEBUG] 2020-03-02 23:10:14.014 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:14.014 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:14.014 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Processing attribute `email` : value = test@gmail.com
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Darth
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vader
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Processing attribute `password` : value = test
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Processing attribute `state` : value = 25
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 25
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Processing attribute `userRole` : value = distributor
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Processing attribute `username` : value = distributor
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.015 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `fax` : value = (987) 654-3210
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Location 51 Updated Updated Updated
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `region` : value = 1
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`region`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `regionId` : value = 1
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`regionId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `description` : value = Test Region 1 Description
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Region 1
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = MO
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `name` : value = Missouri
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `id` : value = 2
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.016 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:14.016 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:14.016 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:14.016 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:14.016 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:14.016 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#2
[DEBUG] 2020-03-02 23:10:14.016 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:14.018 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-03-02 23:10:14.018 [main] TransactionImpl - begin
[DEBUG] 2020-03-02 23:10:14.019 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-03-02 23:10:14.019 [main] SQL - insert into locations (address, city, fax, name, phone, region_id, state_id, user_id, zipcode) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 23:10:14.020 [main] IdentifierGeneratorHelper - Natively generated identity: 128
[DEBUG] 2020-03-02 23:10:14.021 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:14.022 [main] TransactionImpl - committing
[DEBUG] 2020-03-02 23:10:14.022 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-03-02 23:10:14.022 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-03-02 23:10:14.022 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-03-02 23:10:14.022 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-03-02 23:10:14.022 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-03-02 23:10:14.022 [main] EntityPrinter - com.adhound.entity.Location{zipcode=12345, address=123 Test Street, city=Madison, phone=(123) 456-7890, regionId=1, stateId=33, name=Test Location 32, id=128, state=null, fax=(987) 654-3210, region=null, user=com.adhound.entity.User#2}
[DEBUG] 2020-03-02 23:10:14.023 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:14.024 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 23:10:14.024 [main] SQL - select location0_.id as id1_1_0_, location0_.address as address2_1_0_, location0_.city as city3_1_0_, location0_.fax as fax4_1_0_, location0_.name as name5_1_0_, location0_.phone as phone6_1_0_, location0_.region_id as region_i7_1_0_, location0_.state_id as state_id8_1_0_, location0_.user_id as user_id10_1_0_, location0_.zipcode as zipcode9_1_0_, region1_.id as id1_0_1_, region1_.description as descript2_0_1_, region1_.name as name3_0_1_, state2_.id as id1_2_2_, state2_.states_Abbreviation as states_A2_2_2_, state2_.states_Name as states_N3_2_2_, user3_.id as id1_4_3_, user3_.address as address2_4_3_, user3_.city as city3_4_3_, user3_.email as email4_4_3_, user3_.fax as fax5_4_3_, user3_.first_name as first_na6_4_3_, user3_.last_name as last_nam7_4_3_, user3_.password as password8_4_3_, user3_.phone as phone9_4_3_, user3_.state_id as state_i10_4_3_, user3_.username as usernam11_4_3_, user3_.zipcode as zipcode12_4_3_, state4_.id as id1_2_4_, state4_.states_Abbreviation as states_A2_2_4_, state4_.states_Name as states_N3_2_4_, userrole5_.username as username1_3_5_, userrole5_.id as id2_3_5_, userrole5_.role_name as role_nam3_3_5_ from locations location0_ inner join location_regions region1_ on location0_.region_id=region1_.id inner join states state2_ on location0_.state_id=state2_.id left outer join users user3_ on location0_.user_id=user3_.id left outer join states state4_ on user3_.state_id=state4_.id left outer join user_roles userrole5_ on user3_.username=userrole5_.username where location0_.id=?
[DEBUG] 2020-03-02 23:10:14.026 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:14.026 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Location#128]
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Processing attribute `fax` : value = (987) 654-3210
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Location 32
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Processing attribute `region` : value = 1
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Attribute (`region`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Processing attribute `regionId` : value = 1
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Attribute (`regionId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 23:10:14.026 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Location#128]
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `description` : value = Test Region 1 Description
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Region 1
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Region#1]
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `email` : value = test@gmail.com
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Darth
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vader
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `locations` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`locations`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `password` : value = test
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `state` : value = 25
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 25
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `userRole` : value = distributor
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `username` : value = distributor
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-03-02 23:10:14.027 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.028 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#2]
[DEBUG] 2020-03-02 23:10:14.028 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:14.028 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = MO
[DEBUG] 2020-03-02 23:10:14.028 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.028 [main] TwoPhaseLoad - Processing attribute `name` : value = Missouri
[DEBUG] 2020-03-02 23:10:14.028 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.028 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#25]
[DEBUG] 2020-03-02 23:10:14.028 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:14.028 [main] TwoPhaseLoad - Processing attribute `id` : value = 2
[DEBUG] 2020-03-02 23:10:14.028 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.028 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-03-02 23:10:14.028 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.028 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-03-02 23:10:14.028 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:14.028 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:14.028 [main] SQL - select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-03-02 23:10:14.029 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:14.029 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 23:10:14.029 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:14.029 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-03-02 23:10:14.029 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:14.029 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:14.029 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-03-02 23:10:14.029 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.029 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-03-02 23:10:14.029 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.029 [main] TwoPhaseLoad - Processing attribute `fax` : value = (987) 654-3210
[DEBUG] 2020-03-02 23:10:14.029 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.029 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Location 51 Updated Updated Updated
[DEBUG] 2020-03-02 23:10:14.029 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.029 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-03-02 23:10:14.029 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.029 [main] TwoPhaseLoad - Processing attribute `region` : value = 1
[DEBUG] 2020-03-02 23:10:14.030 [main] TwoPhaseLoad - Attribute (`region`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.030 [main] TwoPhaseLoad - Processing attribute `regionId` : value = 1
[DEBUG] 2020-03-02 23:10:14.030 [main] TwoPhaseLoad - Attribute (`regionId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.030 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-03-02 23:10:14.030 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.030 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-03-02 23:10:14.030 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.030 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 23:10:14.030 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.030 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345
[DEBUG] 2020-03-02 23:10:14.030 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 23:10:14.030 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.Location#125]
[DEBUG] 2020-03-02 23:10:14.030 [main] CollectionLoadContext - 1 collections were found in result set for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:14.030 [main] CollectionLoadContext - Collection fully initialized: [com.adhound.entity.User.locations#2]
[DEBUG] 2020-03-02 23:10:14.030 [main] CollectionLoadContext - 1 collections initialized for role: com.adhound.entity.User.locations
[DEBUG] 2020-03-02 23:10:14.030 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 23:10:14.030 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 23:10:14.030 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.Location#128
[DEBUG] 2020-03-02 23:10:14.030 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
