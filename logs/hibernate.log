[DEBUG] 2020-04-19 10:24:01.329 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-04-19 10:24:01.337 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-04-19 10:24:01.344 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-04-19 10:24:01.406 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-04-19 10:24:01.407 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-04-19 10:24:01.527 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-04-19 10:24:01.746 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-04-19 10:24:01.762 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-04-19 10:24:01.762 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-04-19 10:24:01.775 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-04-19 10:24:01.809 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1a3e5f23
[DEBUG] 2020-04-19 10:24:01.809 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1a3e5f23
[DEBUG] 2020-04-19 10:24:01.810 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a3e5f23
[DEBUG] 2020-04-19 10:24:01.810 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5c0f79f0
[DEBUG] 2020-04-19 10:24:01.810 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@29a69a35
[DEBUG] 2020-04-19 10:24:01.811 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@108bdbd8
[DEBUG] 2020-04-19 10:24:01.811 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4d48bd85
[DEBUG] 2020-04-19 10:24:01.811 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4d48bd85
[DEBUG] 2020-04-19 10:24:01.811 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4d48bd85
[DEBUG] 2020-04-19 10:24:01.812 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@54aca26f
[DEBUG] 2020-04-19 10:24:01.812 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@54aca26f
[DEBUG] 2020-04-19 10:24:01.812 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@54aca26f
[DEBUG] 2020-04-19 10:24:01.813 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@59532566
[DEBUG] 2020-04-19 10:24:01.813 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@59532566
[DEBUG] 2020-04-19 10:24:01.813 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@59532566
[DEBUG] 2020-04-19 10:24:01.814 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@33cbfa57
[DEBUG] 2020-04-19 10:24:01.814 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@33cbfa57
[DEBUG] 2020-04-19 10:24:01.814 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@33cbfa57
[DEBUG] 2020-04-19 10:24:01.814 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31c2affc
[DEBUG] 2020-04-19 10:24:01.814 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31c2affc
[DEBUG] 2020-04-19 10:24:01.815 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31c2affc
[DEBUG] 2020-04-19 10:24:01.815 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@46866946
[DEBUG] 2020-04-19 10:24:01.815 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@46866946
[DEBUG] 2020-04-19 10:24:01.815 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@46866946
[DEBUG] 2020-04-19 10:24:01.816 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@25b5c5e3
[DEBUG] 2020-04-19 10:24:01.816 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@25b5c5e3
[DEBUG] 2020-04-19 10:24:01.816 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@25b5c5e3
[DEBUG] 2020-04-19 10:24:01.817 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2c708440
[DEBUG] 2020-04-19 10:24:01.817 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2c708440
[DEBUG] 2020-04-19 10:24:01.817 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@47547132
[DEBUG] 2020-04-19 10:24:01.817 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@47547132
[DEBUG] 2020-04-19 10:24:01.818 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6f3f0fae
[DEBUG] 2020-04-19 10:24:01.818 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f3f0fae
[DEBUG] 2020-04-19 10:24:01.818 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7428de63
[DEBUG] 2020-04-19 10:24:01.819 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@748e9b20
[DEBUG] 2020-04-19 10:24:01.819 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6a0ac48e
[DEBUG] 2020-04-19 10:24:01.819 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6a0ac48e
[DEBUG] 2020-04-19 10:24:01.820 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@38704ff0
[DEBUG] 2020-04-19 10:24:01.820 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@38704ff0
[DEBUG] 2020-04-19 10:24:01.825 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@359b650b
[DEBUG] 2020-04-19 10:24:01.825 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@359b650b
[DEBUG] 2020-04-19 10:24:01.826 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2c6ee758
[DEBUG] 2020-04-19 10:24:01.826 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2c6ee758
[DEBUG] 2020-04-19 10:24:01.827 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@256aa5f2
[DEBUG] 2020-04-19 10:24:01.827 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@256aa5f2
[DEBUG] 2020-04-19 10:24:01.828 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7cb2651f
[DEBUG] 2020-04-19 10:24:01.828 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7cb2651f
[DEBUG] 2020-04-19 10:24:01.829 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@610df783
[DEBUG] 2020-04-19 10:24:01.829 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@610df783
[DEBUG] 2020-04-19 10:24:01.830 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@592238c5
[DEBUG] 2020-04-19 10:24:01.830 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@592238c5
[DEBUG] 2020-04-19 10:24:01.831 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@16073fa8
[DEBUG] 2020-04-19 10:24:01.831 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@16073fa8
[DEBUG] 2020-04-19 10:24:01.832 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@bc4d5e1
[DEBUG] 2020-04-19 10:24:01.832 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@bc4d5e1
[DEBUG] 2020-04-19 10:24:01.833 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@30814f43
[DEBUG] 2020-04-19 10:24:01.833 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30814f43
[DEBUG] 2020-04-19 10:24:01.833 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7e2f86e6
[DEBUG] 2020-04-19 10:24:01.834 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7e2f86e6
[DEBUG] 2020-04-19 10:24:01.834 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7e2f86e6
[DEBUG] 2020-04-19 10:24:01.835 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5136207f
[DEBUG] 2020-04-19 10:24:01.835 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@73ad4ecc
[DEBUG] 2020-04-19 10:24:01.835 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@73ad4ecc
[DEBUG] 2020-04-19 10:24:01.835 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@73ad4ecc
[DEBUG] 2020-04-19 10:24:01.836 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@79b08632
[DEBUG] 2020-04-19 10:24:01.836 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@45d6ef73
[DEBUG] 2020-04-19 10:24:01.837 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@45d6ef73
[DEBUG] 2020-04-19 10:24:01.837 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@9fec931
[DEBUG] 2020-04-19 10:24:01.837 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@9fec931
[DEBUG] 2020-04-19 10:24:01.838 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7ce4de34
[DEBUG] 2020-04-19 10:24:01.838 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7ce4de34
[DEBUG] 2020-04-19 10:24:01.839 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@acf859d
[DEBUG] 2020-04-19 10:24:01.839 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@acf859d
[DEBUG] 2020-04-19 10:24:01.839 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6972c30a
[DEBUG] 2020-04-19 10:24:01.839 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6972c30a
[DEBUG] 2020-04-19 10:24:01.840 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@460510aa
[DEBUG] 2020-04-19 10:24:01.840 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@348d18a3
[DEBUG] 2020-04-19 10:24:01.841 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@348d18a3
[DEBUG] 2020-04-19 10:24:01.841 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@348d18a3
[DEBUG] 2020-04-19 10:24:01.841 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@252f626c
[DEBUG] 2020-04-19 10:24:01.841 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@252f626c
[DEBUG] 2020-04-19 10:24:01.841 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@252f626c
[DEBUG] 2020-04-19 10:24:01.842 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3f4b840d
[DEBUG] 2020-04-19 10:24:01.842 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@bc0f53b
[DEBUG] 2020-04-19 10:24:01.843 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@151db587
[DEBUG] 2020-04-19 10:24:01.843 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@151db587
[DEBUG] 2020-04-19 10:24:01.843 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@151db587
[DEBUG] 2020-04-19 10:24:01.844 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@34e20e6b
[DEBUG] 2020-04-19 10:24:01.844 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@34e20e6b
[DEBUG] 2020-04-19 10:24:01.844 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@34e20e6b
[DEBUG] 2020-04-19 10:24:01.844 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4a8df3e2
[DEBUG] 2020-04-19 10:24:01.844 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@25c53f74
[DEBUG] 2020-04-19 10:24:01.845 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7186333e
[DEBUG] 2020-04-19 10:24:01.845 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7186333e
[DEBUG] 2020-04-19 10:24:01.846 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1686f0b4
[DEBUG] 2020-04-19 10:24:01.847 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3cec79d3
[DEBUG] 2020-04-19 10:24:01.847 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3cec79d3
[DEBUG] 2020-04-19 10:24:01.848 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@77010a30
[DEBUG] 2020-04-19 10:24:01.848 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77010a30
[DEBUG] 2020-04-19 10:24:01.848 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@67c119b7
[DEBUG] 2020-04-19 10:24:01.848 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6de0f580
[DEBUG] 2020-04-19 10:24:01.849 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@376e7531
[DEBUG] 2020-04-19 10:24:01.851 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@f4cfd90
[DEBUG] 2020-04-19 10:24:01.851 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f4cfd90
[DEBUG] 2020-04-19 10:24:01.851 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3701e6e4
[DEBUG] 2020-04-19 10:24:01.851 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c6634d
[DEBUG] 2020-04-19 10:24:01.852 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@65f58c6e
[DEBUG] 2020-04-19 10:24:01.852 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@73ad7e90
[DEBUG] 2020-04-19 10:24:01.852 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4ba380c7
[DEBUG] 2020-04-19 10:24:01.852 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@784c5ef5
[DEBUG] 2020-04-19 10:24:01.852 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@31133b6e
[DEBUG] 2020-04-19 10:24:01.852 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@29528a22
[DEBUG] 2020-04-19 10:24:01.875 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-04-19 10:24:01.877 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-04-19 10:24:01.878 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-04-19 10:24:01.878 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-04-19 10:24:01.878 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-04-19 10:24:01.879 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-04-19 10:24:01.881 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-04-19 10:24:01.882 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-04-19 10:24:01.882 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-04-19 10:24:01.884 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-04-19 10:24:01.885 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-04-19 10:24:01.885 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-04-19 10:24:01.885 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-04-19 10:24:01.885 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-04-19 10:24:01.891 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/adhound-test
[INFO ] 2020-04-19 10:24:01.891 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=devfecta}
[INFO ] 2020-04-19 10:24:01.891 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-04-19 10:24:01.976 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-04-19 10:24:02.393 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19-0ubuntu0.19.10.3
      major : 8
      minor : 0
[DEBUG] 2020-04-19 10:24:02.398 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
[DEBUG] 2020-04-19 10:24:02.398 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-04-19 10:24:02.425 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-04-19 10:24:02.436 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-04-19 10:24:02.452 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-04-19 10:24:02.474 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-04-19 10:24:02.477 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4b65d9f4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44536de4]
[DEBUG] 2020-04-19 10:24:02.507 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.User
[DEBUG] 2020-04-19 10:24:02.520 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-19 10:24:02.523 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-04-19 10:24:02.525 [main] EntityBinder - Bind entity com.adhound.entity.User on table users
[DEBUG] 2020-04-19 10:24:02.550 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.552 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-04-19 10:24:02.553 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:id]
[DEBUG] 2020-04-19 10:24:02.554 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-04-19 10:24:02.556 [main] PropertyBinder - Building property id
[DEBUG] 2020-04-19 10:24:02.558 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-19 10:24:02.559 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.559 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-04-19 10:24:02.559 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:address]
[DEBUG] 2020-04-19 10:24:02.559 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-04-19 10:24:02.559 [main] PropertyBinder - Building property address
[DEBUG] 2020-04-19 10:24:02.563 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.563 [main] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-04-19 10:24:02.563 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:city]
[DEBUG] 2020-04-19 10:24:02.563 [main] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-04-19 10:24:02.563 [main] PropertyBinder - Building property city
[DEBUG] 2020-04-19 10:24:02.563 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.563 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-04-19 10:24:02.563 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:email]
[DEBUG] 2020-04-19 10:24:02.563 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-04-19 10:24:02.563 [main] PropertyBinder - Building property email
[DEBUG] 2020-04-19 10:24:02.563 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=fax, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.564 [main] PropertyBinder - MetadataSourceProcessor property fax with lazy=false
[DEBUG] 2020-04-19 10:24:02.564 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:fax]
[DEBUG] 2020-04-19 10:24:02.564 [main] SimpleValueBinder - building SimpleValue for fax
[DEBUG] 2020-04-19 10:24:02.564 [main] PropertyBinder - Building property fax
[DEBUG] 2020-04-19 10:24:02.564 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.564 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-04-19 10:24:02.564 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:firstName]
[DEBUG] 2020-04-19 10:24:02.564 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-04-19 10:24:02.564 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-04-19 10:24:02.564 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.564 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-04-19 10:24:02.564 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:lastName]
[DEBUG] 2020-04-19 10:24:02.564 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-04-19 10:24:02.564 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-04-19 10:24:02.565 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-19 10:24:02.565 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=locations, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.567 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.572 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.572 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=locations_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.572 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='locations_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-19 10:24:02.573 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-19 10:24:02.573 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-19 10:24:02.574 [main] CollectionBinder - Collection role: com.adhound.entity.User.locations
[DEBUG] 2020-04-19 10:24:02.575 [main] PropertyBinder - Building property locations
[DEBUG] 2020-04-19 10:24:02.576 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.576 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-04-19 10:24:02.576 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:password]
[DEBUG] 2020-04-19 10:24:02.576 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-04-19 10:24:02.576 [main] PropertyBinder - Building property password
[DEBUG] 2020-04-19 10:24:02.577 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.577 [main] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-04-19 10:24:02.577 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:phone]
[DEBUG] 2020-04-19 10:24:02.577 [main] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-04-19 10:24:02.577 [main] PropertyBinder - Building property phone
[DEBUG] 2020-04-19 10:24:02.577 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='state_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-19 10:24:02.577 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.578 [main] PropertyBinder - Building property state
[DEBUG] 2020-04-19 10:24:02.578 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=state_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.578 [main] PropertyBinder - MetadataSourceProcessor property stateId with lazy=false
[DEBUG] 2020-04-19 10:24:02.579 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:stateId]
[DEBUG] 2020-04-19 10:24:02.579 [main] SimpleValueBinder - building SimpleValue for stateId
[DEBUG] 2020-04-19 10:24:02.579 [main] PropertyBinder - Building property stateId
[DEBUG] 2020-04-19 10:24:02.580 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-19 10:24:02.580 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRole, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.580 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.581 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.581 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRole_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.581 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='userRole_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-19 10:24:02.581 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-19 10:24:02.581 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-19 10:24:02.581 [main] CollectionBinder - Collection role: com.adhound.entity.User.userRole
[DEBUG] 2020-04-19 10:24:02.581 [main] PropertyBinder - Building property userRole
[DEBUG] 2020-04-19 10:24:02.581 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-04-19 10:24:02.581 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-04-19 10:24:02.581 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:username]
[DEBUG] 2020-04-19 10:24:02.581 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-04-19 10:24:02.581 [main] PropertyBinder - Building property username
[DEBUG] 2020-04-19 10:24:02.582 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=zipcode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.582 [main] PropertyBinder - MetadataSourceProcessor property zipcode with lazy=false
[DEBUG] 2020-04-19 10:24:02.582 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:zipcode]
[DEBUG] 2020-04-19 10:24:02.582 [main] SimpleValueBinder - building SimpleValue for zipcode
[DEBUG] 2020-04-19 10:24:02.582 [main] PropertyBinder - Building property zipcode
[DEBUG] 2020-04-19 10:24:02.583 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.UserRole
[DEBUG] 2020-04-19 10:24:02.583 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-19 10:24:02.583 [main] EntityBinder - Import with entity name UserRole
[DEBUG] 2020-04-19 10:24:02.584 [main] EntityBinder - Bind entity com.adhound.entity.UserRole on table user_roles
[DEBUG] 2020-04-19 10:24:02.585 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.585 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-04-19 10:24:02.586 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:id]
[DEBUG] 2020-04-19 10:24:02.586 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-04-19 10:24:02.586 [main] PropertyBinder - Building property id
[DEBUG] 2020-04-19 10:24:02.586 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-19 10:24:02.586 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.586 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-04-19 10:24:02.586 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:roleName]
[DEBUG] 2020-04-19 10:24:02.586 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-04-19 10:24:02.586 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-04-19 10:24:02.586 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-19 10:24:02.586 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.587 [main] PropertyBinder - Building property user
[DEBUG] 2020-04-19 10:24:02.587 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.587 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-04-19 10:24:02.587 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:username]
[DEBUG] 2020-04-19 10:24:02.587 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-04-19 10:24:02.587 [main] PropertyBinder - Building property username
[DEBUG] 2020-04-19 10:24:02.587 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.Location
[DEBUG] 2020-04-19 10:24:02.587 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-19 10:24:02.587 [main] EntityBinder - Import with entity name Location
[DEBUG] 2020-04-19 10:24:02.587 [main] EntityBinder - Bind entity com.adhound.entity.Location on table locations
[DEBUG] 2020-04-19 10:24:02.589 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.589 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-04-19 10:24:02.589 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:id]
[DEBUG] 2020-04-19 10:24:02.589 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-04-19 10:24:02.589 [main] PropertyBinder - Building property id
[DEBUG] 2020-04-19 10:24:02.589 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-19 10:24:02.589 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.589 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-04-19 10:24:02.589 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:address]
[DEBUG] 2020-04-19 10:24:02.589 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-04-19 10:24:02.589 [main] PropertyBinder - Building property address
[DEBUG] 2020-04-19 10:24:02.590 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.590 [main] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-04-19 10:24:02.590 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:city]
[DEBUG] 2020-04-19 10:24:02.590 [main] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-04-19 10:24:02.590 [main] PropertyBinder - Building property city
[DEBUG] 2020-04-19 10:24:02.590 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=fax, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.590 [main] PropertyBinder - MetadataSourceProcessor property fax with lazy=false
[DEBUG] 2020-04-19 10:24:02.590 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:fax]
[DEBUG] 2020-04-19 10:24:02.590 [main] SimpleValueBinder - building SimpleValue for fax
[DEBUG] 2020-04-19 10:24:02.590 [main] PropertyBinder - Building property fax
[DEBUG] 2020-04-19 10:24:02.590 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.590 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-04-19 10:24:02.590 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:name]
[DEBUG] 2020-04-19 10:24:02.590 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-04-19 10:24:02.590 [main] PropertyBinder - Building property name
[DEBUG] 2020-04-19 10:24:02.590 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.590 [main] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-04-19 10:24:02.590 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:phone]
[DEBUG] 2020-04-19 10:24:02.591 [main] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-04-19 10:24:02.591 [main] PropertyBinder - Building property phone
[DEBUG] 2020-04-19 10:24:02.591 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='region_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-19 10:24:02.591 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=region, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.591 [main] PropertyBinder - Building property region
[DEBUG] 2020-04-19 10:24:02.591 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=region_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.591 [main] PropertyBinder - MetadataSourceProcessor property regionId with lazy=false
[DEBUG] 2020-04-19 10:24:02.591 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:regionId]
[DEBUG] 2020-04-19 10:24:02.591 [main] SimpleValueBinder - building SimpleValue for regionId
[DEBUG] 2020-04-19 10:24:02.591 [main] PropertyBinder - Building property regionId
[DEBUG] 2020-04-19 10:24:02.591 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='state_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-19 10:24:02.591 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.591 [main] PropertyBinder - Building property state
[DEBUG] 2020-04-19 10:24:02.591 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=state_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.591 [main] PropertyBinder - MetadataSourceProcessor property stateId with lazy=false
[DEBUG] 2020-04-19 10:24:02.591 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:stateId]
[DEBUG] 2020-04-19 10:24:02.591 [main] SimpleValueBinder - building SimpleValue for stateId
[DEBUG] 2020-04-19 10:24:02.592 [main] PropertyBinder - Building property stateId
[DEBUG] 2020-04-19 10:24:02.592 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-19 10:24:02.592 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.592 [main] PropertyBinder - Building property user
[DEBUG] 2020-04-19 10:24:02.592 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=zipcode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.592 [main] PropertyBinder - MetadataSourceProcessor property zipcode with lazy=false
[DEBUG] 2020-04-19 10:24:02.592 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:zipcode]
[DEBUG] 2020-04-19 10:24:02.592 [main] SimpleValueBinder - building SimpleValue for zipcode
[DEBUG] 2020-04-19 10:24:02.592 [main] PropertyBinder - Building property zipcode
[DEBUG] 2020-04-19 10:24:02.592 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.Region
[DEBUG] 2020-04-19 10:24:02.592 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-19 10:24:02.592 [main] EntityBinder - Import with entity name Region
[DEBUG] 2020-04-19 10:24:02.592 [main] EntityBinder - Bind entity com.adhound.entity.Region on table location_regions
[DEBUG] 2020-04-19 10:24:02.593 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(location_regions), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.593 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-04-19 10:24:02.593 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Region:id]
[DEBUG] 2020-04-19 10:24:02.593 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-04-19 10:24:02.593 [main] PropertyBinder - Building property id
[DEBUG] 2020-04-19 10:24:02.593 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-19 10:24:02.593 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(location_regions), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.593 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-04-19 10:24:02.593 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Region:description]
[DEBUG] 2020-04-19 10:24:02.593 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-04-19 10:24:02.593 [main] PropertyBinder - Building property description
[DEBUG] 2020-04-19 10:24:02.593 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(location_regions), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.593 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-04-19 10:24:02.593 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Region:name]
[DEBUG] 2020-04-19 10:24:02.594 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-04-19 10:24:02.594 [main] PropertyBinder - Building property name
[DEBUG] 2020-04-19 10:24:02.594 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.State
[DEBUG] 2020-04-19 10:24:02.594 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-19 10:24:02.594 [main] EntityBinder - Import with entity name State
[DEBUG] 2020-04-19 10:24:02.594 [main] EntityBinder - Bind entity com.adhound.entity.State on table states
[DEBUG] 2020-04-19 10:24:02.594 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.594 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-04-19 10:24:02.594 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:id]
[DEBUG] 2020-04-19 10:24:02.594 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-04-19 10:24:02.594 [main] PropertyBinder - Building property id
[DEBUG] 2020-04-19 10:24:02.595 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-19 10:24:02.595 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=states_Abbreviation, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.595 [main] PropertyBinder - MetadataSourceProcessor property abbreviation with lazy=false
[DEBUG] 2020-04-19 10:24:02.595 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:abbreviation]
[DEBUG] 2020-04-19 10:24:02.595 [main] SimpleValueBinder - building SimpleValue for abbreviation
[DEBUG] 2020-04-19 10:24:02.595 [main] PropertyBinder - Building property abbreviation
[DEBUG] 2020-04-19 10:24:02.595 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=states_Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-19 10:24:02.595 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-04-19 10:24:02.595 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:name]
[DEBUG] 2020-04-19 10:24:02.595 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-04-19 10:24:02.595 [main] PropertyBinder - Building property name
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for city
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for fax
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for stateId
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for zipcode
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for city
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for fax
[DEBUG] 2020-04-19 10:24:02.596 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-04-19 10:24:02.597 [main] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-04-19 10:24:02.597 [main] SimpleValueBinder - Starting fillSimpleValue for regionId
[DEBUG] 2020-04-19 10:24:02.597 [main] SimpleValueBinder - Starting fillSimpleValue for stateId
[DEBUG] 2020-04-19 10:24:02.597 [main] SimpleValueBinder - Starting fillSimpleValue for zipcode
[DEBUG] 2020-04-19 10:24:02.597 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-04-19 10:24:02.597 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-04-19 10:24:02.597 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-04-19 10:24:02.597 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-04-19 10:24:02.597 [main] SimpleValueBinder - Starting fillSimpleValue for abbreviation
[DEBUG] 2020-04-19 10:24:02.597 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-04-19 10:24:02.601 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2020-04-19 10:24:02.601 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user_roles]
[DEBUG] 2020-04-19 10:24:02.601 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [locations]
[DEBUG] 2020-04-19 10:24:02.601 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [location_regions]
[DEBUG] 2020-04-19 10:24:02.601 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [states]
[DEBUG] 2020-04-19 10:24:02.601 [main] CollectionSecondPass - Second pass for collection: com.adhound.entity.User.locations
[DEBUG] 2020-04-19 10:24:02.601 [main] CollectionBinder - Binding a OneToMany: com.adhound.entity.User.locations through a foreign key
[DEBUG] 2020-04-19 10:24:02.602 [main] CollectionBinder - Mapping collection: com.adhound.entity.User.locations -> locations
[DEBUG] 2020-04-19 10:24:02.602 [main] TableBinder - Retrieving property com.adhound.entity.Location.user
[DEBUG] 2020-04-19 10:24:02.602 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.adhound.entity.Location
[DEBUG] 2020-04-19 10:24:02.603 [main] CollectionSecondPass - Second pass for collection: com.adhound.entity.User.userRole
[DEBUG] 2020-04-19 10:24:02.603 [main] CollectionBinder - Binding a OneToMany: com.adhound.entity.User.userRole through a foreign key
[DEBUG] 2020-04-19 10:24:02.603 [main] CollectionBinder - Mapping collection: com.adhound.entity.User.userRole -> user_roles
[DEBUG] 2020-04-19 10:24:02.603 [main] TableBinder - Retrieving property com.adhound.entity.UserRole.user
[DEBUG] 2020-04-19 10:24:02.603 [main] CollectionSecondPass - Mapped collection key: username, one-to-many: com.adhound.entity.UserRole
[DEBUG] 2020-04-19 10:24:02.603 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.Region
[DEBUG] 2020-04-19 10:24:02.604 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.State
[DEBUG] 2020-04-19 10:24:02.604 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.User
[DEBUG] 2020-04-19 10:24:02.604 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.User
[DEBUG] 2020-04-19 10:24:02.604 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.State
[DEBUG] 2020-04-19 10:24:02.605 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.Region
[DEBUG] 2020-04-19 10:24:02.606 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.State
[DEBUG] 2020-04-19 10:24:02.606 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.User
[DEBUG] 2020-04-19 10:24:02.606 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.User
[DEBUG] 2020-04-19 10:24:02.606 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.State
[DEBUG] 2020-04-19 10:24:02.628 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - SessionFactory name : null
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Statistics: disabled
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Named query checking : enabled
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-04-19 10:24:02.629 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-04-19 10:24:02.630 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-04-19 10:24:02.665 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-04-19 10:24:02.677 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-04-19 10:24:02.677 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/devfecta/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/193.6015.39/lib/idea_rt.jar:/home/devfecta/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/193.6015.39/plugins/junit/lib/junit5-rt.jar:/home/devfecta/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/193.6015.39/plugins/junit/lib/junit-rt.jar:/home/devfecta/IdeaProjects/adhound/target/test-classes:/home/devfecta/IdeaProjects/adhound/target/classes:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/devfecta/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/devfecta/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/devfecta/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/devfecta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/devfecta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/devfecta/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/devfecta/.m2/repository/mysql/mysql-connector-java/8.0.19/mysql-connector-java-8.0.19.jar:/home/devfecta/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/devfecta/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/devfecta/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/devfecta/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/devfecta/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/devfecta/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/devfecta/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/devfecta/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/devfecta/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/devfecta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/devfecta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/devfecta/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/devfecta/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/devfecta/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/devfecta/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/devfecta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/devfecta/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/devfecta/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/devfecta/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/devfecta/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/devfecta/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/devfecta/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/devfecta/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/devfecta/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/devfecta/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/devfecta/.m2/repository/org/glassfish/javax.el/3.0.0/javax.el-3.0.0.jar:/home/devfecta/.m2/repository/org/hibernate/hibernate-validator/5.4.3.Final/hibernate-validator-5.4.3.Final.jar:/home/devfecta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/devfecta/.m2/repository/org/hibernate/hibernate-validator-cdi/5.4.3.Final/hibernate-validator-cdi-5.4.3.Final.jar:/home/devfecta/.m2/repository/org/glassfish/jersey/core/jersey-client/2.30.1/jersey-client-2.30.1.jar:/home/devfecta/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/devfecta/.m2/repository/org/glassfish/jersey/core/jersey-common/2.30.1/jersey-common-2.30.1.jar:/home/devfecta/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/devfecta/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/devfecta/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/devfecta/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/devfecta/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.30.1/jersey-hk2-2.30.1.jar:/home/devfecta/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/devfecta/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/devfecta/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/devfecta/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/devfecta/.m2/repository/org/glassfish/jersey/media/jersey-media-json-jackson/2.30.1/jersey-media-json-jackson-2.30.1.jar:/home/devfecta/.m2/repository/org/glassfish/jersey/ext/jersey-entity-filtering/2.30.1/jersey-entity-filtering-2.30.1.jar:/home/devfecta/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.10.1/jackson-module-jaxb-annotations-2.10.1.jar:/home/devfecta/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/devfecta/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/devfecta/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.30.1/jersey-container-servlet-2.30.1.jar:/home/devfecta/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.30.1/jersey-container-servlet-core-2.30.1.jar:/home/devfecta/.m2/repository/org/glassfish/jersey/core/jersey-server/2.30.1/jersey-server-2.30.1.jar:/home/devfecta/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.30.1/jersey-media-jaxb-2.30.1.jar:/home/devfecta/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/devfecta/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.3/jackson-core-2.10.3.jar:/home/devfecta/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.3/jackson-annotations-2.10.3.jar:/home/devfecta/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.3/jackson-databind-2.10.3.jar:/home/devfecta/.m2/repository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar:/home/devfecta/.m2/repository/com/google/code/gson/gson/2.8.6/gson-2.8.6.jar:/home/devfecta/.m2/repository/org/mybatis/mybatis/3.5.4/mybatis-3.5.4.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.adhound.service.PayPalTest,testGetAccessToken, jdk.debug=release, sun.cpu.endian=little, user.home=/home/devfecta, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=m3tallica, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu119.10.1, user.name=devfecta, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-46-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/adhound-test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/home/devfecta/IdeaProjects/adhound, os.arch=amd64, connection.username=devfecta, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7209ffb5, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu119.10.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/adhound-test, java.class.version=55.0}
[INFO ] 2020-04-19 10:24:02.696 [main] Version - HV000001: Hibernate Validator 5.4.3.Final
[DEBUG] 2020-04-19 10:24:02.705 [main] DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[DEBUG] 2020-04-19 10:24:02.705 [main] DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[DEBUG] 2020-04-19 10:24:02.707 [main] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[DEBUG] 2020-04-19 10:24:02.708 [main] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[DEBUG] 2020-04-19 10:24:02.708 [main] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[DEBUG] 2020-04-19 10:24:02.708 [main] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[DEBUG] 2020-04-19 10:24:02.763 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.User] is safe
[DEBUG] 2020-04-19 10:24:02.763 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.User
[DEBUG] 2020-04-19 10:24:02.785 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@cde8c6c, payload=[Ljava.lang.Class;@174721c4}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.786 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@3592c1c4, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@322e49ee}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.787 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Pattern, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={flags=[Ljavax.validation.constraints.Pattern$Flag;@4d705112, groups=[Ljava.lang.Class;@590765c4, regexp=.*, message={javax.validation.constraints.Pattern.message}, payload=[Ljava.lang.Class;@19489b27}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.789 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@58f2466c, payload=[Ljava.lang.Class;@5809fa26}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.790 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@64763e49, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@23468512}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.790 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@69cd7630, payload=[Ljava.lang.Class;@7e8279e5}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.790 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@2b53840a, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@3caafa67}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.791 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@12d2ddde, payload=[Ljava.lang.Class;@62b475e2}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.791 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@e9474f, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@1c61eda5}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.792 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@1859ffda, payload=[Ljava.lang.Class;@59838256}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.792 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@131a7516, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@5ae15}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.793 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@52d3fafd, payload=[Ljava.lang.Class;@7f0b93b4}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.793 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@4bc6da03, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@4f59a516}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.794 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@4e22368c, payload=[Ljava.lang.Class;@411cd156}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.794 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@3c770db4, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@3e046e39}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.795 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@2213639b, payload=[Ljava.lang.Class;@2c26ba07}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.796 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@2c719bd4, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@53aa38be}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.797 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Min, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@37a0ec3c, message={javax.validation.constraints.Min.message}, value=1, payload=[Ljava.lang.Class;@422ad5e2}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.797 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Max, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@62a54948, message={javax.validation.constraints.Max.message}, value=50, payload=[Ljava.lang.Class;@6048e26a}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.797 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@50b93353, payload=[Ljava.lang.Class;@44286963}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.798 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@c8f97a7, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@2b736fee}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.825 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.UserRole] is safe
[DEBUG] 2020-04-19 10:24:02.825 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.UserRole
[DEBUG] 2020-04-19 10:24:02.827 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.State] is safe
[DEBUG] 2020-04-19 10:24:02.827 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.State
[DEBUG] 2020-04-19 10:24:02.828 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.Region] is safe
[DEBUG] 2020-04-19 10:24:02.829 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.Region
[DEBUG] 2020-04-19 10:24:02.830 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.Location] is safe
[DEBUG] 2020-04-19 10:24:02.830 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.Location
[DEBUG] 2020-04-19 10:24:02.830 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@2f9dda71, payload=[Ljava.lang.Class;@58278366}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.830 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@7f5fcfe9, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@707865bd}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.831 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@31f77791, payload=[Ljava.lang.Class;@552fee7a}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.831 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@548e43b1, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@67688110}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.832 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@6d293993, payload=[Ljava.lang.Class;@475f5672}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.832 [main] ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@616a06e3, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@42297bdf}, constraintType=GENERIC}.
[DEBUG] 2020-04-19 10:24:02.836 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-04-19 10:24:02.836 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-04-19 10:24:02.836 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4b65d9f4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@39e53bef]
[DEBUG] 2020-04-19 10:24:02.866 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.User] is safe
[DEBUG] 2020-04-19 10:24:02.866 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.User
[DEBUG] 2020-04-19 10:24:02.878 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.User] is safe
[DEBUG] 2020-04-19 10:24:02.878 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.User
[DEBUG] 2020-04-19 10:24:03.027 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.UserRole] is safe
[DEBUG] 2020-04-19 10:24:03.027 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.UserRole
[DEBUG] 2020-04-19 10:24:03.028 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.UserRole] is safe
[DEBUG] 2020-04-19 10:24:03.028 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.UserRole
[DEBUG] 2020-04-19 10:24:03.035 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.State] is safe
[DEBUG] 2020-04-19 10:24:03.036 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.State
[DEBUG] 2020-04-19 10:24:03.036 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.State] is safe
[DEBUG] 2020-04-19 10:24:03.036 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.State
[DEBUG] 2020-04-19 10:24:03.043 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.Region] is safe
[DEBUG] 2020-04-19 10:24:03.043 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.Region
[DEBUG] 2020-04-19 10:24:03.043 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.Region] is safe
[DEBUG] 2020-04-19 10:24:03.043 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.Region
[DEBUG] 2020-04-19 10:24:03.049 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.Location] is safe
[DEBUG] 2020-04-19 10:24:03.049 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.Location
[DEBUG] 2020-04-19 10:24:03.049 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.Location] is safe
[DEBUG] 2020-04-19 10:24:03.049 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.Location
[DEBUG] 2020-04-19 10:24:03.069 [main] AbstractCollectionPersister - Static SQL for collection: com.adhound.entity.User.userRole
[DEBUG] 2020-04-19 10:24:03.069 [main] AbstractCollectionPersister -  Row insert: update user_roles set username=? where id=?
[DEBUG] 2020-04-19 10:24:03.069 [main] AbstractCollectionPersister -  Row update: update user_roles set  where id=?
[DEBUG] 2020-04-19 10:24:03.069 [main] AbstractCollectionPersister -  Row delete: update user_roles set username=null where username=? and id=?
[DEBUG] 2020-04-19 10:24:03.069 [main] AbstractCollectionPersister -  One-shot delete: update user_roles set username=null where username=?
[DEBUG] 2020-04-19 10:24:03.070 [main] AbstractCollectionPersister - Static SQL for collection: com.adhound.entity.User.locations
[DEBUG] 2020-04-19 10:24:03.070 [main] AbstractCollectionPersister -  Row insert: update locations set user_id=? where id=?
[DEBUG] 2020-04-19 10:24:03.070 [main] AbstractCollectionPersister -  Row update: update locations set  where id=?
[DEBUG] 2020-04-19 10:24:03.070 [main] AbstractCollectionPersister -  Row delete: update locations set user_id=null where user_id=? and id=?
[DEBUG] 2020-04-19 10:24:03.070 [main] AbstractCollectionPersister -  One-shot delete: update locations set user_id=null where user_id=?
[DEBUG] 2020-04-19 10:24:03.073 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.User
[DEBUG] 2020-04-19 10:24:03.073 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2020-04-19 10:24:03.073 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.address as address2_4_, user_.city as city3_4_, user_.email as email4_4_, user_.fax as fax5_4_, user_.first_name as first_na6_4_, user_.last_name as last_nam7_4_, user_.password as password8_4_, user_.phone as phone9_4_, user_.state_id as state_i10_4_, user_.username as usernam11_4_, user_.zipcode as zipcode12_4_ from users user_ where user_.id=?
[DEBUG] 2020-04-19 10:24:03.073 [main] AbstractEntityPersister -  Insert 0: insert into users (address, city, email, fax, first_name, last_name, password, phone, state_id, username, zipcode, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-19 10:24:03.073 [main] AbstractEntityPersister -  Update 0: update users set address=?, city=?, email=?, fax=?, first_name=?, last_name=?, password=?, phone=?, state_id=?, username=?, zipcode=? where id=?
[DEBUG] 2020-04-19 10:24:03.073 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2020-04-19 10:24:03.073 [main] AbstractEntityPersister -  Identity insert: insert into users (address, city, email, fax, first_name, last_name, password, phone, state_id, username, zipcode) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-19 10:24:03.087 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@451816fd]
[DEBUG] 2020-04-19 10:24:03.088 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-04-19 10:24:03.088 [main] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-04-19 10:24:03.088 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-04-19 10:24:03.088 [main] MetamodelGraphWalker - Visiting attribute path : fax
[DEBUG] 2020-04-19 10:24:03.088 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-19 10:24:03.088 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-19 10:24:03.088 [main] MetamodelGraphWalker - Visiting attribute path : locations
[DEBUG] 2020-04-19 10:24:03.091 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@360d41d0]
[DEBUG] 2020-04-19 10:24:03.092 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cc3e49b]
[DEBUG] 2020-04-19 10:24:03.093 [main] MetamodelGraphWalker - Visiting attribute path : locations.address
[DEBUG] 2020-04-19 10:24:03.093 [main] MetamodelGraphWalker - Visiting attribute path : locations.city
[DEBUG] 2020-04-19 10:24:03.093 [main] MetamodelGraphWalker - Visiting attribute path : locations.fax
[DEBUG] 2020-04-19 10:24:03.093 [main] MetamodelGraphWalker - Visiting attribute path : locations.name
[DEBUG] 2020-04-19 10:24:03.093 [main] MetamodelGraphWalker - Visiting attribute path : locations.phone
[DEBUG] 2020-04-19 10:24:03.093 [main] MetamodelGraphWalker - Visiting attribute path : locations.region
[DEBUG] 2020-04-19 10:24:03.093 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a06904]
[DEBUG] 2020-04-19 10:24:03.094 [main] MetamodelGraphWalker - Visiting attribute path : locations.region.description
[DEBUG] 2020-04-19 10:24:03.094 [main] MetamodelGraphWalker - Visiting attribute path : locations.region.name
[DEBUG] 2020-04-19 10:24:03.094 [main] MetamodelGraphWalker - Visiting attribute path : locations.regionId
[DEBUG] 2020-04-19 10:24:03.094 [main] MetamodelGraphWalker - Visiting attribute path : locations.state
[DEBUG] 2020-04-19 10:24:03.094 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ce561cc]
[DEBUG] 2020-04-19 10:24:03.094 [main] MetamodelGraphWalker - Visiting attribute path : locations.state.abbreviation
[DEBUG] 2020-04-19 10:24:03.094 [main] MetamodelGraphWalker - Visiting attribute path : locations.state.name
[DEBUG] 2020-04-19 10:24:03.094 [main] MetamodelGraphWalker - Visiting attribute path : locations.stateId
[DEBUG] 2020-04-19 10:24:03.094 [main] MetamodelGraphWalker - Visiting attribute path : locations.user
[DEBUG] 2020-04-19 10:24:03.094 [main] MetamodelGraphWalker - Property path deemed to be circular : locations.user
[DEBUG] 2020-04-19 10:24:03.094 [main] MetamodelGraphWalker - Visiting attribute path : locations.zipcode
[DEBUG] 2020-04-19 10:24:03.095 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-04-19 10:24:03.095 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-04-19 10:24:03.095 [main] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-04-19 10:24:03.095 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@184751f3]
[DEBUG] 2020-04-19 10:24:03.095 [main] MetamodelGraphWalker - Visiting attribute path : state.abbreviation
[DEBUG] 2020-04-19 10:24:03.095 [main] MetamodelGraphWalker - Visiting attribute path : state.name
[DEBUG] 2020-04-19 10:24:03.095 [main] MetamodelGraphWalker - Visiting attribute path : stateId
[DEBUG] 2020-04-19 10:24:03.095 [main] MetamodelGraphWalker - Visiting attribute path : userRole
[DEBUG] 2020-04-19 10:24:03.095 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5889fc44]
[DEBUG] 2020-04-19 10:24:03.095 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6598caab]
[DEBUG] 2020-04-19 10:24:03.095 [main] MetamodelGraphWalker - Visiting attribute path : userRole.roleName
[DEBUG] 2020-04-19 10:24:03.095 [main] MetamodelGraphWalker - Visiting attribute path : userRole.user
[DEBUG] 2020-04-19 10:24:03.095 [main] MetamodelGraphWalker - Property path deemed to be circular : userRole.user
[DEBUG] 2020-04-19 10:24:03.095 [main] MetamodelGraphWalker - Visiting attribute path : userRole.username
[DEBUG] 2020-04-19 10:24:03.095 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-04-19 10:24:03.095 [main] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-04-19 10:24:03.095 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-19 10:24:03.103 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-19 10:24:03.108 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.User, querySpaceUid=<gen:0>, path=com.adhound.entity.User)
          - CollectionAttributeFetchImpl(collection=com.adhound.entity.User.locations, querySpaceUid=<gen:1>, path=com.adhound.entity.User.locations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.adhound.entity.Location, querySpaceUid=<gen:2>, path=com.adhound.entity.User.locations.<elements>)
                - EntityAttributeFetchImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:3>, path=com.adhound.entity.User.locations.<elements>.region)
                - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:4>, path=com.adhound.entity.User.locations.<elements>.state)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:5>, path=com.adhound.entity.User.state)
          - CollectionAttributeFetchImpl(collection=com.adhound.entity.User.userRole, querySpaceUid=<gen:6>, path=com.adhound.entity.User.userRole)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:7>, path=com.adhound.entity.User.userRole.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(locations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.adhound.entity.User.locations)
                - SQL table alias mapping - locations1_
                - alias suffix - 1_
                - suffixed key columns - {user_id10_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.adhound.entity.Location)
                      - SQL table alias mapping - locations1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(region)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.adhound.entity.Region)
                            - SQL table alias mapping - region2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                      - JOIN (JoinDefinedByMetadata(state)) : <gen:2> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.adhound.entity.State)
                            - SQL table alias mapping - state3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
          - JOIN (JoinDefinedByMetadata(state)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.adhound.entity.State)
                - SQL table alias mapping - state4_
                - alias suffix - 5_
                - suffixed key columns - {id1_2_5_}
          - JOIN (JoinDefinedByMetadata(userRole)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.adhound.entity.User.userRole)
                - SQL table alias mapping - userrole5_
                - alias suffix - 6_
                - suffixed key columns - {username3_3_6_}
                - entity-element alias suffix - 7_
                - 7_entity-element suffixed key columns - id1_3_7_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.adhound.entity.UserRole)
                      - SQL table alias mapping - userrole5_
                      - alias suffix - 7_
                      - suffixed key columns - {id1_3_7_}

[DEBUG] 2020-04-19 10:24:03.109 [main] EntityLoader - Static select for entity com.adhound.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username3_3_6_, userrole5_.id as id1_3_6_, userrole5_.id as id1_3_7_, userrole5_.role_name as role_nam2_3_7_, userrole5_.username as username3_3_7_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id left outer join user_roles userrole5_ on user0_.id=userrole5_.username where user0_.id=?
[DEBUG] 2020-04-19 10:24:03.109 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@322b09da]
[DEBUG] 2020-04-19 10:24:03.109 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : fax
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations
[DEBUG] 2020-04-19 10:24:03.110 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@308e87a1]
[DEBUG] 2020-04-19 10:24:03.110 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66298fe9]
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.address
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.city
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.fax
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.name
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.phone
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.region
[DEBUG] 2020-04-19 10:24:03.110 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11148dc2]
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.region.description
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.region.name
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.regionId
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.state
[DEBUG] 2020-04-19 10:24:03.110 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60a01cb]
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.state.abbreviation
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.state.name
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.stateId
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.user
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Property path deemed to be circular : locations.user
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : locations.zipcode
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-04-19 10:24:03.110 [main] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-04-19 10:24:03.111 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bb4ed71]
[DEBUG] 2020-04-19 10:24:03.111 [main] MetamodelGraphWalker - Visiting attribute path : state.abbreviation
[DEBUG] 2020-04-19 10:24:03.111 [main] MetamodelGraphWalker - Visiting attribute path : state.name
[DEBUG] 2020-04-19 10:24:03.111 [main] MetamodelGraphWalker - Visiting attribute path : stateId
[DEBUG] 2020-04-19 10:24:03.111 [main] MetamodelGraphWalker - Visiting attribute path : userRole
[DEBUG] 2020-04-19 10:24:03.111 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56835f2f]
[DEBUG] 2020-04-19 10:24:03.111 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40f1aa95]
[DEBUG] 2020-04-19 10:24:03.111 [main] MetamodelGraphWalker - Visiting attribute path : userRole.roleName
[DEBUG] 2020-04-19 10:24:03.111 [main] MetamodelGraphWalker - Visiting attribute path : userRole.user
[DEBUG] 2020-04-19 10:24:03.111 [main] MetamodelGraphWalker - Property path deemed to be circular : userRole.user
[DEBUG] 2020-04-19 10:24:03.111 [main] MetamodelGraphWalker - Visiting attribute path : userRole.username
[DEBUG] 2020-04-19 10:24:03.111 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-04-19 10:24:03.111 [main] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-04-19 10:24:03.111 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-19 10:24:03.111 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-19 10:24:03.112 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.User, querySpaceUid=<gen:0>, path=com.adhound.entity.User)
          - CollectionAttributeFetchImpl(collection=com.adhound.entity.User.locations, querySpaceUid=<gen:1>, path=com.adhound.entity.User.locations)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.adhound.entity.Location, querySpaceUid=<gen:2>, path=com.adhound.entity.User.locations.<elements>)
                - EntityAttributeFetchImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:3>, path=com.adhound.entity.User.locations.<elements>.region)
                - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:4>, path=com.adhound.entity.User.locations.<elements>.state)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:5>, path=com.adhound.entity.User.state)
          - CollectionAttributeFetchImpl(collection=com.adhound.entity.User.userRole, querySpaceUid=<gen:6>, path=com.adhound.entity.User.userRole)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:7>, path=com.adhound.entity.User.userRole.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(locations)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.adhound.entity.User.locations)
                - SQL table alias mapping - locations1_
                - alias suffix - 1_
                - suffixed key columns - {user_id10_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.adhound.entity.Location)
                      - SQL table alias mapping - locations1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(region)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.adhound.entity.Region)
                            - SQL table alias mapping - region2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                      - JOIN (JoinDefinedByMetadata(state)) : <gen:2> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.adhound.entity.State)
                            - SQL table alias mapping - state3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_2_4_}
          - JOIN (JoinDefinedByMetadata(state)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.adhound.entity.State)
                - SQL table alias mapping - state4_
                - alias suffix - 5_
                - suffixed key columns - {id1_2_5_}
          - JOIN (JoinDefinedByMetadata(userRole)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.adhound.entity.User.userRole)
                - SQL table alias mapping - userrole5_
                - alias suffix - 6_
                - suffixed key columns - {username3_3_6_}
                - entity-element alias suffix - 7_
                - 7_entity-element suffixed key columns - id1_3_7_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.adhound.entity.UserRole)
                      - SQL table alias mapping - userrole5_
                      - alias suffix - 7_
                      - suffixed key columns - {id1_3_7_}

[DEBUG] 2020-04-19 10:24:03.112 [main] EntityLoader - Static select for entity com.adhound.entity.User [READ]: select user0_.id as id1_4_0_, user0_.address as address2_4_0_, user0_.city as city3_4_0_, user0_.email as email4_4_0_, user0_.fax as fax5_4_0_, user0_.first_name as first_na6_4_0_, user0_.last_name as last_nam7_4_0_, user0_.password as password8_4_0_, user0_.phone as phone9_4_0_, user0_.state_id as state_i10_4_0_, user0_.username as usernam11_4_0_, user0_.zipcode as zipcode12_4_0_, locations1_.user_id as user_id10_1_1_, locations1_.id as id1_1_1_, locations1_.id as id1_1_2_, locations1_.address as address2_1_2_, locations1_.city as city3_1_2_, locations1_.fax as fax4_1_2_, locations1_.name as name5_1_2_, locations1_.phone as phone6_1_2_, locations1_.region_id as region_i7_1_2_, locations1_.state_id as state_id8_1_2_, locations1_.user_id as user_id10_1_2_, locations1_.zipcode as zipcode9_1_2_, region2_.id as id1_0_3_, region2_.description as descript2_0_3_, region2_.name as name3_0_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_, state4_.id as id1_2_5_, state4_.states_Abbreviation as states_A2_2_5_, state4_.states_Name as states_N3_2_5_, userrole5_.username as username3_3_6_, userrole5_.id as id1_3_6_, userrole5_.id as id1_3_7_, userrole5_.role_name as role_nam2_3_7_, userrole5_.username as username3_3_7_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id left outer join location_regions region2_ on locations1_.region_id=region2_.id left outer join states state3_ on locations1_.state_id=state3_.id inner join states state4_ on user0_.state_id=state4_.id left outer join user_roles userrole5_ on user0_.id=userrole5_.username where user0_.id=?
[DEBUG] 2020-04-19 10:24:03.121 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.User: select user0_.id as id1_4_1_, user0_.address as address2_4_1_, user0_.city as city3_4_1_, user0_.email as email4_4_1_, user0_.fax as fax5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.password as password8_4_1_, user0_.phone as phone9_4_1_, user0_.state_id as state_i10_4_1_, user0_.username as usernam11_4_1_, user0_.zipcode as zipcode12_4_1_, locations1_.user_id as user_id10_1_3_, locations1_.id as id1_1_3_, locations1_.id as id1_1_0_, locations1_.address as address2_1_0_, locations1_.city as city3_1_0_, locations1_.fax as fax4_1_0_, locations1_.name as name5_1_0_, locations1_.phone as phone6_1_0_, locations1_.region_id as region_i7_1_0_, locations1_.state_id as state_id8_1_0_, locations1_.user_id as user_id10_1_0_, locations1_.zipcode as zipcode9_1_0_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id where user0_.id=?
[DEBUG] 2020-04-19 10:24:03.121 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.User: select user0_.id as id1_4_1_, user0_.address as address2_4_1_, user0_.city as city3_4_1_, user0_.email as email4_4_1_, user0_.fax as fax5_4_1_, user0_.first_name as first_na6_4_1_, user0_.last_name as last_nam7_4_1_, user0_.password as password8_4_1_, user0_.phone as phone9_4_1_, user0_.state_id as state_i10_4_1_, user0_.username as usernam11_4_1_, user0_.zipcode as zipcode12_4_1_, locations1_.user_id as user_id10_1_3_, locations1_.id as id1_1_3_, locations1_.id as id1_1_0_, locations1_.address as address2_1_0_, locations1_.city as city3_1_0_, locations1_.fax as fax4_1_0_, locations1_.name as name5_1_0_, locations1_.phone as phone6_1_0_, locations1_.region_id as region_i7_1_0_, locations1_.state_id as state_id8_1_0_, locations1_.user_id as user_id10_1_0_, locations1_.zipcode as zipcode9_1_0_ from users user0_ left outer join locations locations1_ on user0_.id=locations1_.user_id where user0_.id=?
[DEBUG] 2020-04-19 10:24:03.121 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.UserRole
[DEBUG] 2020-04-19 10:24:03.121 [main] AbstractEntityPersister -  Version select: select id from user_roles where id =?
[DEBUG] 2020-04-19 10:24:03.121 [main] AbstractEntityPersister -  Snapshot select: select userrole_.id, userrole_.role_name as role_nam2_3_, userrole_.username as username3_3_ from user_roles userrole_ where userrole_.id=?
[DEBUG] 2020-04-19 10:24:03.122 [main] AbstractEntityPersister -  Insert 0: insert into user_roles (role_name, username, id) values (?, ?, ?)
[DEBUG] 2020-04-19 10:24:03.122 [main] AbstractEntityPersister -  Update 0: update user_roles set role_name=?, username=? where id=?
[DEBUG] 2020-04-19 10:24:03.122 [main] AbstractEntityPersister -  Delete 0: delete from user_roles where id=?
[DEBUG] 2020-04-19 10:24:03.122 [main] AbstractEntityPersister -  Identity insert: insert into user_roles (role_name, username) values (?, ?)
[DEBUG] 2020-04-19 10:24:03.122 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15d65fcf]
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-19 10:24:03.122 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f59da34]
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.fax
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.locations
[DEBUG] 2020-04-19 10:24:03.122 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52a67293]
[DEBUG] 2020-04-19 10:24:03.122 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@793cef95]
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.address
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.city
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.fax
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.name
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.phone
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.region
[DEBUG] 2020-04-19 10:24:03.122 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67afe909]
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.regionId
[DEBUG] 2020-04-19 10:24:03.122 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.state
[DEBUG] 2020-04-19 10:24:03.122 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79f1e22e]
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.stateId
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.user
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Property path deemed to be circular : user.locations.user
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.zipcode
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-04-19 10:24:03.123 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6903ed0e]
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Visiting attribute path : user.state.abbreviation
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Visiting attribute path : user.state.name
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Visiting attribute path : user.stateId
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Property path deemed to be circular : user.userRole
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-04-19 10:24:03.123 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-04-19 10:24:03.123 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-19 10:24:03.123 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-19 10:24:03.124 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:0>, path=com.adhound.entity.UserRole)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.User, querySpaceUid=<gen:1>, path=com.adhound.entity.UserRole.user)
             - CollectionAttributeFetchImpl(collection=com.adhound.entity.User.locations, querySpaceUid=<gen:2>, path=com.adhound.entity.UserRole.user.locations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.adhound.entity.Location, querySpaceUid=<gen:3>, path=com.adhound.entity.UserRole.user.locations.<elements>)
                   - EntityAttributeFetchImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:4>, path=com.adhound.entity.UserRole.user.locations.<elements>.region)
                   - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:5>, path=com.adhound.entity.UserRole.user.locations.<elements>.state)
             - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:6>, path=com.adhound.entity.UserRole.user.state)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.adhound.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(locations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.adhound.entity.User.locations)
                      - SQL table alias mapping - locations2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id10_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.adhound.entity.Location)
                            - SQL table alias mapping - locations2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}
                - JOIN (JoinDefinedByMetadata(state)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.adhound.entity.State)
                      - SQL table alias mapping - state3_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_2_4_}

[DEBUG] 2020-04-19 10:24:03.124 [main] EntityLoader - Static select for entity com.adhound.entity.UserRole [NONE]: select userrole0_.id as id1_3_0_, userrole0_.role_name as role_nam2_3_0_, userrole0_.username as username3_3_0_, user1_.id as id1_4_1_, user1_.address as address2_4_1_, user1_.city as city3_4_1_, user1_.email as email4_4_1_, user1_.fax as fax5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.password as password8_4_1_, user1_.phone as phone9_4_1_, user1_.state_id as state_i10_4_1_, user1_.username as usernam11_4_1_, user1_.zipcode as zipcode12_4_1_, locations2_.user_id as user_id10_1_2_, locations2_.id as id1_1_2_, locations2_.id as id1_1_3_, locations2_.address as address2_1_3_, locations2_.city as city3_1_3_, locations2_.fax as fax4_1_3_, locations2_.name as name5_1_3_, locations2_.phone as phone6_1_3_, locations2_.region_id as region_i7_1_3_, locations2_.state_id as state_id8_1_3_, locations2_.user_id as user_id10_1_3_, locations2_.zipcode as zipcode9_1_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_ from user_roles userrole0_ left outer join users user1_ on userrole0_.username=user1_.id left outer join locations locations2_ on user1_.id=locations2_.user_id left outer join states state3_ on user1_.state_id=state3_.id where userrole0_.id=?
[DEBUG] 2020-04-19 10:24:03.124 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ea0f22]
[DEBUG] 2020-04-19 10:24:03.124 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-04-19 10:24:03.124 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-19 10:24:03.124 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16e195cf]
[DEBUG] 2020-04-19 10:24:03.124 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-04-19 10:24:03.124 [main] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-04-19 10:24:03.124 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-19 10:24:03.124 [main] MetamodelGraphWalker - Visiting attribute path : user.fax
[DEBUG] 2020-04-19 10:24:03.124 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-19 10:24:03.124 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-19 10:24:03.124 [main] MetamodelGraphWalker - Visiting attribute path : user.locations
[DEBUG] 2020-04-19 10:24:03.124 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74c7522c]
[DEBUG] 2020-04-19 10:24:03.124 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77c23d90]
[DEBUG] 2020-04-19 10:24:03.124 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.address
[DEBUG] 2020-04-19 10:24:03.124 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.city
[DEBUG] 2020-04-19 10:24:03.124 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.fax
[DEBUG] 2020-04-19 10:24:03.124 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.name
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.phone
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.region
[DEBUG] 2020-04-19 10:24:03.125 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77b71c9]
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.regionId
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.state
[DEBUG] 2020-04-19 10:24:03.125 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6133e20b]
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.stateId
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.user
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Property path deemed to be circular : user.locations.user
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.locations.zipcode
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-04-19 10:24:03.125 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30ffb2a6]
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.state.abbreviation
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.state.name
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.stateId
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Property path deemed to be circular : user.userRole
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-04-19 10:24:03.125 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-04-19 10:24:03.125 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-19 10:24:03.125 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-19 10:24:03.126 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:0>, path=com.adhound.entity.UserRole)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.User, querySpaceUid=<gen:1>, path=com.adhound.entity.UserRole.user)
             - CollectionAttributeFetchImpl(collection=com.adhound.entity.User.locations, querySpaceUid=<gen:2>, path=com.adhound.entity.UserRole.user.locations)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.adhound.entity.Location, querySpaceUid=<gen:3>, path=com.adhound.entity.UserRole.user.locations.<elements>)
                   - EntityAttributeFetchImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:4>, path=com.adhound.entity.UserRole.user.locations.<elements>.region)
                   - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:5>, path=com.adhound.entity.UserRole.user.locations.<elements>.state)
             - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:6>, path=com.adhound.entity.UserRole.user.state)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.adhound.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(locations)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.adhound.entity.User.locations)
                      - SQL table alias mapping - locations2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id10_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.adhound.entity.Location)
                            - SQL table alias mapping - locations2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}
                - JOIN (JoinDefinedByMetadata(state)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.adhound.entity.State)
                      - SQL table alias mapping - state3_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_2_4_}

[DEBUG] 2020-04-19 10:24:03.126 [main] EntityLoader - Static select for entity com.adhound.entity.UserRole [READ]: select userrole0_.id as id1_3_0_, userrole0_.role_name as role_nam2_3_0_, userrole0_.username as username3_3_0_, user1_.id as id1_4_1_, user1_.address as address2_4_1_, user1_.city as city3_4_1_, user1_.email as email4_4_1_, user1_.fax as fax5_4_1_, user1_.first_name as first_na6_4_1_, user1_.last_name as last_nam7_4_1_, user1_.password as password8_4_1_, user1_.phone as phone9_4_1_, user1_.state_id as state_i10_4_1_, user1_.username as usernam11_4_1_, user1_.zipcode as zipcode12_4_1_, locations2_.user_id as user_id10_1_2_, locations2_.id as id1_1_2_, locations2_.id as id1_1_3_, locations2_.address as address2_1_3_, locations2_.city as city3_1_3_, locations2_.fax as fax4_1_3_, locations2_.name as name5_1_3_, locations2_.phone as phone6_1_3_, locations2_.region_id as region_i7_1_3_, locations2_.state_id as state_id8_1_3_, locations2_.user_id as user_id10_1_3_, locations2_.zipcode as zipcode9_1_3_, state3_.id as id1_2_4_, state3_.states_Abbreviation as states_A2_2_4_, state3_.states_Name as states_N3_2_4_ from user_roles userrole0_ left outer join users user1_ on userrole0_.username=user1_.id left outer join locations locations2_ on user1_.id=locations2_.user_id left outer join states state3_ on user1_.state_id=state3_.id where userrole0_.id=?
[DEBUG] 2020-04-19 10:24:03.126 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.UserRole: select userrole0_.id as id1_3_0_, userrole0_.role_name as role_nam2_3_0_, userrole0_.username as username3_3_0_ from user_roles userrole0_ where userrole0_.id=?
[DEBUG] 2020-04-19 10:24:03.126 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.UserRole: select userrole0_.id as id1_3_0_, userrole0_.role_name as role_nam2_3_0_, userrole0_.username as username3_3_0_ from user_roles userrole0_ where userrole0_.id=?
[DEBUG] 2020-04-19 10:24:03.126 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.State
[DEBUG] 2020-04-19 10:24:03.126 [main] AbstractEntityPersister -  Version select: select id from states where id =?
[DEBUG] 2020-04-19 10:24:03.126 [main] AbstractEntityPersister -  Snapshot select: select state_.id, state_.states_Abbreviation as states_A2_2_, state_.states_Name as states_N3_2_ from states state_ where state_.id=?
[DEBUG] 2020-04-19 10:24:03.126 [main] AbstractEntityPersister -  Insert 0: insert into states (states_Abbreviation, states_Name, id) values (?, ?, ?)
[DEBUG] 2020-04-19 10:24:03.126 [main] AbstractEntityPersister -  Update 0: update states set states_Abbreviation=?, states_Name=? where id=?
[DEBUG] 2020-04-19 10:24:03.126 [main] AbstractEntityPersister -  Delete 0: delete from states where id=?
[DEBUG] 2020-04-19 10:24:03.126 [main] AbstractEntityPersister -  Identity insert: insert into states (states_Abbreviation, states_Name) values (?, ?)
[DEBUG] 2020-04-19 10:24:03.126 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d033453]
[DEBUG] 2020-04-19 10:24:03.126 [main] MetamodelGraphWalker - Visiting attribute path : abbreviation
[DEBUG] 2020-04-19 10:24:03.127 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-04-19 10:24:03.127 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-19 10:24:03.127 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-19 10:24:03.127 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.State)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:0>, path=com.adhound.entity.State)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2020-04-19 10:24:03.127 [main] EntityLoader - Static select for entity com.adhound.entity.State [NONE]: select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-04-19 10:24:03.127 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e795a1d]
[DEBUG] 2020-04-19 10:24:03.127 [main] MetamodelGraphWalker - Visiting attribute path : abbreviation
[DEBUG] 2020-04-19 10:24:03.127 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-04-19 10:24:03.127 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-19 10:24:03.127 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-19 10:24:03.127 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.State)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:0>, path=com.adhound.entity.State)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2020-04-19 10:24:03.127 [main] EntityLoader - Static select for entity com.adhound.entity.State [READ]: select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-04-19 10:24:03.127 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.State: select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-04-19 10:24:03.127 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.State: select state0_.id as id1_2_0_, state0_.states_Abbreviation as states_A2_2_0_, state0_.states_Name as states_N3_2_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-04-19 10:24:03.127 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.Region
[DEBUG] 2020-04-19 10:24:03.127 [main] AbstractEntityPersister -  Version select: select id from location_regions where id =?
[DEBUG] 2020-04-19 10:24:03.127 [main] AbstractEntityPersister -  Snapshot select: select region_.id, region_.description as descript2_0_, region_.name as name3_0_ from location_regions region_ where region_.id=?
[DEBUG] 2020-04-19 10:24:03.127 [main] AbstractEntityPersister -  Insert 0: insert into location_regions (description, name, id) values (?, ?, ?)
[DEBUG] 2020-04-19 10:24:03.127 [main] AbstractEntityPersister -  Update 0: update location_regions set description=?, name=? where id=?
[DEBUG] 2020-04-19 10:24:03.127 [main] AbstractEntityPersister -  Delete 0: delete from location_regions where id=?
[DEBUG] 2020-04-19 10:24:03.128 [main] AbstractEntityPersister -  Identity insert: insert into location_regions (description, name) values (?, ?)
[DEBUG] 2020-04-19 10:24:03.128 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cc41b77]
[DEBUG] 2020-04-19 10:24:03.128 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-19 10:24:03.128 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-04-19 10:24:03.128 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-19 10:24:03.128 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-19 10:24:03.128 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.Region)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:0>, path=com.adhound.entity.Region)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.Region)
          - SQL table alias mapping - region0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-04-19 10:24:03.128 [main] EntityLoader - Static select for entity com.adhound.entity.Region [NONE]: select region0_.id as id1_0_0_, region0_.description as descript2_0_0_, region0_.name as name3_0_0_ from location_regions region0_ where region0_.id=?
[DEBUG] 2020-04-19 10:24:03.128 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e93b0e7]
[DEBUG] 2020-04-19 10:24:03.128 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-19 10:24:03.128 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-04-19 10:24:03.128 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-19 10:24:03.128 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-19 10:24:03.128 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.Region)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:0>, path=com.adhound.entity.Region)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.Region)
          - SQL table alias mapping - region0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-04-19 10:24:03.128 [main] EntityLoader - Static select for entity com.adhound.entity.Region [READ]: select region0_.id as id1_0_0_, region0_.description as descript2_0_0_, region0_.name as name3_0_0_ from location_regions region0_ where region0_.id=?
[DEBUG] 2020-04-19 10:24:03.128 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.Region: select region0_.id as id1_0_0_, region0_.description as descript2_0_0_, region0_.name as name3_0_0_ from location_regions region0_ where region0_.id=?
[DEBUG] 2020-04-19 10:24:03.128 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.Region: select region0_.id as id1_0_0_, region0_.description as descript2_0_0_, region0_.name as name3_0_0_ from location_regions region0_ where region0_.id=?
[DEBUG] 2020-04-19 10:24:03.129 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.Location
[DEBUG] 2020-04-19 10:24:03.129 [main] AbstractEntityPersister -  Version select: select id from locations where id =?
[DEBUG] 2020-04-19 10:24:03.129 [main] AbstractEntityPersister -  Snapshot select: select location_.id, location_.address as address2_1_, location_.city as city3_1_, location_.fax as fax4_1_, location_.name as name5_1_, location_.phone as phone6_1_, location_.region_id as region_i7_1_, location_.state_id as state_id8_1_, location_.user_id as user_id10_1_, location_.zipcode as zipcode9_1_ from locations location_ where location_.id=?
[DEBUG] 2020-04-19 10:24:03.129 [main] AbstractEntityPersister -  Insert 0: insert into locations (address, city, fax, name, phone, region_id, state_id, user_id, zipcode, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-19 10:24:03.129 [main] AbstractEntityPersister -  Update 0: update locations set address=?, city=?, fax=?, name=?, phone=?, region_id=?, state_id=?, user_id=?, zipcode=? where id=?
[DEBUG] 2020-04-19 10:24:03.129 [main] AbstractEntityPersister -  Delete 0: delete from locations where id=?
[DEBUG] 2020-04-19 10:24:03.129 [main] AbstractEntityPersister -  Identity insert: insert into locations (address, city, fax, name, phone, region_id, state_id, user_id, zipcode) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-19 10:24:03.129 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62cd562d]
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : fax
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : region
[DEBUG] 2020-04-19 10:24:03.129 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e7bc939]
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : region.description
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : region.name
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : regionId
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-04-19 10:24:03.129 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fc1a8f6]
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : state.abbreviation
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : state.name
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : stateId
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-19 10:24:03.129 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2037f12b]
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : user.fax
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : user.locations
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Property path deemed to be circular : user.locations
[DEBUG] 2020-04-19 10:24:03.129 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-19 10:24:03.130 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-04-19 10:24:03.130 [main] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-04-19 10:24:03.130 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a9e8da1]
[DEBUG] 2020-04-19 10:24:03.130 [main] MetamodelGraphWalker - Visiting attribute path : user.state.abbreviation
[DEBUG] 2020-04-19 10:24:03.130 [main] MetamodelGraphWalker - Visiting attribute path : user.state.name
[DEBUG] 2020-04-19 10:24:03.130 [main] MetamodelGraphWalker - Visiting attribute path : user.stateId
[DEBUG] 2020-04-19 10:24:03.130 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole
[DEBUG] 2020-04-19 10:24:03.130 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b94703b]
[DEBUG] 2020-04-19 10:24:03.130 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33a47707]
[DEBUG] 2020-04-19 10:24:03.130 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole.roleName
[DEBUG] 2020-04-19 10:24:03.130 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole.user
[DEBUG] 2020-04-19 10:24:03.130 [main] MetamodelGraphWalker - Property path deemed to be circular : user.userRole.user
[DEBUG] 2020-04-19 10:24:03.130 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole.username
[DEBUG] 2020-04-19 10:24:03.130 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-19 10:24:03.130 [main] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-04-19 10:24:03.130 [main] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-04-19 10:24:03.130 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-19 10:24:03.130 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-19 10:24:03.131 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.Location)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.Location, querySpaceUid=<gen:0>, path=com.adhound.entity.Location)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:1>, path=com.adhound.entity.Location.region)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:2>, path=com.adhound.entity.Location.state)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.User, querySpaceUid=<gen:3>, path=com.adhound.entity.Location.user)
             - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:4>, path=com.adhound.entity.Location.user.state)
             - CollectionAttributeFetchImpl(collection=com.adhound.entity.User.userRole, querySpaceUid=<gen:5>, path=com.adhound.entity.Location.user.userRole)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:6>, path=com.adhound.entity.Location.user.userRole.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.Location)
          - SQL table alias mapping - location0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(region)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.adhound.entity.Region)
                - SQL table alias mapping - region1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(state)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.adhound.entity.State)
                - SQL table alias mapping - state2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.adhound.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(state)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.adhound.entity.State)
                      - SQL table alias mapping - state4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_2_4_}
                - JOIN (JoinDefinedByMetadata(userRole)) : <gen:3> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.adhound.entity.User.userRole)
                      - SQL table alias mapping - userrole5_
                      - alias suffix - 5_
                      - suffixed key columns - {username3_3_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_3_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.adhound.entity.UserRole)
                            - SQL table alias mapping - userrole5_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_3_6_}

[DEBUG] 2020-04-19 10:24:03.131 [main] EntityLoader - Static select for entity com.adhound.entity.Location [NONE]: select location0_.id as id1_1_0_, location0_.address as address2_1_0_, location0_.city as city3_1_0_, location0_.fax as fax4_1_0_, location0_.name as name5_1_0_, location0_.phone as phone6_1_0_, location0_.region_id as region_i7_1_0_, location0_.state_id as state_id8_1_0_, location0_.user_id as user_id10_1_0_, location0_.zipcode as zipcode9_1_0_, region1_.id as id1_0_1_, region1_.description as descript2_0_1_, region1_.name as name3_0_1_, state2_.id as id1_2_2_, state2_.states_Abbreviation as states_A2_2_2_, state2_.states_Name as states_N3_2_2_, user3_.id as id1_4_3_, user3_.address as address2_4_3_, user3_.city as city3_4_3_, user3_.email as email4_4_3_, user3_.fax as fax5_4_3_, user3_.first_name as first_na6_4_3_, user3_.last_name as last_nam7_4_3_, user3_.password as password8_4_3_, user3_.phone as phone9_4_3_, user3_.state_id as state_i10_4_3_, user3_.username as usernam11_4_3_, user3_.zipcode as zipcode12_4_3_, state4_.id as id1_2_4_, state4_.states_Abbreviation as states_A2_2_4_, state4_.states_Name as states_N3_2_4_, userrole5_.username as username3_3_5_, userrole5_.id as id1_3_5_, userrole5_.id as id1_3_6_, userrole5_.role_name as role_nam2_3_6_, userrole5_.username as username3_3_6_ from locations location0_ inner join location_regions region1_ on location0_.region_id=region1_.id inner join states state2_ on location0_.state_id=state2_.id left outer join users user3_ on location0_.user_id=user3_.id left outer join states state4_ on user3_.state_id=state4_.id left outer join user_roles userrole5_ on user3_.id=userrole5_.username where location0_.id=?
[DEBUG] 2020-04-19 10:24:03.131 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab7ac02]
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : fax
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : region
[DEBUG] 2020-04-19 10:24:03.131 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fad51a3]
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : region.description
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : region.name
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : regionId
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-04-19 10:24:03.131 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@acb5508]
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : state.abbreviation
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : state.name
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : stateId
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-19 10:24:03.131 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ac0a14b]
[DEBUG] 2020-04-19 10:24:03.131 [main] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.fax
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.locations
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Property path deemed to be circular : user.locations
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-04-19 10:24:03.132 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e24592e]
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.state.abbreviation
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.state.name
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.stateId
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole
[DEBUG] 2020-04-19 10:24:03.132 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50ff7063]
[DEBUG] 2020-04-19 10:24:03.132 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67a8bcbb]
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole.roleName
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole.user
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Property path deemed to be circular : user.userRole.user
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.userRole.username
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-04-19 10:24:03.132 [main] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-04-19 10:24:03.132 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-19 10:24:03.132 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-19 10:24:03.133 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.Location)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.Location, querySpaceUid=<gen:0>, path=com.adhound.entity.Location)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:1>, path=com.adhound.entity.Location.region)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:2>, path=com.adhound.entity.Location.state)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.User, querySpaceUid=<gen:3>, path=com.adhound.entity.Location.user)
             - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:4>, path=com.adhound.entity.Location.user.state)
             - CollectionAttributeFetchImpl(collection=com.adhound.entity.User.userRole, querySpaceUid=<gen:5>, path=com.adhound.entity.Location.user.userRole)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:6>, path=com.adhound.entity.Location.user.userRole.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.Location)
          - SQL table alias mapping - location0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(region)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.adhound.entity.Region)
                - SQL table alias mapping - region1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(state)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.adhound.entity.State)
                - SQL table alias mapping - state2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.adhound.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(state)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.adhound.entity.State)
                      - SQL table alias mapping - state4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_2_4_}
                - JOIN (JoinDefinedByMetadata(userRole)) : <gen:3> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.adhound.entity.User.userRole)
                      - SQL table alias mapping - userrole5_
                      - alias suffix - 5_
                      - suffixed key columns - {username3_3_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_3_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.adhound.entity.UserRole)
                            - SQL table alias mapping - userrole5_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_3_6_}

[DEBUG] 2020-04-19 10:24:03.133 [main] EntityLoader - Static select for entity com.adhound.entity.Location [READ]: select location0_.id as id1_1_0_, location0_.address as address2_1_0_, location0_.city as city3_1_0_, location0_.fax as fax4_1_0_, location0_.name as name5_1_0_, location0_.phone as phone6_1_0_, location0_.region_id as region_i7_1_0_, location0_.state_id as state_id8_1_0_, location0_.user_id as user_id10_1_0_, location0_.zipcode as zipcode9_1_0_, region1_.id as id1_0_1_, region1_.description as descript2_0_1_, region1_.name as name3_0_1_, state2_.id as id1_2_2_, state2_.states_Abbreviation as states_A2_2_2_, state2_.states_Name as states_N3_2_2_, user3_.id as id1_4_3_, user3_.address as address2_4_3_, user3_.city as city3_4_3_, user3_.email as email4_4_3_, user3_.fax as fax5_4_3_, user3_.first_name as first_na6_4_3_, user3_.last_name as last_nam7_4_3_, user3_.password as password8_4_3_, user3_.phone as phone9_4_3_, user3_.state_id as state_i10_4_3_, user3_.username as usernam11_4_3_, user3_.zipcode as zipcode12_4_3_, state4_.id as id1_2_4_, state4_.states_Abbreviation as states_A2_2_4_, state4_.states_Name as states_N3_2_4_, userrole5_.username as username3_3_5_, userrole5_.id as id1_3_5_, userrole5_.id as id1_3_6_, userrole5_.role_name as role_nam2_3_6_, userrole5_.username as username3_3_6_ from locations location0_ inner join location_regions region1_ on location0_.region_id=region1_.id inner join states state2_ on location0_.state_id=state2_.id left outer join users user3_ on location0_.user_id=user3_.id left outer join states state4_ on user3_.state_id=state4_.id left outer join user_roles userrole5_ on user3_.id=userrole5_.username where location0_.id=?
[DEBUG] 2020-04-19 10:24:03.133 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.Location: select location0_.id as id1_1_0_, location0_.address as address2_1_0_, location0_.city as city3_1_0_, location0_.fax as fax4_1_0_, location0_.name as name5_1_0_, location0_.phone as phone6_1_0_, location0_.region_id as region_i7_1_0_, location0_.state_id as state_id8_1_0_, location0_.user_id as user_id10_1_0_, location0_.zipcode as zipcode9_1_0_ from locations location0_ where location0_.id=?
[DEBUG] 2020-04-19 10:24:03.133 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.Location: select location0_.id as id1_1_0_, location0_.address as address2_1_0_, location0_.city as city3_1_0_, location0_.fax as fax4_1_0_, location0_.name as name5_1_0_, location0_.phone as phone6_1_0_, location0_.region_id as region_i7_1_0_, location0_.state_id as state_id8_1_0_, location0_.user_id as user_id10_1_0_, location0_.zipcode as zipcode9_1_0_ from locations location0_ where location0_.id=?
[DEBUG] 2020-04-19 10:24:03.136 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2499b971]
[DEBUG] 2020-04-19 10:24:03.136 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36d697ab]
[DEBUG] 2020-04-19 10:24:03.136 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-04-19 10:24:03.136 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-19 10:24:03.136 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-19 10:24:03.136 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-04-19 10:24:03.136 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-19 10:24:03.138 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-19 10:24:03.138 [main] LoadPlanTreePrinter - LoadPlan(collection=com.adhound.entity.User.userRole)
    - Returns
       - CollectionReturnImpl(collection=com.adhound.entity.User.userRole, querySpaceUid=<gen:0>, path=[com.adhound.entity.User.userRole])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:1>, path=[com.adhound.entity.User.userRole].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.adhound.entity.User.userRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {username3_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.adhound.entity.UserRole)
                - SQL table alias mapping - userrole0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[DEBUG] 2020-04-19 10:24:03.138 [main] CollectionLoader - Static select for collection com.adhound.entity.User.userRole: select userrole0_.username as username3_3_0_, userrole0_.id as id1_3_0_, userrole0_.id as id1_3_1_, userrole0_.role_name as role_nam2_3_1_, userrole0_.username as username3_3_1_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-04-19 10:24:03.138 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fd751de]
[DEBUG] 2020-04-19 10:24:03.138 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e162a35]
[DEBUG] 2020-04-19 10:24:03.138 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-04-19 10:24:03.138 [main] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-04-19 10:24:03.138 [main] MetamodelGraphWalker - Visiting attribute path : fax
[DEBUG] 2020-04-19 10:24:03.138 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-04-19 10:24:03.138 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-04-19 10:24:03.138 [main] MetamodelGraphWalker - Visiting attribute path : region
[DEBUG] 2020-04-19 10:24:03.138 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9869a8]
[DEBUG] 2020-04-19 10:24:03.139 [main] MetamodelGraphWalker - Visiting attribute path : region.description
[DEBUG] 2020-04-19 10:24:03.139 [main] MetamodelGraphWalker - Visiting attribute path : region.name
[DEBUG] 2020-04-19 10:24:03.139 [main] MetamodelGraphWalker - Visiting attribute path : regionId
[DEBUG] 2020-04-19 10:24:03.139 [main] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-04-19 10:24:03.139 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40f9f60d]
[DEBUG] 2020-04-19 10:24:03.139 [main] MetamodelGraphWalker - Visiting attribute path : state.abbreviation
[DEBUG] 2020-04-19 10:24:03.139 [main] MetamodelGraphWalker - Visiting attribute path : state.name
[DEBUG] 2020-04-19 10:24:03.139 [main] MetamodelGraphWalker - Visiting attribute path : stateId
[DEBUG] 2020-04-19 10:24:03.139 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-19 10:24:03.139 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-19 10:24:03.139 [main] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-04-19 10:24:03.139 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-19 10:24:03.139 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-19 10:24:03.139 [main] LoadPlanTreePrinter - LoadPlan(collection=com.adhound.entity.User.locations)
    - Returns
       - CollectionReturnImpl(collection=com.adhound.entity.User.locations, querySpaceUid=<gen:0>, path=[com.adhound.entity.User.locations])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.adhound.entity.Location, querySpaceUid=<gen:1>, path=[com.adhound.entity.User.locations].<elements>)
             - EntityAttributeFetchImpl(entity=com.adhound.entity.Region, querySpaceUid=<gen:2>, path=[com.adhound.entity.User.locations].<elements>.region)
             - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:3>, path=[com.adhound.entity.User.locations].<elements>.state)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.adhound.entity.User.locations)
          - SQL table alias mapping - locations0_
          - alias suffix - 0_
          - suffixed key columns - {user_id10_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.adhound.entity.Location)
                - SQL table alias mapping - locations0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(region)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.adhound.entity.Region)
                      - SQL table alias mapping - region1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(state)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.adhound.entity.State)
                      - SQL table alias mapping - state2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}

[DEBUG] 2020-04-19 10:24:03.139 [main] CollectionLoader - Static select for collection com.adhound.entity.User.locations: select locations0_.user_id as user_id10_1_0_, locations0_.id as id1_1_0_, locations0_.id as id1_1_1_, locations0_.address as address2_1_1_, locations0_.city as city3_1_1_, locations0_.fax as fax4_1_1_, locations0_.name as name5_1_1_, locations0_.phone as phone6_1_1_, locations0_.region_id as region_i7_1_1_, locations0_.state_id as state_id8_1_1_, locations0_.user_id as user_id10_1_1_, locations0_.zipcode as zipcode9_1_1_, region1_.id as id1_0_2_, region1_.description as descript2_0_2_, region1_.name as name3_0_2_, state2_.id as id1_2_3_, state2_.states_Abbreviation as states_A2_2_3_, state2_.states_Name as states_N3_2_3_ from locations locations0_ inner join location_regions region1_ on locations0_.region_id=region1_.id inner join states state2_ on locations0_.state_id=state2_.id where locations0_.user_id=?
[DEBUG] 2020-04-19 10:24:03.159 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-04-19 10:24:03.159 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-04-19 10:24:03.160 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-04-19 10:24:03.163 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-04-19 10:24:03.163 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-04-19 10:24:03.164 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-04-19 10:24:03.164 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-04-19 10:24:03.165 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c573229
[DEBUG] 2020-04-19 10:24:03.167 [main] SessionFactoryRegistry - Registering SessionFactory: 6ddcc2bd-f30e-492b-b080-4b4a7b9bb0b4 (<unnamed>)
[DEBUG] 2020-04-19 10:24:03.167 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
