[DEBUG] 2020-02-19 11:48:21.094 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-19 11:48:21.097 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-19 11:48:21.100 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-19 11:48:21.142 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-19 11:48:21.144 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-19 11:48:21.256 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-19 11:48:21.423 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-19 11:48:21.433 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-19 11:48:21.433 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-19 11:48:21.455 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-19 11:48:21.472 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@417ad4f3
[DEBUG] 2020-02-19 11:48:21.472 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@417ad4f3
[DEBUG] 2020-02-19 11:48:21.473 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@417ad4f3
[DEBUG] 2020-02-19 11:48:21.473 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6f8d7714
[DEBUG] 2020-02-19 11:48:21.473 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e93f3d5
[DEBUG] 2020-02-19 11:48:21.473 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7180e701
[DEBUG] 2020-02-19 11:48:21.474 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5a865416
[DEBUG] 2020-02-19 11:48:21.474 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5a865416
[DEBUG] 2020-02-19 11:48:21.474 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5a865416
[DEBUG] 2020-02-19 11:48:21.475 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2375b321
[DEBUG] 2020-02-19 11:48:21.475 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2375b321
[DEBUG] 2020-02-19 11:48:21.475 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2375b321
[DEBUG] 2020-02-19 11:48:21.475 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@19f040ba
[DEBUG] 2020-02-19 11:48:21.475 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@19f040ba
[DEBUG] 2020-02-19 11:48:21.475 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@19f040ba
[DEBUG] 2020-02-19 11:48:21.476 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6d6cb754
[DEBUG] 2020-02-19 11:48:21.476 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6d6cb754
[DEBUG] 2020-02-19 11:48:21.476 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6d6cb754
[DEBUG] 2020-02-19 11:48:21.476 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@213deac2
[DEBUG] 2020-02-19 11:48:21.477 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@213deac2
[DEBUG] 2020-02-19 11:48:21.477 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@213deac2
[DEBUG] 2020-02-19 11:48:21.477 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5b5caf08
[DEBUG] 2020-02-19 11:48:21.477 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5b5caf08
[DEBUG] 2020-02-19 11:48:21.477 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b5caf08
[DEBUG] 2020-02-19 11:48:21.478 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3e6f3bae
[DEBUG] 2020-02-19 11:48:21.478 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3e6f3bae
[DEBUG] 2020-02-19 11:48:21.478 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3e6f3bae
[DEBUG] 2020-02-19 11:48:21.478 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d400943
[DEBUG] 2020-02-19 11:48:21.478 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d400943
[DEBUG] 2020-02-19 11:48:21.479 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@aed0151
[DEBUG] 2020-02-19 11:48:21.479 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@aed0151
[DEBUG] 2020-02-19 11:48:21.479 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3a60c416
[DEBUG] 2020-02-19 11:48:21.479 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a60c416
[DEBUG] 2020-02-19 11:48:21.480 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57bd2029
[DEBUG] 2020-02-19 11:48:21.480 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@53667cbe
[DEBUG] 2020-02-19 11:48:21.480 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@577f9109
[DEBUG] 2020-02-19 11:48:21.480 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@577f9109
[DEBUG] 2020-02-19 11:48:21.481 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4642b71d
[DEBUG] 2020-02-19 11:48:21.481 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4642b71d
[DEBUG] 2020-02-19 11:48:21.484 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4e558728
[DEBUG] 2020-02-19 11:48:21.484 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4e558728
[DEBUG] 2020-02-19 11:48:21.485 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@14bae047
[DEBUG] 2020-02-19 11:48:21.485 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@14bae047
[DEBUG] 2020-02-19 11:48:21.486 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@29a23c3d
[DEBUG] 2020-02-19 11:48:21.486 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@29a23c3d
[DEBUG] 2020-02-19 11:48:21.486 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@17ca8b92
[DEBUG] 2020-02-19 11:48:21.486 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@17ca8b92
[DEBUG] 2020-02-19 11:48:21.487 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bb3131b
[DEBUG] 2020-02-19 11:48:21.487 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bb3131b
[DEBUG] 2020-02-19 11:48:21.489 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6a933be2
[DEBUG] 2020-02-19 11:48:21.489 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6a933be2
[DEBUG] 2020-02-19 11:48:21.489 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@67207d8a
[DEBUG] 2020-02-19 11:48:21.489 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@67207d8a
[DEBUG] 2020-02-19 11:48:21.490 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@25c5e994
[DEBUG] 2020-02-19 11:48:21.490 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@25c5e994
[DEBUG] 2020-02-19 11:48:21.491 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@70325d20
[DEBUG] 2020-02-19 11:48:21.491 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70325d20
[DEBUG] 2020-02-19 11:48:21.492 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@187eb9a8
[DEBUG] 2020-02-19 11:48:21.494 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@187eb9a8
[DEBUG] 2020-02-19 11:48:21.494 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@187eb9a8
[DEBUG] 2020-02-19 11:48:21.495 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ff57625
[DEBUG] 2020-02-19 11:48:21.496 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@18fdb6cf
[DEBUG] 2020-02-19 11:48:21.496 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18fdb6cf
[DEBUG] 2020-02-19 11:48:21.496 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18fdb6cf
[DEBUG] 2020-02-19 11:48:21.496 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@720653c2
[DEBUG] 2020-02-19 11:48:21.496 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4fe01803
[DEBUG] 2020-02-19 11:48:21.497 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4fe01803
[DEBUG] 2020-02-19 11:48:21.498 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@599f571f
[DEBUG] 2020-02-19 11:48:21.498 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@599f571f
[DEBUG] 2020-02-19 11:48:21.499 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@65327f5
[DEBUG] 2020-02-19 11:48:21.499 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@65327f5
[DEBUG] 2020-02-19 11:48:21.499 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@349d0836
[DEBUG] 2020-02-19 11:48:21.499 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@349d0836
[DEBUG] 2020-02-19 11:48:21.500 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4917d36b
[DEBUG] 2020-02-19 11:48:21.500 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4917d36b
[DEBUG] 2020-02-19 11:48:21.500 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7b44b63d
[DEBUG] 2020-02-19 11:48:21.500 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@66434cc8
[DEBUG] 2020-02-19 11:48:21.501 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@66434cc8
[DEBUG] 2020-02-19 11:48:21.501 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@66434cc8
[DEBUG] 2020-02-19 11:48:21.501 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6d467c87
[DEBUG] 2020-02-19 11:48:21.501 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6d467c87
[DEBUG] 2020-02-19 11:48:21.501 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6d467c87
[DEBUG] 2020-02-19 11:48:21.502 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@511d5d04
[DEBUG] 2020-02-19 11:48:21.502 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5328a9c1
[DEBUG] 2020-02-19 11:48:21.502 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@16fe9c29
[DEBUG] 2020-02-19 11:48:21.502 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@16fe9c29
[DEBUG] 2020-02-19 11:48:21.502 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@16fe9c29
[DEBUG] 2020-02-19 11:48:21.503 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4d4960c8
[DEBUG] 2020-02-19 11:48:21.503 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4d4960c8
[DEBUG] 2020-02-19 11:48:21.503 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4d4960c8
[DEBUG] 2020-02-19 11:48:21.503 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6d91790b
[DEBUG] 2020-02-19 11:48:21.503 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@a567e72
[DEBUG] 2020-02-19 11:48:21.504 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2d84cb86
[DEBUG] 2020-02-19 11:48:21.504 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2d84cb86
[DEBUG] 2020-02-19 11:48:21.504 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@baf1bb3
[DEBUG] 2020-02-19 11:48:21.506 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4b1abd11
[DEBUG] 2020-02-19 11:48:21.506 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4b1abd11
[DEBUG] 2020-02-19 11:48:21.506 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2b9b7f1f
[DEBUG] 2020-02-19 11:48:21.507 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b9b7f1f
[DEBUG] 2020-02-19 11:48:21.507 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19593091
[DEBUG] 2020-02-19 11:48:21.507 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5e742e4
[DEBUG] 2020-02-19 11:48:21.508 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@afb5821
[DEBUG] 2020-02-19 11:48:21.510 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6090f3ca
[DEBUG] 2020-02-19 11:48:21.510 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6090f3ca
[DEBUG] 2020-02-19 11:48:21.510 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6872f9c8
[DEBUG] 2020-02-19 11:48:21.511 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6d2d99fc
[DEBUG] 2020-02-19 11:48:21.511 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@bdecc21
[DEBUG] 2020-02-19 11:48:21.511 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e3a39cd
[DEBUG] 2020-02-19 11:48:21.511 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21f9277b
[DEBUG] 2020-02-19 11:48:21.511 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@201aa8c1
[DEBUG] 2020-02-19 11:48:21.511 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5d58c727
[DEBUG] 2020-02-19 11:48:21.511 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52a36910
[DEBUG] 2020-02-19 11:48:21.526 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-19 11:48:21.527 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-19 11:48:21.527 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-19 11:48:21.527 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-19 11:48:21.527 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-19 11:48:21.528 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-19 11:48:21.528 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-19 11:48:21.528 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-19 11:48:21.529 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-19 11:48:21.529 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-19 11:48:21.529 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-19 11:48:21.530 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-19 11:48:21.530 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-19 11:48:21.530 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-19 11:48:21.536 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/adhound-test
[INFO ] 2020-02-19 11:48:21.536 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=devfecta}
[INFO ] 2020-02-19 11:48:21.536 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-19 11:48:21.600 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-19 11:48:21.927 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19-0ubuntu0.19.10.3
      major : 8
      minor : 0
[DEBUG] 2020-02-19 11:48:21.928 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-19 11:48:21.928 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-19 11:48:21.946 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-19 11:48:21.958 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-19 11:48:21.971 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-19 11:48:21.988 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-19 11:48:21.990 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@572e6fd9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7f5eae0f]
[DEBUG] 2020-02-19 11:48:22.014 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.User
[DEBUG] 2020-02-19 11:48:22.024 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-19 11:48:22.027 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-02-19 11:48:22.029 [main] EntityBinder - Bind entity com.adhound.entity.User on table users
[DEBUG] 2020-02-19 11:48:22.042 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.044 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-19 11:48:22.045 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:id]
[DEBUG] 2020-02-19 11:48:22.045 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-19 11:48:22.046 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-19 11:48:22.048 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-19 11:48:22.049 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.049 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-02-19 11:48:22.049 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:address]
[DEBUG] 2020-02-19 11:48:22.049 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-02-19 11:48:22.049 [main] PropertyBinder - Building property address
[DEBUG] 2020-02-19 11:48:22.049 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.050 [main] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-02-19 11:48:22.050 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:city]
[DEBUG] 2020-02-19 11:48:22.050 [main] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-02-19 11:48:22.050 [main] PropertyBinder - Building property city
[DEBUG] 2020-02-19 11:48:22.050 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.050 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-19 11:48:22.050 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:email]
[DEBUG] 2020-02-19 11:48:22.050 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-19 11:48:22.050 [main] PropertyBinder - Building property email
[DEBUG] 2020-02-19 11:48:22.050 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=fax, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.050 [main] PropertyBinder - MetadataSourceProcessor property fax with lazy=false
[DEBUG] 2020-02-19 11:48:22.050 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:fax]
[DEBUG] 2020-02-19 11:48:22.050 [main] SimpleValueBinder - building SimpleValue for fax
[DEBUG] 2020-02-19 11:48:22.050 [main] PropertyBinder - Building property fax
[DEBUG] 2020-02-19 11:48:22.051 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.051 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-19 11:48:22.051 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:firstName]
[DEBUG] 2020-02-19 11:48:22.051 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-19 11:48:22.051 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-02-19 11:48:22.051 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.051 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-19 11:48:22.051 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:lastName]
[DEBUG] 2020-02-19 11:48:22.051 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-19 11:48:22.051 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-02-19 11:48:22.051 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.051 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-19 11:48:22.051 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:password]
[DEBUG] 2020-02-19 11:48:22.051 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-19 11:48:22.051 [main] PropertyBinder - Building property password
[DEBUG] 2020-02-19 11:48:22.051 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.051 [main] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-02-19 11:48:22.052 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:phone]
[DEBUG] 2020-02-19 11:48:22.052 [main] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-02-19 11:48:22.052 [main] PropertyBinder - Building property phone
[DEBUG] 2020-02-19 11:48:22.052 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='state_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-19 11:48:22.052 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.054 [main] PropertyBinder - Building property state
[DEBUG] 2020-02-19 11:48:22.054 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=state_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.054 [main] PropertyBinder - MetadataSourceProcessor property stateId with lazy=false
[DEBUG] 2020-02-19 11:48:22.054 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:stateId]
[DEBUG] 2020-02-19 11:48:22.054 [main] SimpleValueBinder - building SimpleValue for stateId
[DEBUG] 2020-02-19 11:48:22.054 [main] PropertyBinder - Building property stateId
[DEBUG] 2020-02-19 11:48:22.054 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-19 11:48:22.054 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRole, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.055 [main] PropertyBinder - Building property userRole
[DEBUG] 2020-02-19 11:48:22.055 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.055 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-19 11:48:22.055 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:username]
[DEBUG] 2020-02-19 11:48:22.055 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-19 11:48:22.055 [main] PropertyBinder - Building property username
[DEBUG] 2020-02-19 11:48:22.055 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=zipcode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.055 [main] PropertyBinder - MetadataSourceProcessor property zipcode with lazy=false
[DEBUG] 2020-02-19 11:48:22.055 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:zipcode]
[DEBUG] 2020-02-19 11:48:22.055 [main] SimpleValueBinder - building SimpleValue for zipcode
[DEBUG] 2020-02-19 11:48:22.055 [main] PropertyBinder - Building property zipcode
[DEBUG] 2020-02-19 11:48:22.056 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.UserRole
[DEBUG] 2020-02-19 11:48:22.056 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-19 11:48:22.056 [main] EntityBinder - Import with entity name UserRole
[DEBUG] 2020-02-19 11:48:22.056 [main] EntityBinder - Bind entity com.adhound.entity.UserRole on table user_roles
[DEBUG] 2020-02-19 11:48:22.057 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.057 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-19 11:48:22.057 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:username]
[DEBUG] 2020-02-19 11:48:22.057 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-19 11:48:22.057 [main] PropertyBinder - Building property username
[DEBUG] 2020-02-19 11:48:22.057 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(username)]), username, assigned, , ...)
[DEBUG] 2020-02-19 11:48:22.057 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.057 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-19 11:48:22.057 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:id]
[DEBUG] 2020-02-19 11:48:22.057 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-19 11:48:22.058 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-19 11:48:22.058 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.058 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-02-19 11:48:22.058 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:roleName]
[DEBUG] 2020-02-19 11:48:22.058 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-02-19 11:48:22.058 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-02-19 11:48:22.058 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.State
[DEBUG] 2020-02-19 11:48:22.058 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-19 11:48:22.058 [main] EntityBinder - Import with entity name State
[DEBUG] 2020-02-19 11:48:22.058 [main] EntityBinder - Bind entity com.adhound.entity.State on table states
[DEBUG] 2020-02-19 11:48:22.059 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.059 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-19 11:48:22.059 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:id]
[DEBUG] 2020-02-19 11:48:22.059 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-19 11:48:22.059 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-19 11:48:22.059 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-19 11:48:22.059 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=states_Abbreviation, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.059 [main] PropertyBinder - MetadataSourceProcessor property abbreviation with lazy=false
[DEBUG] 2020-02-19 11:48:22.059 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:abbreviation]
[DEBUG] 2020-02-19 11:48:22.059 [main] SimpleValueBinder - building SimpleValue for abbreviation
[DEBUG] 2020-02-19 11:48:22.059 [main] PropertyBinder - Building property abbreviation
[DEBUG] 2020-02-19 11:48:22.059 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=states_Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-19 11:48:22.059 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-19 11:48:22.060 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:name]
[DEBUG] 2020-02-19 11:48:22.060 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-19 11:48:22.060 [main] PropertyBinder - Building property name
[DEBUG] 2020-02-19 11:48:22.060 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-19 11:48:22.060 [main] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-02-19 11:48:22.060 [main] SimpleValueBinder - Starting fillSimpleValue for city
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for fax
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for stateId
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for zipcode
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for abbreviation
[DEBUG] 2020-02-19 11:48:22.061 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-19 11:48:22.063 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2020-02-19 11:48:22.064 [main] PrimaryKey - Forcing column [username] to be non-null as it is part of the primary key for table [user_roles]
[DEBUG] 2020-02-19 11:48:22.064 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [states]
[DEBUG] 2020-02-19 11:48:22.064 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.State
[DEBUG] 2020-02-19 11:48:22.065 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.UserRole
[DEBUG] 2020-02-19 11:48:22.065 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.State
[DEBUG] 2020-02-19 11:48:22.066 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.UserRole
[DEBUG] 2020-02-19 11:48:22.081 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-19 11:48:22.081 [main] Settings - SessionFactory name : null
[DEBUG] 2020-02-19 11:48:22.081 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-19 11:48:22.081 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-19 11:48:22.081 [main] Settings - Statistics: disabled
[DEBUG] 2020-02-19 11:48:22.081 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-19 11:48:22.081 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-19 11:48:22.081 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Named query checking : enabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-19 11:48:22.082 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-19 11:48:22.083 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-19 11:48:22.083 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-02-19 11:48:22.083 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-19 11:48:22.083 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-19 11:48:22.083 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-19 11:48:22.108 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-19 11:48:22.117 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-19 11:48:22.117 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/devfecta/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/193.6015.39/lib/idea_rt.jar:/home/devfecta/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/193.6015.39/plugins/junit/lib/junit5-rt.jar:/home/devfecta/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/193.6015.39/plugins/junit/lib/junit-rt.jar:/home/devfecta/IdeaProjects/adhound/target/test-classes:/home/devfecta/IdeaProjects/adhound/target/classes:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/devfecta/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/devfecta/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/devfecta/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/devfecta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/devfecta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/devfecta/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/devfecta/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/devfecta/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/devfecta/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/devfecta/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/devfecta/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/devfecta/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/devfecta/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/devfecta/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/devfecta/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/devfecta/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/devfecta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/devfecta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/devfecta/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/devfecta/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/devfecta/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/devfecta/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/devfecta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/devfecta/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/devfecta/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/devfecta/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/devfecta/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/devfecta/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/devfecta/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/devfecta/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/devfecta/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/devfecta/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/devfecta/.m2/repository/org/mybatis/mybatis/3.5.4/mybatis-3.5.4.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.adhound.persistence.UserDataTest,testDelete, jdk.debug=release, sun.cpu.endian=little, user.home=/home/devfecta, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=m3tallica, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu119.10.1, user.name=devfecta, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-40-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/adhound-test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.6, user.dir=/home/devfecta/IdeaProjects/adhound, os.arch=amd64, connection.username=devfecta, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@30f74e79, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu119.10.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/adhound-test, java.class.version=55.0}
[DEBUG] 2020-02-19 11:48:22.126 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-02-19 11:48:22.126 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-19 11:48:22.127 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-19 11:48:22.127 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@572e6fd9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@201c3cda]
[DEBUG] 2020-02-19 11:48:22.152 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.User] is safe
[DEBUG] 2020-02-19 11:48:22.152 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.User
[DEBUG] 2020-02-19 11:48:22.161 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.User] is safe
[DEBUG] 2020-02-19 11:48:22.161 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.User
[DEBUG] 2020-02-19 11:48:22.295 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.UserRole] is safe
[DEBUG] 2020-02-19 11:48:22.295 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.UserRole
[DEBUG] 2020-02-19 11:48:22.295 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.UserRole] is safe
[DEBUG] 2020-02-19 11:48:22.295 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.UserRole
[DEBUG] 2020-02-19 11:48:22.303 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.State] is safe
[DEBUG] 2020-02-19 11:48:22.303 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.State
[DEBUG] 2020-02-19 11:48:22.303 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.State] is safe
[DEBUG] 2020-02-19 11:48:22.303 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.State
[DEBUG] 2020-02-19 11:48:22.311 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.User
[DEBUG] 2020-02-19 11:48:22.311 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2020-02-19 11:48:22.311 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.address as address2_2_, user_.city as city3_2_, user_.email as email4_2_, user_.fax as fax5_2_, user_.first_name as first_na6_2_, user_.last_name as last_nam7_2_, user_.password as password8_2_, user_.phone as phone9_2_, user_.state_id as state_i10_2_, user_.username as usernam11_2_, user_.zipcode as zipcode12_2_ from users user_ where user_.id=?
[DEBUG] 2020-02-19 11:48:22.311 [main] AbstractEntityPersister -  Insert 0: insert into users (address, city, email, fax, first_name, last_name, password, phone, state_id, username, zipcode, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-19 11:48:22.312 [main] AbstractEntityPersister -  Update 0: update users set address=?, city=?, email=?, fax=?, first_name=?, last_name=?, password=?, phone=?, state_id=?, username=?, zipcode=? where id=?
[DEBUG] 2020-02-19 11:48:22.312 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2020-02-19 11:48:22.312 [main] AbstractEntityPersister -  Identity insert: insert into users (address, city, email, fax, first_name, last_name, password, phone, state_id, username, zipcode) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-19 11:48:22.322 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aa2877c]
[DEBUG] 2020-02-19 11:48:22.323 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-02-19 11:48:22.323 [main] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-02-19 11:48:22.323 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-19 11:48:22.323 [main] MetamodelGraphWalker - Visiting attribute path : fax
[DEBUG] 2020-02-19 11:48:22.323 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-19 11:48:22.323 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-19 11:48:22.323 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-19 11:48:22.323 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-02-19 11:48:22.323 [main] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-02-19 11:48:22.325 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db432c2]
[DEBUG] 2020-02-19 11:48:22.325 [main] MetamodelGraphWalker - Visiting attribute path : state.abbreviation
[DEBUG] 2020-02-19 11:48:22.325 [main] MetamodelGraphWalker - Visiting attribute path : state.name
[DEBUG] 2020-02-19 11:48:22.325 [main] MetamodelGraphWalker - Visiting attribute path : stateId
[DEBUG] 2020-02-19 11:48:22.325 [main] MetamodelGraphWalker - Visiting attribute path : userRole
[DEBUG] 2020-02-19 11:48:22.326 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fd7a37]
[DEBUG] 2020-02-19 11:48:22.326 [main] MetamodelGraphWalker - Visiting attribute path : userRole.id
[DEBUG] 2020-02-19 11:48:22.326 [main] MetamodelGraphWalker - Visiting attribute path : userRole.roleName
[DEBUG] 2020-02-19 11:48:22.326 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-19 11:48:22.326 [main] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-02-19 11:48:22.326 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-19 11:48:22.331 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-19 11:48:22.334 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.User, querySpaceUid=<gen:0>, path=com.adhound.entity.User)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:1>, path=com.adhound.entity.User.state)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:2>, path=com.adhound.entity.User.userRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(state)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.adhound.entity.State)
                - SQL table alias mapping - state1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(userRole)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.adhound.entity.UserRole)
                - SQL table alias mapping - userrole2_
                - alias suffix - 2_
                - suffixed key columns - {username1_1_2_}

[DEBUG] 2020-02-19 11:48:22.335 [main] EntityLoader - Static select for entity com.adhound.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.email as email4_2_0_, user0_.fax as fax5_2_0_, user0_.first_name as first_na6_2_0_, user0_.last_name as last_nam7_2_0_, user0_.password as password8_2_0_, user0_.phone as phone9_2_0_, user0_.state_id as state_i10_2_0_, user0_.username as usernam11_2_0_, user0_.zipcode as zipcode12_2_0_, state1_.id as id1_0_1_, state1_.states_Abbreviation as states_A2_0_1_, state1_.states_Name as states_N3_0_1_, userrole2_.username as username1_1_2_, userrole2_.id as id2_1_2_, userrole2_.role_name as role_nam3_1_2_ from users user0_ inner join states state1_ on user0_.state_id=state1_.id inner join user_roles userrole2_ on user0_.username=userrole2_.username where user0_.id=?
[DEBUG] 2020-02-19 11:48:22.335 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c6a4ffd]
[DEBUG] 2020-02-19 11:48:22.335 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-02-19 11:48:22.335 [main] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-02-19 11:48:22.335 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-19 11:48:22.335 [main] MetamodelGraphWalker - Visiting attribute path : fax
[DEBUG] 2020-02-19 11:48:22.335 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-19 11:48:22.335 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-19 11:48:22.335 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-19 11:48:22.335 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-02-19 11:48:22.335 [main] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-02-19 11:48:22.335 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f1a9a53]
[DEBUG] 2020-02-19 11:48:22.335 [main] MetamodelGraphWalker - Visiting attribute path : state.abbreviation
[DEBUG] 2020-02-19 11:48:22.336 [main] MetamodelGraphWalker - Visiting attribute path : state.name
[DEBUG] 2020-02-19 11:48:22.336 [main] MetamodelGraphWalker - Visiting attribute path : stateId
[DEBUG] 2020-02-19 11:48:22.336 [main] MetamodelGraphWalker - Visiting attribute path : userRole
[DEBUG] 2020-02-19 11:48:22.336 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2287395]
[DEBUG] 2020-02-19 11:48:22.336 [main] MetamodelGraphWalker - Visiting attribute path : userRole.id
[DEBUG] 2020-02-19 11:48:22.336 [main] MetamodelGraphWalker - Visiting attribute path : userRole.roleName
[DEBUG] 2020-02-19 11:48:22.336 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-19 11:48:22.336 [main] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-02-19 11:48:22.336 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-19 11:48:22.336 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-19 11:48:22.336 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.User, querySpaceUid=<gen:0>, path=com.adhound.entity.User)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:1>, path=com.adhound.entity.User.state)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:2>, path=com.adhound.entity.User.userRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(state)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.adhound.entity.State)
                - SQL table alias mapping - state1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(userRole)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.adhound.entity.UserRole)
                - SQL table alias mapping - userrole2_
                - alias suffix - 2_
                - suffixed key columns - {username1_1_2_}

[DEBUG] 2020-02-19 11:48:22.336 [main] EntityLoader - Static select for entity com.adhound.entity.User [READ]: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.email as email4_2_0_, user0_.fax as fax5_2_0_, user0_.first_name as first_na6_2_0_, user0_.last_name as last_nam7_2_0_, user0_.password as password8_2_0_, user0_.phone as phone9_2_0_, user0_.state_id as state_i10_2_0_, user0_.username as usernam11_2_0_, user0_.zipcode as zipcode12_2_0_, state1_.id as id1_0_1_, state1_.states_Abbreviation as states_A2_0_1_, state1_.states_Name as states_N3_0_1_, userrole2_.username as username1_1_2_, userrole2_.id as id2_1_2_, userrole2_.role_name as role_nam3_1_2_ from users user0_ inner join states state1_ on user0_.state_id=state1_.id inner join user_roles userrole2_ on user0_.username=userrole2_.username where user0_.id=?
[DEBUG] 2020-02-19 11:48:22.342 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.User: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.email as email4_2_0_, user0_.fax as fax5_2_0_, user0_.first_name as first_na6_2_0_, user0_.last_name as last_nam7_2_0_, user0_.password as password8_2_0_, user0_.phone as phone9_2_0_, user0_.state_id as state_i10_2_0_, user0_.username as usernam11_2_0_, user0_.zipcode as zipcode12_2_0_ from users user0_ where user0_.id=?
[DEBUG] 2020-02-19 11:48:22.343 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.User: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.email as email4_2_0_, user0_.fax as fax5_2_0_, user0_.first_name as first_na6_2_0_, user0_.last_name as last_nam7_2_0_, user0_.password as password8_2_0_, user0_.phone as phone9_2_0_, user0_.state_id as state_i10_2_0_, user0_.username as usernam11_2_0_, user0_.zipcode as zipcode12_2_0_ from users user0_ where user0_.id=?
[DEBUG] 2020-02-19 11:48:22.343 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.UserRole
[DEBUG] 2020-02-19 11:48:22.343 [main] AbstractEntityPersister -  Version select: select username from user_roles where username =?
[DEBUG] 2020-02-19 11:48:22.343 [main] AbstractEntityPersister -  Snapshot select: select userrole_.username, userrole_.id as id2_1_, userrole_.role_name as role_nam3_1_ from user_roles userrole_ where userrole_.username=?
[DEBUG] 2020-02-19 11:48:22.343 [main] AbstractEntityPersister -  Insert 0: insert into user_roles (id, role_name, username) values (?, ?, ?)
[DEBUG] 2020-02-19 11:48:22.343 [main] AbstractEntityPersister -  Update 0: update user_roles set id=?, role_name=? where username=?
[DEBUG] 2020-02-19 11:48:22.343 [main] AbstractEntityPersister -  Delete 0: delete from user_roles where username=?
[DEBUG] 2020-02-19 11:48:22.343 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17207f5b]
[DEBUG] 2020-02-19 11:48:22.343 [main] MetamodelGraphWalker - Visiting attribute path : id
[DEBUG] 2020-02-19 11:48:22.343 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-02-19 11:48:22.343 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-19 11:48:22.343 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-19 11:48:22.343 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:0>, path=com.adhound.entity.UserRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

[DEBUG] 2020-02-19 11:48:22.343 [main] EntityLoader - Static select for entity com.adhound.entity.UserRole [NONE]: select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-19 11:48:22.343 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67e0ff3a]
[DEBUG] 2020-02-19 11:48:22.344 [main] MetamodelGraphWalker - Visiting attribute path : id
[DEBUG] 2020-02-19 11:48:22.344 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-02-19 11:48:22.344 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-19 11:48:22.344 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-19 11:48:22.344 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:0>, path=com.adhound.entity.UserRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

[DEBUG] 2020-02-19 11:48:22.344 [main] EntityLoader - Static select for entity com.adhound.entity.UserRole [READ]: select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-19 11:48:22.344 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.UserRole: select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-19 11:48:22.344 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.UserRole: select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-19 11:48:22.344 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.State
[DEBUG] 2020-02-19 11:48:22.344 [main] AbstractEntityPersister -  Version select: select id from states where id =?
[DEBUG] 2020-02-19 11:48:22.344 [main] AbstractEntityPersister -  Snapshot select: select state_.id, state_.states_Abbreviation as states_A2_0_, state_.states_Name as states_N3_0_ from states state_ where state_.id=?
[DEBUG] 2020-02-19 11:48:22.344 [main] AbstractEntityPersister -  Insert 0: insert into states (states_Abbreviation, states_Name, id) values (?, ?, ?)
[DEBUG] 2020-02-19 11:48:22.344 [main] AbstractEntityPersister -  Update 0: update states set states_Abbreviation=?, states_Name=? where id=?
[DEBUG] 2020-02-19 11:48:22.344 [main] AbstractEntityPersister -  Delete 0: delete from states where id=?
[DEBUG] 2020-02-19 11:48:22.344 [main] AbstractEntityPersister -  Identity insert: insert into states (states_Abbreviation, states_Name) values (?, ?)
[DEBUG] 2020-02-19 11:48:22.344 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fe595dc]
[DEBUG] 2020-02-19 11:48:22.344 [main] MetamodelGraphWalker - Visiting attribute path : abbreviation
[DEBUG] 2020-02-19 11:48:22.345 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-19 11:48:22.345 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-19 11:48:22.345 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-19 11:48:22.345 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.State)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:0>, path=com.adhound.entity.State)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-02-19 11:48:22.345 [main] EntityLoader - Static select for entity com.adhound.entity.State [NONE]: select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-19 11:48:22.345 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a8cea24]
[DEBUG] 2020-02-19 11:48:22.345 [main] MetamodelGraphWalker - Visiting attribute path : abbreviation
[DEBUG] 2020-02-19 11:48:22.345 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-19 11:48:22.345 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-19 11:48:22.345 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-19 11:48:22.345 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.State)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:0>, path=com.adhound.entity.State)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-02-19 11:48:22.345 [main] EntityLoader - Static select for entity com.adhound.entity.State [READ]: select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-19 11:48:22.345 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.State: select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-19 11:48:22.345 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.State: select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-19 11:48:22.359 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-19 11:48:22.359 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-19 11:48:22.359 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-19 11:48:22.361 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-19 11:48:22.361 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-19 11:48:22.362 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-19 11:48:22.362 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-19 11:48:22.363 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@432af457
[DEBUG] 2020-02-19 11:48:22.363 [main] SessionFactoryRegistry - Registering SessionFactory: 13879fea-bcc5-4f0c-8aef-a46a2431979d (<unnamed>)
[DEBUG] 2020-02-19 11:48:22.363 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-19 11:48:22.399 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-19 11:48:22.411 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-19 11:48:22.419 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@33e0c716
[DEBUG] 2020-02-19 11:48:22.430 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.adhound.entity.User as generatedAlias0
[DEBUG] 2020-02-19 11:48:22.432 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-19 11:48:22.435 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'adhound'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-19 11:48:22.444 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-19 11:48:22.449 [main] FromElement - FromClause{level=1} : com.adhound.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-19 11:48:22.450 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-02-19 11:48:22.450 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-19 11:48:22.450 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} users user0_ ) )
[DEBUG] 2020-02-19 11:48:22.454 [main] JoinProcessor - Using FROM fragment [users user0_]
[DEBUG] 2020-02-19 11:48:22.454 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-19 11:48:22.454 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=com.adhound.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address as address2_2_, user0_.city as city3_2_, user0_.email as email4_2_, user0_.fax as fax5_2_, user0_.first_name as first_na6_2_, user0_.last_name as last_nam7_2_, user0_.password as password8_2_, user0_.phone as phone9_2_, user0_.state_id as state_i10_2_, user0_.username as usernam11_2_, user0_.zipcode as zipcode12_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.adhound.entity.User}}

[DEBUG] 2020-02-19 11:48:22.454 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-19 11:48:22.457 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.adhound.entity.User as generatedAlias0
[DEBUG] 2020-02-19 11:48:22.457 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.email as email4_2_, user0_.fax as fax5_2_, user0_.first_name as first_na6_2_, user0_.last_name as last_nam7_2_, user0_.password as password8_2_, user0_.phone as phone9_2_, user0_.state_id as state_i10_2_, user0_.username as usernam11_2_, user0_.zipcode as zipcode12_2_ from users user0_
[DEBUG] 2020-02-19 11:48:22.457 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-19 11:48:22.464 [main] SQL - select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.email as email4_2_, user0_.fax as fax5_2_, user0_.first_name as first_na6_2_, user0_.last_name as last_nam7_2_, user0_.password as password8_2_, user0_.phone as phone9_2_, user0_.state_id as state_i10_2_, user0_.username as usernam11_2_, user0_.zipcode as zipcode12_2_ from users user0_
[DEBUG] 2020-02-19 11:48:22.475 [main] Loader - Result set row: 0
[DEBUG] 2020-02-19 11:48:22.477 [main] Loader - Result row: EntityKey[com.adhound.entity.User#1]
[DEBUG] 2020-02-19 11:48:22.480 [main] Loader - Result set row: 1
[DEBUG] 2020-02-19 11:48:22.480 [main] Loader - Result row: EntityKey[com.adhound.entity.User#2]
[DEBUG] 2020-02-19 11:48:22.480 [main] Loader - Result set row: 2
[DEBUG] 2020-02-19 11:48:22.480 [main] Loader - Result row: EntityKey[com.adhound.entity.User#3]
[DEBUG] 2020-02-19 11:48:22.480 [main] Loader - Result set row: 3
[DEBUG] 2020-02-19 11:48:22.480 [main] Loader - Result row: EntityKey[com.adhound.entity.User#9]
[DEBUG] 2020-02-19 11:48:22.480 [main] Loader - Result set row: 4
[DEBUG] 2020-02-19 11:48:22.481 [main] Loader - Result row: EntityKey[com.adhound.entity.User#10]
[DEBUG] 2020-02-19 11:48:22.481 [main] Loader - Result set row: 5
[DEBUG] 2020-02-19 11:48:22.481 [main] Loader - Result row: EntityKey[com.adhound.entity.User#11]
[DEBUG] 2020-02-19 11:48:22.481 [main] Loader - Result set row: 6
[DEBUG] 2020-02-19 11:48:22.481 [main] Loader - Result row: EntityKey[com.adhound.entity.User#12]
[DEBUG] 2020-02-19 11:48:22.481 [main] Loader - Result set row: 7
[DEBUG] 2020-02-19 11:48:22.481 [main] Loader - Result row: EntityKey[com.adhound.entity.User#13]
[DEBUG] 2020-02-19 11:48:22.481 [main] Loader - Result set row: 8
[DEBUG] 2020-02-19 11:48:22.481 [main] Loader - Result row: EntityKey[com.adhound.entity.User#14]
[DEBUG] 2020-02-19 11:48:22.481 [main] Loader - Result set row: 9
[DEBUG] 2020-02-19 11:48:22.481 [main] Loader - Result row: EntityKey[com.adhound.entity.User#15]
[DEBUG] 2020-02-19 11:48:22.482 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#1]
[DEBUG] 2020-02-19 11:48:22.482 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Road
[DEBUG] 2020-02-19 11:48:22.482 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Processing attribute `city` : value = Fitchburg
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Processing attribute `email` : value = kkelm@outlook.com
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kevin
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelm
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Processing attribute `state` : value = 49
[DEBUG] 2020-02-19 11:48:22.483 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.485 [main] SQL - select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-19 11:48:22.488 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-19 11:48:22.488 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-19 11:48:22.488 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#49]
[DEBUG] 2020-02-19 11:48:22.488 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = WI
[DEBUG] 2020-02-19 11:48:22.488 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.489 [main] TwoPhaseLoad - Processing attribute `name` : value = Wisconsin
[DEBUG] 2020-02-19 11:48:22.489 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.489 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#49]
[DEBUG] 2020-02-19 11:48:22.489 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-19 11:48:22.489 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#49
[DEBUG] 2020-02-19 11:48:22.490 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 49
[DEBUG] 2020-02-19 11:48:22.490 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.490 [main] TwoPhaseLoad - Processing attribute `userRole` : value = kkelm
[DEBUG] 2020-02-19 11:48:22.490 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.490 [main] SQL - select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-19 11:48:22.491 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-19 11:48:22.491 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-19 11:48:22.491 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-02-19 11:48:22.491 [main] TwoPhaseLoad - Processing attribute `id` : value = 1
[DEBUG] 2020-02-19 11:48:22.491 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.491 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Administrator
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-02-19 11:48:22.492 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-19 11:48:22.492 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#kkelm
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Processing attribute `username` : value = kkelm
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#1]
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#2]
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Processing attribute `email` : value = test@gmail.com
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Darth
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vader
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Processing attribute `password` : value = test
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Processing attribute `state` : value = 25
[DEBUG] 2020-02-19 11:48:22.492 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.492 [main] SQL - select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-19 11:48:22.493 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-19 11:48:22.493 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-19 11:48:22.493 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#25]
[DEBUG] 2020-02-19 11:48:22.493 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = MO
[DEBUG] 2020-02-19 11:48:22.493 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.493 [main] TwoPhaseLoad - Processing attribute `name` : value = Missouri
[DEBUG] 2020-02-19 11:48:22.494 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.494 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#25]
[DEBUG] 2020-02-19 11:48:22.494 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-19 11:48:22.494 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#25
[DEBUG] 2020-02-19 11:48:22.494 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 25
[DEBUG] 2020-02-19 11:48:22.494 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.494 [main] TwoPhaseLoad - Processing attribute `userRole` : value = distributor
[DEBUG] 2020-02-19 11:48:22.494 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.494 [main] SQL - select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-19 11:48:22.494 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-19 11:48:22.494 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Processing attribute `id` : value = 2
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-02-19 11:48:22.495 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-19 11:48:22.495 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#distributor
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Processing attribute `username` : value = distributor
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#2]
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#3]
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Circle
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Processing attribute `city` : value = Markesan
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Processing attribute `email` : value = test@yahoo.com
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Luke
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Skywalker
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Processing attribute `password` : value = 123abc
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-02-19 11:48:22.495 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.496 [main] SQL - select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-19 11:48:22.496 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-19 11:48:22.496 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-19 11:48:22.496 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-02-19 11:48:22.496 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-02-19 11:48:22.496 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.496 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-02-19 11:48:22.496 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.496 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-02-19 11:48:22.497 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-19 11:48:22.497 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#33
[DEBUG] 2020-02-19 11:48:22.497 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-02-19 11:48:22.497 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.497 [main] TwoPhaseLoad - Processing attribute `userRole` : value = runner
[DEBUG] 2020-02-19 11:48:22.497 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.497 [main] SQL - select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-19 11:48:22.497 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-19 11:48:22.497 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#runner]
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Processing attribute `id` : value = 3
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Runner
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#runner]
[DEBUG] 2020-02-19 11:48:22.498 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-19 11:48:22.498 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#runner
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Processing attribute `username` : value = runner
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#3]
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#9]
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Processing attribute `city` : value = testCity
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Processing attribute `email` : value = test@email.com
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Processing attribute `fax` : value = 987-654-3210
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Processing attribute `firstName` : value = testFirstName
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Processing attribute `lastName` : value = testLastName
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Processing attribute `phone` : value = 123-456-7890
[DEBUG] 2020-02-19 11:48:22.498 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.499 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-02-19 11:48:22.499 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.499 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-02-19 11:48:22.499 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.499 [main] TwoPhaseLoad - Processing attribute `userRole` : value = testUsername94
[DEBUG] 2020-02-19 11:48:22.499 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-19 11:48:22.499 [main] SQL - select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-19 11:48:22.500 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-19 11:48:22.500 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#testUsername94
[INFO ] 2020-02-19 11:48:22.500 [main] DefaultLoadEventListener - HHH000327: Error performing load command : org.hibernate.ObjectNotFoundException: No row with the given identifier exists: [com.adhound.entity.UserRole#testUsername94]
[DEBUG] 2020-02-19 11:48:22.500 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-19 11:48:22.501 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
