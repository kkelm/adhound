[DEBUG] 2020-02-20 12:23:09.643 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-20 12:23:09.648 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-20 12:23:09.655 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-20 12:23:09.738 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-20 12:23:09.740 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-20 12:23:09.930 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-20 12:23:10.174 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-20 12:23:10.191 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-20 12:23:10.192 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-20 12:23:10.207 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-20 12:23:10.242 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2f6bcf87
[DEBUG] 2020-02-20 12:23:10.243 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2f6bcf87
[DEBUG] 2020-02-20 12:23:10.243 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f6bcf87
[DEBUG] 2020-02-20 12:23:10.243 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e6b9a95
[DEBUG] 2020-02-20 12:23:10.243 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4cee7fa0
[DEBUG] 2020-02-20 12:23:10.244 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4e2c95ee
[DEBUG] 2020-02-20 12:23:10.245 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@14faa38c
[DEBUG] 2020-02-20 12:23:10.245 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@14faa38c
[DEBUG] 2020-02-20 12:23:10.245 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@14faa38c
[DEBUG] 2020-02-20 12:23:10.245 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5baaae4c
[DEBUG] 2020-02-20 12:23:10.246 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5baaae4c
[DEBUG] 2020-02-20 12:23:10.246 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5baaae4c
[DEBUG] 2020-02-20 12:23:10.246 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@72ab05ed
[DEBUG] 2020-02-20 12:23:10.247 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@72ab05ed
[DEBUG] 2020-02-20 12:23:10.247 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@72ab05ed
[DEBUG] 2020-02-20 12:23:10.247 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6b7d1df8
[DEBUG] 2020-02-20 12:23:10.247 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6b7d1df8
[DEBUG] 2020-02-20 12:23:10.247 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b7d1df8
[DEBUG] 2020-02-20 12:23:10.248 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@23eee4b8
[DEBUG] 2020-02-20 12:23:10.248 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@23eee4b8
[DEBUG] 2020-02-20 12:23:10.248 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@23eee4b8
[DEBUG] 2020-02-20 12:23:10.248 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@23cd4ff2
[DEBUG] 2020-02-20 12:23:10.248 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@23cd4ff2
[DEBUG] 2020-02-20 12:23:10.248 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@23cd4ff2
[DEBUG] 2020-02-20 12:23:10.249 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@12477988
[DEBUG] 2020-02-20 12:23:10.249 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@12477988
[DEBUG] 2020-02-20 12:23:10.249 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12477988
[DEBUG] 2020-02-20 12:23:10.250 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@22101c80
[DEBUG] 2020-02-20 12:23:10.250 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@22101c80
[DEBUG] 2020-02-20 12:23:10.250 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@267bbe1a
[DEBUG] 2020-02-20 12:23:10.251 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@267bbe1a
[DEBUG] 2020-02-20 12:23:10.251 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@60f2e0bd
[DEBUG] 2020-02-20 12:23:10.251 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@60f2e0bd
[DEBUG] 2020-02-20 12:23:10.251 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@203dd56b
[DEBUG] 2020-02-20 12:23:10.252 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1d3e6d34
[DEBUG] 2020-02-20 12:23:10.252 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4303b7f0
[DEBUG] 2020-02-20 12:23:10.252 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4303b7f0
[DEBUG] 2020-02-20 12:23:10.252 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1450078a
[DEBUG] 2020-02-20 12:23:10.253 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1450078a
[DEBUG] 2020-02-20 12:23:10.255 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5eccd3b9
[DEBUG] 2020-02-20 12:23:10.255 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5eccd3b9
[DEBUG] 2020-02-20 12:23:10.255 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ed9ae94
[DEBUG] 2020-02-20 12:23:10.256 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ed9ae94
[DEBUG] 2020-02-20 12:23:10.256 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4b6ac111
[DEBUG] 2020-02-20 12:23:10.256 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4b6ac111
[DEBUG] 2020-02-20 12:23:10.257 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5491f68b
[DEBUG] 2020-02-20 12:23:10.257 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5491f68b
[DEBUG] 2020-02-20 12:23:10.258 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@54dcbb9f
[DEBUG] 2020-02-20 12:23:10.258 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@54dcbb9f
[DEBUG] 2020-02-20 12:23:10.261 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5f78de22
[DEBUG] 2020-02-20 12:23:10.261 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5f78de22
[DEBUG] 2020-02-20 12:23:10.262 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@bcb09a6
[DEBUG] 2020-02-20 12:23:10.262 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@bcb09a6
[DEBUG] 2020-02-20 12:23:10.262 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@378bd86d
[DEBUG] 2020-02-20 12:23:10.262 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@378bd86d
[DEBUG] 2020-02-20 12:23:10.263 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7c2327fa
[DEBUG] 2020-02-20 12:23:10.263 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7c2327fa
[DEBUG] 2020-02-20 12:23:10.264 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@726a6b94
[DEBUG] 2020-02-20 12:23:10.264 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@726a6b94
[DEBUG] 2020-02-20 12:23:10.264 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@726a6b94
[DEBUG] 2020-02-20 12:23:10.265 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ee29c84
[DEBUG] 2020-02-20 12:23:10.265 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@d02f8d
[DEBUG] 2020-02-20 12:23:10.265 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@d02f8d
[DEBUG] 2020-02-20 12:23:10.265 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@d02f8d
[DEBUG] 2020-02-20 12:23:10.266 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@45f24169
[DEBUG] 2020-02-20 12:23:10.266 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@13d186db
[DEBUG] 2020-02-20 12:23:10.266 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13d186db
[DEBUG] 2020-02-20 12:23:10.267 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7b60c3e
[DEBUG] 2020-02-20 12:23:10.267 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7b60c3e
[DEBUG] 2020-02-20 12:23:10.267 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2adddc06
[DEBUG] 2020-02-20 12:23:10.267 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2adddc06
[DEBUG] 2020-02-20 12:23:10.268 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6a714237
[DEBUG] 2020-02-20 12:23:10.268 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a714237
[DEBUG] 2020-02-20 12:23:10.268 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@35c09b94
[DEBUG] 2020-02-20 12:23:10.268 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@35c09b94
[DEBUG] 2020-02-20 12:23:10.268 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a699efa
[DEBUG] 2020-02-20 12:23:10.269 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@42f22995
[DEBUG] 2020-02-20 12:23:10.269 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@42f22995
[DEBUG] 2020-02-20 12:23:10.269 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@42f22995
[DEBUG] 2020-02-20 12:23:10.269 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29182679
[DEBUG] 2020-02-20 12:23:10.269 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29182679
[DEBUG] 2020-02-20 12:23:10.270 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29182679
[DEBUG] 2020-02-20 12:23:10.270 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@682c1e93
[DEBUG] 2020-02-20 12:23:10.270 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5b78fdb1
[DEBUG] 2020-02-20 12:23:10.271 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3e9803c2
[DEBUG] 2020-02-20 12:23:10.271 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3e9803c2
[DEBUG] 2020-02-20 12:23:10.271 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3e9803c2
[DEBUG] 2020-02-20 12:23:10.271 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7808fb9
[DEBUG] 2020-02-20 12:23:10.271 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7808fb9
[DEBUG] 2020-02-20 12:23:10.271 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7808fb9
[DEBUG] 2020-02-20 12:23:10.271 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6e6fce47
[DEBUG] 2020-02-20 12:23:10.272 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1a5b8489
[DEBUG] 2020-02-20 12:23:10.272 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@71a3a190
[DEBUG] 2020-02-20 12:23:10.272 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71a3a190
[DEBUG] 2020-02-20 12:23:10.273 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67ec8477
[DEBUG] 2020-02-20 12:23:10.273 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3f36b447
[DEBUG] 2020-02-20 12:23:10.273 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3f36b447
[DEBUG] 2020-02-20 12:23:10.274 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@264c5d07
[DEBUG] 2020-02-20 12:23:10.274 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@264c5d07
[DEBUG] 2020-02-20 12:23:10.275 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5d39f2d8
[DEBUG] 2020-02-20 12:23:10.275 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@175acfb2
[DEBUG] 2020-02-20 12:23:10.276 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4bff2185
[DEBUG] 2020-02-20 12:23:10.278 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@37a64f9d
[DEBUG] 2020-02-20 12:23:10.278 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@37a64f9d
[DEBUG] 2020-02-20 12:23:10.278 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6d2d99fc
[DEBUG] 2020-02-20 12:23:10.278 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@bdecc21
[DEBUG] 2020-02-20 12:23:10.278 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e3a39cd
[DEBUG] 2020-02-20 12:23:10.279 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@21f9277b
[DEBUG] 2020-02-20 12:23:10.279 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@201aa8c1
[DEBUG] 2020-02-20 12:23:10.279 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d58c727
[DEBUG] 2020-02-20 12:23:10.279 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@52a36910
[DEBUG] 2020-02-20 12:23:10.279 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a095ec0
[DEBUG] 2020-02-20 12:23:10.296 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-20 12:23:10.297 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-20 12:23:10.297 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-20 12:23:10.297 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-20 12:23:10.298 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-20 12:23:10.298 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-20 12:23:10.299 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-20 12:23:10.300 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-20 12:23:10.301 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-20 12:23:10.301 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-20 12:23:10.301 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-20 12:23:10.301 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-20 12:23:10.301 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-20 12:23:10.302 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-20 12:23:10.305 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/adhound-test
[INFO ] 2020-02-20 12:23:10.305 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=devfecta}
[INFO ] 2020-02-20 12:23:10.305 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-20 12:23:10.419 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-20 12:23:10.917 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19-0ubuntu0.19.10.3
      major : 8
      minor : 0
[DEBUG] 2020-02-20 12:23:10.918 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-20 12:23:10.918 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-20 12:23:10.937 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-20 12:23:10.947 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-20 12:23:10.962 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-20 12:23:10.980 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-20 12:23:10.981 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f651f93] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6ffa56fa]
[DEBUG] 2020-02-20 12:23:11.016 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.User
[DEBUG] 2020-02-20 12:23:11.030 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-20 12:23:11.034 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-02-20 12:23:11.035 [main] EntityBinder - Bind entity com.adhound.entity.User on table users
[DEBUG] 2020-02-20 12:23:11.051 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.052 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-20 12:23:11.053 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:id]
[DEBUG] 2020-02-20 12:23:11.054 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-20 12:23:11.056 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-20 12:23:11.057 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-20 12:23:11.058 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.058 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-02-20 12:23:11.058 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:address]
[DEBUG] 2020-02-20 12:23:11.058 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-02-20 12:23:11.058 [main] PropertyBinder - Building property address
[DEBUG] 2020-02-20 12:23:11.058 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.059 [main] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-02-20 12:23:11.059 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:city]
[DEBUG] 2020-02-20 12:23:11.059 [main] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-02-20 12:23:11.059 [main] PropertyBinder - Building property city
[DEBUG] 2020-02-20 12:23:11.059 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.059 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-20 12:23:11.059 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:email]
[DEBUG] 2020-02-20 12:23:11.059 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-20 12:23:11.059 [main] PropertyBinder - Building property email
[DEBUG] 2020-02-20 12:23:11.059 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=fax, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.060 [main] PropertyBinder - MetadataSourceProcessor property fax with lazy=false
[DEBUG] 2020-02-20 12:23:11.060 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:fax]
[DEBUG] 2020-02-20 12:23:11.060 [main] SimpleValueBinder - building SimpleValue for fax
[DEBUG] 2020-02-20 12:23:11.060 [main] PropertyBinder - Building property fax
[DEBUG] 2020-02-20 12:23:11.060 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.060 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-20 12:23:11.060 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:firstName]
[DEBUG] 2020-02-20 12:23:11.060 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-20 12:23:11.060 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-02-20 12:23:11.060 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.060 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-20 12:23:11.060 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:lastName]
[DEBUG] 2020-02-20 12:23:11.060 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-20 12:23:11.060 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-02-20 12:23:11.061 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-20 12:23:11.061 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=locations, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.062 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.066 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.067 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=locations_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.067 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='locations_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-20 12:23:11.068 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-20 12:23:11.068 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-20 12:23:11.068 [main] CollectionBinder - Collection role: com.adhound.entity.User.locations
[DEBUG] 2020-02-20 12:23:11.069 [main] PropertyBinder - Building property locations
[DEBUG] 2020-02-20 12:23:11.069 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.070 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-20 12:23:11.070 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:password]
[DEBUG] 2020-02-20 12:23:11.070 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-20 12:23:11.070 [main] PropertyBinder - Building property password
[DEBUG] 2020-02-20 12:23:11.070 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.070 [main] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-02-20 12:23:11.070 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:phone]
[DEBUG] 2020-02-20 12:23:11.070 [main] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-02-20 12:23:11.070 [main] PropertyBinder - Building property phone
[DEBUG] 2020-02-20 12:23:11.070 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='state_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-20 12:23:11.070 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.071 [main] PropertyBinder - Building property state
[DEBUG] 2020-02-20 12:23:11.071 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=state_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.071 [main] PropertyBinder - MetadataSourceProcessor property stateId with lazy=false
[DEBUG] 2020-02-20 12:23:11.072 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:stateId]
[DEBUG] 2020-02-20 12:23:11.072 [main] SimpleValueBinder - building SimpleValue for stateId
[DEBUG] 2020-02-20 12:23:11.072 [main] PropertyBinder - Building property stateId
[DEBUG] 2020-02-20 12:23:11.072 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-20 12:23:11.072 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRole, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.072 [main] PropertyBinder - Building property userRole
[DEBUG] 2020-02-20 12:23:11.072 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.072 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-20 12:23:11.072 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:username]
[DEBUG] 2020-02-20 12:23:11.072 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-20 12:23:11.072 [main] PropertyBinder - Building property username
[DEBUG] 2020-02-20 12:23:11.072 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=zipcode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.072 [main] PropertyBinder - MetadataSourceProcessor property zipcode with lazy=false
[DEBUG] 2020-02-20 12:23:11.072 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:zipcode]
[DEBUG] 2020-02-20 12:23:11.072 [main] SimpleValueBinder - building SimpleValue for zipcode
[DEBUG] 2020-02-20 12:23:11.072 [main] PropertyBinder - Building property zipcode
[DEBUG] 2020-02-20 12:23:11.073 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.UserRole
[DEBUG] 2020-02-20 12:23:11.073 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-20 12:23:11.073 [main] EntityBinder - Import with entity name UserRole
[DEBUG] 2020-02-20 12:23:11.073 [main] EntityBinder - Bind entity com.adhound.entity.UserRole on table user_roles
[DEBUG] 2020-02-20 12:23:11.074 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.074 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-20 12:23:11.074 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:username]
[DEBUG] 2020-02-20 12:23:11.074 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-20 12:23:11.074 [main] PropertyBinder - Building property username
[DEBUG] 2020-02-20 12:23:11.074 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(username)]), username, assigned, , ...)
[DEBUG] 2020-02-20 12:23:11.074 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.074 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-20 12:23:11.074 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:id]
[DEBUG] 2020-02-20 12:23:11.074 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-20 12:23:11.074 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-20 12:23:11.075 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.075 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-02-20 12:23:11.075 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:roleName]
[DEBUG] 2020-02-20 12:23:11.075 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-02-20 12:23:11.075 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-02-20 12:23:11.075 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.Location
[DEBUG] 2020-02-20 12:23:11.075 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-20 12:23:11.075 [main] EntityBinder - Import with entity name Location
[DEBUG] 2020-02-20 12:23:11.075 [main] EntityBinder - Bind entity com.adhound.entity.Location on table locations
[DEBUG] 2020-02-20 12:23:11.077 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.077 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-20 12:23:11.077 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:id]
[DEBUG] 2020-02-20 12:23:11.077 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-20 12:23:11.077 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-20 12:23:11.077 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-20 12:23:11.077 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.077 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-02-20 12:23:11.077 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:address]
[DEBUG] 2020-02-20 12:23:11.078 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-02-20 12:23:11.078 [main] PropertyBinder - Building property address
[DEBUG] 2020-02-20 12:23:11.078 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.078 [main] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-02-20 12:23:11.078 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:city]
[DEBUG] 2020-02-20 12:23:11.078 [main] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-02-20 12:23:11.078 [main] PropertyBinder - Building property city
[DEBUG] 2020-02-20 12:23:11.078 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=fax, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.078 [main] PropertyBinder - MetadataSourceProcessor property fax with lazy=false
[DEBUG] 2020-02-20 12:23:11.078 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:fax]
[DEBUG] 2020-02-20 12:23:11.078 [main] SimpleValueBinder - building SimpleValue for fax
[DEBUG] 2020-02-20 12:23:11.078 [main] PropertyBinder - Building property fax
[DEBUG] 2020-02-20 12:23:11.078 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.078 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-20 12:23:11.078 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:name]
[DEBUG] 2020-02-20 12:23:11.078 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-20 12:23:11.079 [main] PropertyBinder - Building property name
[DEBUG] 2020-02-20 12:23:11.079 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.079 [main] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-02-20 12:23:11.079 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:phone]
[DEBUG] 2020-02-20 12:23:11.079 [main] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-02-20 12:23:11.079 [main] PropertyBinder - Building property phone
[DEBUG] 2020-02-20 12:23:11.079 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='region_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-20 12:23:11.079 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=region, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.079 [main] PropertyBinder - Building property region
[DEBUG] 2020-02-20 12:23:11.079 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=region_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.079 [main] PropertyBinder - MetadataSourceProcessor property regionId with lazy=false
[DEBUG] 2020-02-20 12:23:11.079 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:regionId]
[DEBUG] 2020-02-20 12:23:11.079 [main] SimpleValueBinder - building SimpleValue for regionId
[DEBUG] 2020-02-20 12:23:11.079 [main] PropertyBinder - Building property regionId
[DEBUG] 2020-02-20 12:23:11.079 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='state_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-20 12:23:11.079 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.079 [main] PropertyBinder - Building property state
[DEBUG] 2020-02-20 12:23:11.080 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=state_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.080 [main] PropertyBinder - MetadataSourceProcessor property stateId with lazy=false
[DEBUG] 2020-02-20 12:23:11.080 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:stateId]
[DEBUG] 2020-02-20 12:23:11.080 [main] SimpleValueBinder - building SimpleValue for stateId
[DEBUG] 2020-02-20 12:23:11.080 [main] PropertyBinder - Building property stateId
[DEBUG] 2020-02-20 12:23:11.080 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-20 12:23:11.080 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.080 [main] PropertyBinder - Building property user
[DEBUG] 2020-02-20 12:23:11.080 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(locations), mappingColumn=zipcode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.080 [main] PropertyBinder - MetadataSourceProcessor property zipcode with lazy=false
[DEBUG] 2020-02-20 12:23:11.080 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.Location:zipcode]
[DEBUG] 2020-02-20 12:23:11.080 [main] SimpleValueBinder - building SimpleValue for zipcode
[DEBUG] 2020-02-20 12:23:11.080 [main] PropertyBinder - Building property zipcode
[DEBUG] 2020-02-20 12:23:11.080 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.State
[DEBUG] 2020-02-20 12:23:11.080 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-20 12:23:11.081 [main] EntityBinder - Import with entity name State
[DEBUG] 2020-02-20 12:23:11.081 [main] EntityBinder - Bind entity com.adhound.entity.State on table states
[DEBUG] 2020-02-20 12:23:11.081 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.081 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-20 12:23:11.081 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:id]
[DEBUG] 2020-02-20 12:23:11.081 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-20 12:23:11.081 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-20 12:23:11.081 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-20 12:23:11.081 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=states_Abbreviation, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.081 [main] PropertyBinder - MetadataSourceProcessor property abbreviation with lazy=false
[DEBUG] 2020-02-20 12:23:11.081 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:abbreviation]
[DEBUG] 2020-02-20 12:23:11.081 [main] SimpleValueBinder - building SimpleValue for abbreviation
[DEBUG] 2020-02-20 12:23:11.081 [main] PropertyBinder - Building property abbreviation
[DEBUG] 2020-02-20 12:23:11.082 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=states_Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-20 12:23:11.082 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-20 12:23:11.082 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:name]
[DEBUG] 2020-02-20 12:23:11.082 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-20 12:23:11.082 [main] PropertyBinder - Building property name
[DEBUG] 2020-02-20 12:23:11.082 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for city
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for fax
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for stateId
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for zipcode
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for city
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for fax
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for regionId
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for stateId
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for zipcode
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for abbreviation
[DEBUG] 2020-02-20 12:23:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for name
