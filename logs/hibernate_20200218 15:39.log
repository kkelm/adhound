[DEBUG] 2020-02-18 15:39:43.072 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-18 15:39:43.077 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-18 15:39:43.080 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-18 15:39:43.155 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-18 15:39:43.160 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-18 15:39:43.337 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-18 15:39:43.549 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-18 15:39:43.563 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-18 15:39:43.564 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-18 15:39:43.577 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-18 15:39:43.601 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2f6bcf87
[DEBUG] 2020-02-18 15:39:43.602 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2f6bcf87
[DEBUG] 2020-02-18 15:39:43.602 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f6bcf87
[DEBUG] 2020-02-18 15:39:43.602 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e6b9a95
[DEBUG] 2020-02-18 15:39:43.603 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4cee7fa0
[DEBUG] 2020-02-18 15:39:43.603 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4e2c95ee
[DEBUG] 2020-02-18 15:39:43.604 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@14faa38c
[DEBUG] 2020-02-18 15:39:43.604 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@14faa38c
[DEBUG] 2020-02-18 15:39:43.604 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@14faa38c
[DEBUG] 2020-02-18 15:39:43.604 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5baaae4c
[DEBUG] 2020-02-18 15:39:43.604 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5baaae4c
[DEBUG] 2020-02-18 15:39:43.605 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5baaae4c
[DEBUG] 2020-02-18 15:39:43.605 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@72ab05ed
[DEBUG] 2020-02-18 15:39:43.605 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@72ab05ed
[DEBUG] 2020-02-18 15:39:43.606 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@72ab05ed
[DEBUG] 2020-02-18 15:39:43.606 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6b7d1df8
[DEBUG] 2020-02-18 15:39:43.606 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6b7d1df8
[DEBUG] 2020-02-18 15:39:43.606 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b7d1df8
[DEBUG] 2020-02-18 15:39:43.607 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@23eee4b8
[DEBUG] 2020-02-18 15:39:43.607 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@23eee4b8
[DEBUG] 2020-02-18 15:39:43.607 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@23eee4b8
[DEBUG] 2020-02-18 15:39:43.608 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@23cd4ff2
[DEBUG] 2020-02-18 15:39:43.608 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@23cd4ff2
[DEBUG] 2020-02-18 15:39:43.608 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@23cd4ff2
[DEBUG] 2020-02-18 15:39:43.609 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@12477988
[DEBUG] 2020-02-18 15:39:43.609 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@12477988
[DEBUG] 2020-02-18 15:39:43.609 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12477988
[DEBUG] 2020-02-18 15:39:43.609 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@22101c80
[DEBUG] 2020-02-18 15:39:43.609 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@22101c80
[DEBUG] 2020-02-18 15:39:43.610 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@267bbe1a
[DEBUG] 2020-02-18 15:39:43.610 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@267bbe1a
[DEBUG] 2020-02-18 15:39:43.611 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@60f2e0bd
[DEBUG] 2020-02-18 15:39:43.611 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@60f2e0bd
[DEBUG] 2020-02-18 15:39:43.611 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@203dd56b
[DEBUG] 2020-02-18 15:39:43.611 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1d3e6d34
[DEBUG] 2020-02-18 15:39:43.612 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4303b7f0
[DEBUG] 2020-02-18 15:39:43.612 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4303b7f0
[DEBUG] 2020-02-18 15:39:43.613 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1450078a
[DEBUG] 2020-02-18 15:39:43.613 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1450078a
[DEBUG] 2020-02-18 15:39:43.616 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5eccd3b9
[DEBUG] 2020-02-18 15:39:43.616 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5eccd3b9
[DEBUG] 2020-02-18 15:39:43.617 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ed9ae94
[DEBUG] 2020-02-18 15:39:43.617 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ed9ae94
[DEBUG] 2020-02-18 15:39:43.618 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4b6ac111
[DEBUG] 2020-02-18 15:39:43.618 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4b6ac111
[DEBUG] 2020-02-18 15:39:43.619 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5491f68b
[DEBUG] 2020-02-18 15:39:43.619 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5491f68b
[DEBUG] 2020-02-18 15:39:43.620 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@54dcbb9f
[DEBUG] 2020-02-18 15:39:43.620 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@54dcbb9f
[DEBUG] 2020-02-18 15:39:43.620 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5f78de22
[DEBUG] 2020-02-18 15:39:43.621 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5f78de22
[DEBUG] 2020-02-18 15:39:43.621 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@bcb09a6
[DEBUG] 2020-02-18 15:39:43.621 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@bcb09a6
[DEBUG] 2020-02-18 15:39:43.622 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@378bd86d
[DEBUG] 2020-02-18 15:39:43.623 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@378bd86d
[DEBUG] 2020-02-18 15:39:43.623 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7c2327fa
[DEBUG] 2020-02-18 15:39:43.623 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7c2327fa
[DEBUG] 2020-02-18 15:39:43.624 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@726a6b94
[DEBUG] 2020-02-18 15:39:43.624 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@726a6b94
[DEBUG] 2020-02-18 15:39:43.624 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@726a6b94
[DEBUG] 2020-02-18 15:39:43.626 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ee29c84
[DEBUG] 2020-02-18 15:39:43.626 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@d02f8d
[DEBUG] 2020-02-18 15:39:43.626 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@d02f8d
[DEBUG] 2020-02-18 15:39:43.626 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@d02f8d
[DEBUG] 2020-02-18 15:39:43.627 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@45f24169
[DEBUG] 2020-02-18 15:39:43.627 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@13d186db
[DEBUG] 2020-02-18 15:39:43.627 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13d186db
[DEBUG] 2020-02-18 15:39:43.628 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7b60c3e
[DEBUG] 2020-02-18 15:39:43.628 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7b60c3e
[DEBUG] 2020-02-18 15:39:43.629 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2adddc06
[DEBUG] 2020-02-18 15:39:43.629 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2adddc06
[DEBUG] 2020-02-18 15:39:43.629 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6a714237
[DEBUG] 2020-02-18 15:39:43.629 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a714237
[DEBUG] 2020-02-18 15:39:43.630 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@35c09b94
[DEBUG] 2020-02-18 15:39:43.630 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@35c09b94
[DEBUG] 2020-02-18 15:39:43.630 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a699efa
[DEBUG] 2020-02-18 15:39:43.631 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@42f22995
[DEBUG] 2020-02-18 15:39:43.631 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@42f22995
[DEBUG] 2020-02-18 15:39:43.631 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@42f22995
[DEBUG] 2020-02-18 15:39:43.632 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29182679
[DEBUG] 2020-02-18 15:39:43.632 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29182679
[DEBUG] 2020-02-18 15:39:43.632 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29182679
[DEBUG] 2020-02-18 15:39:43.633 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@682c1e93
[DEBUG] 2020-02-18 15:39:43.633 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5b78fdb1
[DEBUG] 2020-02-18 15:39:43.634 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3e9803c2
[DEBUG] 2020-02-18 15:39:43.634 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3e9803c2
[DEBUG] 2020-02-18 15:39:43.634 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3e9803c2
[DEBUG] 2020-02-18 15:39:43.634 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7808fb9
[DEBUG] 2020-02-18 15:39:43.635 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7808fb9
[DEBUG] 2020-02-18 15:39:43.635 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7808fb9
[DEBUG] 2020-02-18 15:39:43.635 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6e6fce47
[DEBUG] 2020-02-18 15:39:43.635 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1a5b8489
[DEBUG] 2020-02-18 15:39:43.636 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@71a3a190
[DEBUG] 2020-02-18 15:39:43.636 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71a3a190
[DEBUG] 2020-02-18 15:39:43.637 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67ec8477
[DEBUG] 2020-02-18 15:39:43.637 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3f36b447
[DEBUG] 2020-02-18 15:39:43.637 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3f36b447
[DEBUG] 2020-02-18 15:39:43.638 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@264c5d07
[DEBUG] 2020-02-18 15:39:43.638 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@264c5d07
[DEBUG] 2020-02-18 15:39:43.639 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5d39f2d8
[DEBUG] 2020-02-18 15:39:43.639 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@175acfb2
[DEBUG] 2020-02-18 15:39:43.640 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4bff2185
[DEBUG] 2020-02-18 15:39:43.642 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@37a64f9d
[DEBUG] 2020-02-18 15:39:43.642 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@37a64f9d
[DEBUG] 2020-02-18 15:39:43.643 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6d2d99fc
[DEBUG] 2020-02-18 15:39:43.643 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@bdecc21
[DEBUG] 2020-02-18 15:39:43.643 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e3a39cd
[DEBUG] 2020-02-18 15:39:43.643 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@21f9277b
[DEBUG] 2020-02-18 15:39:43.643 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@201aa8c1
[DEBUG] 2020-02-18 15:39:43.643 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d58c727
[DEBUG] 2020-02-18 15:39:43.643 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@52a36910
[DEBUG] 2020-02-18 15:39:43.643 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a095ec0
[DEBUG] 2020-02-18 15:39:43.660 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-18 15:39:43.660 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-18 15:39:43.661 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-18 15:39:43.661 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-18 15:39:43.661 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-18 15:39:43.662 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-18 15:39:43.662 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-18 15:39:43.663 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-18 15:39:43.663 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-18 15:39:43.664 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-18 15:39:43.664 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-18 15:39:43.664 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-18 15:39:43.664 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-18 15:39:43.665 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-18 15:39:43.674 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/adhound-test
[INFO ] 2020-02-18 15:39:43.674 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=devfecta}
[INFO ] 2020-02-18 15:39:43.675 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-18 15:39:43.769 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-18 15:39:44.226 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19-0ubuntu0.19.10.3
      major : 8
      minor : 0
[DEBUG] 2020-02-18 15:39:44.227 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-18 15:39:44.227 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-18 15:39:44.256 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-18 15:39:44.271 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-18 15:39:44.290 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-18 15:39:44.317 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-18 15:39:44.319 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f651f93] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6ffa56fa]
[DEBUG] 2020-02-18 15:39:44.354 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.User
[DEBUG] 2020-02-18 15:39:44.369 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-18 15:39:44.373 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-02-18 15:39:44.375 [main] EntityBinder - Bind entity com.adhound.entity.User on table users
[DEBUG] 2020-02-18 15:39:44.395 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.397 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-18 15:39:44.399 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:id]
[DEBUG] 2020-02-18 15:39:44.400 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-18 15:39:44.402 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-18 15:39:44.405 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-18 15:39:44.406 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.406 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-02-18 15:39:44.406 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:address]
[DEBUG] 2020-02-18 15:39:44.406 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-02-18 15:39:44.406 [main] PropertyBinder - Building property address
[DEBUG] 2020-02-18 15:39:44.406 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.407 [main] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-02-18 15:39:44.407 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:city]
[DEBUG] 2020-02-18 15:39:44.407 [main] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-02-18 15:39:44.407 [main] PropertyBinder - Building property city
[DEBUG] 2020-02-18 15:39:44.407 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.407 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-18 15:39:44.407 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:email]
[DEBUG] 2020-02-18 15:39:44.407 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-18 15:39:44.408 [main] PropertyBinder - Building property email
[DEBUG] 2020-02-18 15:39:44.408 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=fax, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.408 [main] PropertyBinder - MetadataSourceProcessor property fax with lazy=false
[DEBUG] 2020-02-18 15:39:44.408 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:fax]
[DEBUG] 2020-02-18 15:39:44.408 [main] SimpleValueBinder - building SimpleValue for fax
[DEBUG] 2020-02-18 15:39:44.408 [main] PropertyBinder - Building property fax
[DEBUG] 2020-02-18 15:39:44.408 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.408 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-18 15:39:44.408 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:firstName]
[DEBUG] 2020-02-18 15:39:44.408 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-18 15:39:44.409 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-02-18 15:39:44.409 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.409 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-18 15:39:44.409 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:lastName]
[DEBUG] 2020-02-18 15:39:44.409 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-18 15:39:44.409 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-02-18 15:39:44.409 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.409 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-18 15:39:44.409 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:password]
[DEBUG] 2020-02-18 15:39:44.409 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-18 15:39:44.409 [main] PropertyBinder - Building property password
[DEBUG] 2020-02-18 15:39:44.410 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.410 [main] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-02-18 15:39:44.410 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:phone]
[DEBUG] 2020-02-18 15:39:44.410 [main] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-02-18 15:39:44.410 [main] PropertyBinder - Building property phone
[DEBUG] 2020-02-18 15:39:44.411 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='state_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-18 15:39:44.411 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.413 [main] PropertyBinder - Building property state
[DEBUG] 2020-02-18 15:39:44.413 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=state_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.413 [main] PropertyBinder - MetadataSourceProcessor property stateId with lazy=false
[DEBUG] 2020-02-18 15:39:44.413 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:stateId]
[DEBUG] 2020-02-18 15:39:44.413 [main] SimpleValueBinder - building SimpleValue for stateId
[DEBUG] 2020-02-18 15:39:44.413 [main] PropertyBinder - Building property stateId
[DEBUG] 2020-02-18 15:39:44.414 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-18 15:39:44.414 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userRole, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.414 [main] PropertyBinder - Building property userRole
[DEBUG] 2020-02-18 15:39:44.414 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.414 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-18 15:39:44.414 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:username]
[DEBUG] 2020-02-18 15:39:44.414 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-18 15:39:44.414 [main] PropertyBinder - Building property username
[DEBUG] 2020-02-18 15:39:44.414 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=zipcode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.414 [main] PropertyBinder - MetadataSourceProcessor property zipcode with lazy=false
[DEBUG] 2020-02-18 15:39:44.414 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.User:zipcode]
[DEBUG] 2020-02-18 15:39:44.415 [main] SimpleValueBinder - building SimpleValue for zipcode
[DEBUG] 2020-02-18 15:39:44.415 [main] PropertyBinder - Building property zipcode
[DEBUG] 2020-02-18 15:39:44.416 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.UserRole
[DEBUG] 2020-02-18 15:39:44.416 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-18 15:39:44.416 [main] EntityBinder - Import with entity name UserRole
[DEBUG] 2020-02-18 15:39:44.416 [main] EntityBinder - Bind entity com.adhound.entity.UserRole on table user_roles
[DEBUG] 2020-02-18 15:39:44.417 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.417 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-18 15:39:44.417 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:username]
[DEBUG] 2020-02-18 15:39:44.417 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-18 15:39:44.417 [main] PropertyBinder - Building property username
[DEBUG] 2020-02-18 15:39:44.417 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(username)]), username, assigned, , ...)
[DEBUG] 2020-02-18 15:39:44.417 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.417 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-18 15:39:44.417 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:id]
[DEBUG] 2020-02-18 15:39:44.418 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-18 15:39:44.418 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-18 15:39:44.418 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.418 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-02-18 15:39:44.418 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.UserRole:roleName]
[DEBUG] 2020-02-18 15:39:44.418 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-02-18 15:39:44.418 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-02-18 15:39:44.418 [main] AnnotationBinder - Binding entity from annotated class: com.adhound.entity.State
[DEBUG] 2020-02-18 15:39:44.418 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-18 15:39:44.419 [main] EntityBinder - Import with entity name State
[DEBUG] 2020-02-18 15:39:44.419 [main] EntityBinder - Bind entity com.adhound.entity.State on table states
[DEBUG] 2020-02-18 15:39:44.419 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.419 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-18 15:39:44.419 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:id]
[DEBUG] 2020-02-18 15:39:44.419 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-18 15:39:44.419 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-18 15:39:44.420 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-18 15:39:44.420 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=states_Abbreviation, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.420 [main] PropertyBinder - MetadataSourceProcessor property abbreviation with lazy=false
[DEBUG] 2020-02-18 15:39:44.420 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:abbreviation]
[DEBUG] 2020-02-18 15:39:44.420 [main] SimpleValueBinder - building SimpleValue for abbreviation
[DEBUG] 2020-02-18 15:39:44.420 [main] PropertyBinder - Building property abbreviation
[DEBUG] 2020-02-18 15:39:44.420 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(states), mappingColumn=states_Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 15:39:44.420 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-18 15:39:44.420 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.adhound.entity.State:name]
[DEBUG] 2020-02-18 15:39:44.420 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-18 15:39:44.420 [main] PropertyBinder - Building property name
[DEBUG] 2020-02-18 15:39:44.421 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-18 15:39:44.421 [main] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-02-18 15:39:44.421 [main] SimpleValueBinder - Starting fillSimpleValue for city
[DEBUG] 2020-02-18 15:39:44.421 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-18 15:39:44.422 [main] SimpleValueBinder - Starting fillSimpleValue for fax
[DEBUG] 2020-02-18 15:39:44.422 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-18 15:39:44.422 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-18 15:39:44.422 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-18 15:39:44.422 [main] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-02-18 15:39:44.422 [main] SimpleValueBinder - Starting fillSimpleValue for stateId
[DEBUG] 2020-02-18 15:39:44.422 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-18 15:39:44.422 [main] SimpleValueBinder - Starting fillSimpleValue for zipcode
[DEBUG] 2020-02-18 15:39:44.422 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-18 15:39:44.422 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-18 15:39:44.422 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-02-18 15:39:44.422 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-18 15:39:44.422 [main] SimpleValueBinder - Starting fillSimpleValue for abbreviation
[DEBUG] 2020-02-18 15:39:44.422 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-18 15:39:44.425 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2020-02-18 15:39:44.425 [main] PrimaryKey - Forcing column [username] to be non-null as it is part of the primary key for table [user_roles]
[DEBUG] 2020-02-18 15:39:44.425 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [states]
[DEBUG] 2020-02-18 15:39:44.425 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.State
[DEBUG] 2020-02-18 15:39:44.426 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.UserRole
[DEBUG] 2020-02-18 15:39:44.427 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.State
[DEBUG] 2020-02-18 15:39:44.428 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.adhound.entity.UserRole
[DEBUG] 2020-02-18 15:39:44.449 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - SessionFactory name : null
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - Statistics: disabled
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-18 15:39:44.450 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - Named query checking : enabled
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-18 15:39:44.451 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-18 15:39:44.452 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-18 15:39:44.486 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-18 15:39:44.498 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-18 15:39:44.498 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/devfecta/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/193.6015.39/lib/idea_rt.jar:/home/devfecta/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/193.6015.39/plugins/junit/lib/junit5-rt.jar:/home/devfecta/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/193.6015.39/plugins/junit/lib/junit-rt.jar:/home/devfecta/IdeaProjects/adhound/target/test-classes:/home/devfecta/IdeaProjects/adhound/target/classes:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/devfecta/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/devfecta/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/devfecta/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/devfecta/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/devfecta/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/devfecta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/devfecta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/devfecta/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/devfecta/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/devfecta/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/devfecta/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/devfecta/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/devfecta/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/devfecta/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/devfecta/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/devfecta/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/devfecta/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/devfecta/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/devfecta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/devfecta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/devfecta/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/devfecta/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/devfecta/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/devfecta/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/devfecta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/devfecta/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/devfecta/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/devfecta/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/devfecta/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/devfecta/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/devfecta/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/devfecta/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/devfecta/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/devfecta/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/devfecta/.m2/repository/org/mybatis/mybatis/3.5.4/mybatis-3.5.4.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.adhound.persistence.UserDataTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/devfecta, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=m3tallica, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu119.10.1, user.name=devfecta, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-40-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/adhound-test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.6, user.dir=/home/devfecta/IdeaProjects/adhound, os.arch=amd64, connection.username=devfecta, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3c87fdf2, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu119.10.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/adhound-test, java.class.version=55.0}
[DEBUG] 2020-02-18 15:39:44.510 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-02-18 15:39:44.510 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-18 15:39:44.511 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-18 15:39:44.511 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f651f93] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@a4b5ce3]
[DEBUG] 2020-02-18 15:39:44.544 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.User] is safe
[DEBUG] 2020-02-18 15:39:44.544 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.User
[DEBUG] 2020-02-18 15:39:44.555 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.User] is safe
[DEBUG] 2020-02-18 15:39:44.555 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.User
[DEBUG] 2020-02-18 15:39:44.738 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.UserRole] is safe
[DEBUG] 2020-02-18 15:39:44.738 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.UserRole
[DEBUG] 2020-02-18 15:39:44.738 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.UserRole] is safe
[DEBUG] 2020-02-18 15:39:44.738 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.UserRole
[DEBUG] 2020-02-18 15:39:44.749 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.State] is safe
[DEBUG] 2020-02-18 15:39:44.749 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.State
[DEBUG] 2020-02-18 15:39:44.750 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.adhound.entity.State] is safe
[DEBUG] 2020-02-18 15:39:44.750 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.adhound.entity.State
[DEBUG] 2020-02-18 15:39:44.765 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.User
[DEBUG] 2020-02-18 15:39:44.765 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2020-02-18 15:39:44.765 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.address as address2_2_, user_.city as city3_2_, user_.email as email4_2_, user_.fax as fax5_2_, user_.first_name as first_na6_2_, user_.last_name as last_nam7_2_, user_.password as password8_2_, user_.phone as phone9_2_, user_.state_id as state_i10_2_, user_.username as usernam11_2_, user_.zipcode as zipcode12_2_ from users user_ where user_.id=?
[DEBUG] 2020-02-18 15:39:44.765 [main] AbstractEntityPersister -  Insert 0: insert into users (address, city, email, fax, first_name, last_name, password, phone, state_id, username, zipcode, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-18 15:39:44.765 [main] AbstractEntityPersister -  Update 0: update users set address=?, city=?, email=?, fax=?, first_name=?, last_name=?, password=?, phone=?, state_id=?, username=?, zipcode=? where id=?
[DEBUG] 2020-02-18 15:39:44.765 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2020-02-18 15:39:44.765 [main] AbstractEntityPersister -  Identity insert: insert into users (address, city, email, fax, first_name, last_name, password, phone, state_id, username, zipcode) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-18 15:39:44.779 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e1ffe70]
[DEBUG] 2020-02-18 15:39:44.779 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-02-18 15:39:44.780 [main] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-02-18 15:39:44.780 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-18 15:39:44.780 [main] MetamodelGraphWalker - Visiting attribute path : fax
[DEBUG] 2020-02-18 15:39:44.780 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-18 15:39:44.780 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-18 15:39:44.780 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-18 15:39:44.780 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-02-18 15:39:44.780 [main] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-02-18 15:39:44.782 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e829e50]
[DEBUG] 2020-02-18 15:39:44.783 [main] MetamodelGraphWalker - Visiting attribute path : state.abbreviation
[DEBUG] 2020-02-18 15:39:44.783 [main] MetamodelGraphWalker - Visiting attribute path : state.name
[DEBUG] 2020-02-18 15:39:44.783 [main] MetamodelGraphWalker - Visiting attribute path : stateId
[DEBUG] 2020-02-18 15:39:44.783 [main] MetamodelGraphWalker - Visiting attribute path : userRole
[DEBUG] 2020-02-18 15:39:44.784 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e3ff233]
[DEBUG] 2020-02-18 15:39:44.784 [main] MetamodelGraphWalker - Visiting attribute path : userRole.id
[DEBUG] 2020-02-18 15:39:44.784 [main] MetamodelGraphWalker - Visiting attribute path : userRole.roleName
[DEBUG] 2020-02-18 15:39:44.784 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-18 15:39:44.784 [main] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-02-18 15:39:44.784 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-18 15:39:44.791 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-18 15:39:44.794 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.User, querySpaceUid=<gen:0>, path=com.adhound.entity.User)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:1>, path=com.adhound.entity.User.state)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:2>, path=com.adhound.entity.User.userRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(state)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.adhound.entity.State)
                - SQL table alias mapping - state1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(userRole)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.adhound.entity.UserRole)
                - SQL table alias mapping - userrole2_
                - alias suffix - 2_
                - suffixed key columns - {username1_1_2_}

[DEBUG] 2020-02-18 15:39:44.796 [main] EntityLoader - Static select for entity com.adhound.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.email as email4_2_0_, user0_.fax as fax5_2_0_, user0_.first_name as first_na6_2_0_, user0_.last_name as last_nam7_2_0_, user0_.password as password8_2_0_, user0_.phone as phone9_2_0_, user0_.state_id as state_i10_2_0_, user0_.username as usernam11_2_0_, user0_.zipcode as zipcode12_2_0_, state1_.id as id1_0_1_, state1_.states_Abbreviation as states_A2_0_1_, state1_.states_Name as states_N3_0_1_, userrole2_.username as username1_1_2_, userrole2_.id as id2_1_2_, userrole2_.role_name as role_nam3_1_2_ from users user0_ inner join states state1_ on user0_.state_id=state1_.id inner join user_roles userrole2_ on user0_.username=userrole2_.username where user0_.id=?
[DEBUG] 2020-02-18 15:39:44.796 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2785db06]
[DEBUG] 2020-02-18 15:39:44.796 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-02-18 15:39:44.796 [main] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-02-18 15:39:44.796 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-18 15:39:44.796 [main] MetamodelGraphWalker - Visiting attribute path : fax
[DEBUG] 2020-02-18 15:39:44.796 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-18 15:39:44.796 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-18 15:39:44.796 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-18 15:39:44.797 [main] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-02-18 15:39:44.797 [main] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-02-18 15:39:44.797 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35d60381]
[DEBUG] 2020-02-18 15:39:44.797 [main] MetamodelGraphWalker - Visiting attribute path : state.abbreviation
[DEBUG] 2020-02-18 15:39:44.797 [main] MetamodelGraphWalker - Visiting attribute path : state.name
[DEBUG] 2020-02-18 15:39:44.797 [main] MetamodelGraphWalker - Visiting attribute path : stateId
[DEBUG] 2020-02-18 15:39:44.797 [main] MetamodelGraphWalker - Visiting attribute path : userRole
[DEBUG] 2020-02-18 15:39:44.797 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ffd148]
[DEBUG] 2020-02-18 15:39:44.797 [main] MetamodelGraphWalker - Visiting attribute path : userRole.id
[DEBUG] 2020-02-18 15:39:44.797 [main] MetamodelGraphWalker - Visiting attribute path : userRole.roleName
[DEBUG] 2020-02-18 15:39:44.797 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-18 15:39:44.797 [main] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-02-18 15:39:44.797 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-18 15:39:44.798 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-18 15:39:44.798 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.User, querySpaceUid=<gen:0>, path=com.adhound.entity.User)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:1>, path=com.adhound.entity.User.state)
          - EntityAttributeFetchImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:2>, path=com.adhound.entity.User.userRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(state)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.adhound.entity.State)
                - SQL table alias mapping - state1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(userRole)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.adhound.entity.UserRole)
                - SQL table alias mapping - userrole2_
                - alias suffix - 2_
                - suffixed key columns - {username1_1_2_}

[DEBUG] 2020-02-18 15:39:44.798 [main] EntityLoader - Static select for entity com.adhound.entity.User [READ]: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.email as email4_2_0_, user0_.fax as fax5_2_0_, user0_.first_name as first_na6_2_0_, user0_.last_name as last_nam7_2_0_, user0_.password as password8_2_0_, user0_.phone as phone9_2_0_, user0_.state_id as state_i10_2_0_, user0_.username as usernam11_2_0_, user0_.zipcode as zipcode12_2_0_, state1_.id as id1_0_1_, state1_.states_Abbreviation as states_A2_0_1_, state1_.states_Name as states_N3_0_1_, userrole2_.username as username1_1_2_, userrole2_.id as id2_1_2_, userrole2_.role_name as role_nam3_1_2_ from users user0_ inner join states state1_ on user0_.state_id=state1_.id inner join user_roles userrole2_ on user0_.username=userrole2_.username where user0_.id=?
[DEBUG] 2020-02-18 15:39:44.806 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.User: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.email as email4_2_0_, user0_.fax as fax5_2_0_, user0_.first_name as first_na6_2_0_, user0_.last_name as last_nam7_2_0_, user0_.password as password8_2_0_, user0_.phone as phone9_2_0_, user0_.state_id as state_i10_2_0_, user0_.username as usernam11_2_0_, user0_.zipcode as zipcode12_2_0_ from users user0_ where user0_.id=?
[DEBUG] 2020-02-18 15:39:44.806 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.User: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.email as email4_2_0_, user0_.fax as fax5_2_0_, user0_.first_name as first_na6_2_0_, user0_.last_name as last_nam7_2_0_, user0_.password as password8_2_0_, user0_.phone as phone9_2_0_, user0_.state_id as state_i10_2_0_, user0_.username as usernam11_2_0_, user0_.zipcode as zipcode12_2_0_ from users user0_ where user0_.id=?
[DEBUG] 2020-02-18 15:39:44.807 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.UserRole
[DEBUG] 2020-02-18 15:39:44.807 [main] AbstractEntityPersister -  Version select: select username from user_roles where username =?
[DEBUG] 2020-02-18 15:39:44.807 [main] AbstractEntityPersister -  Snapshot select: select userrole_.username, userrole_.id as id2_1_, userrole_.role_name as role_nam3_1_ from user_roles userrole_ where userrole_.username=?
[DEBUG] 2020-02-18 15:39:44.807 [main] AbstractEntityPersister -  Insert 0: insert into user_roles (id, role_name, username) values (?, ?, ?)
[DEBUG] 2020-02-18 15:39:44.807 [main] AbstractEntityPersister -  Update 0: update user_roles set id=?, role_name=? where username=?
[DEBUG] 2020-02-18 15:39:44.807 [main] AbstractEntityPersister -  Delete 0: delete from user_roles where username=?
[DEBUG] 2020-02-18 15:39:44.807 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ca610a0]
[DEBUG] 2020-02-18 15:39:44.807 [main] MetamodelGraphWalker - Visiting attribute path : id
[DEBUG] 2020-02-18 15:39:44.807 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-02-18 15:39:44.807 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-18 15:39:44.807 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-18 15:39:44.807 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:0>, path=com.adhound.entity.UserRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

[DEBUG] 2020-02-18 15:39:44.808 [main] EntityLoader - Static select for entity com.adhound.entity.UserRole [NONE]: select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-18 15:39:44.808 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b5c6a30]
[DEBUG] 2020-02-18 15:39:44.808 [main] MetamodelGraphWalker - Visiting attribute path : id
[DEBUG] 2020-02-18 15:39:44.808 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-02-18 15:39:44.808 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-18 15:39:44.808 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-18 15:39:44.808 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.UserRole, querySpaceUid=<gen:0>, path=com.adhound.entity.UserRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

[DEBUG] 2020-02-18 15:39:44.808 [main] EntityLoader - Static select for entity com.adhound.entity.UserRole [READ]: select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-18 15:39:44.808 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.UserRole: select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-18 15:39:44.809 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.UserRole: select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-18 15:39:44.809 [main] AbstractEntityPersister - Static SQL for entity: com.adhound.entity.State
[DEBUG] 2020-02-18 15:39:44.809 [main] AbstractEntityPersister -  Version select: select id from states where id =?
[DEBUG] 2020-02-18 15:39:44.809 [main] AbstractEntityPersister -  Snapshot select: select state_.id, state_.states_Abbreviation as states_A2_0_, state_.states_Name as states_N3_0_ from states state_ where state_.id=?
[DEBUG] 2020-02-18 15:39:44.809 [main] AbstractEntityPersister -  Insert 0: insert into states (states_Abbreviation, states_Name, id) values (?, ?, ?)
[DEBUG] 2020-02-18 15:39:44.809 [main] AbstractEntityPersister -  Update 0: update states set states_Abbreviation=?, states_Name=? where id=?
[DEBUG] 2020-02-18 15:39:44.809 [main] AbstractEntityPersister -  Delete 0: delete from states where id=?
[DEBUG] 2020-02-18 15:39:44.809 [main] AbstractEntityPersister -  Identity insert: insert into states (states_Abbreviation, states_Name) values (?, ?)
[DEBUG] 2020-02-18 15:39:44.809 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1775c4e7]
[DEBUG] 2020-02-18 15:39:44.809 [main] MetamodelGraphWalker - Visiting attribute path : abbreviation
[DEBUG] 2020-02-18 15:39:44.809 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-18 15:39:44.809 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-18 15:39:44.810 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-18 15:39:44.810 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.State)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:0>, path=com.adhound.entity.State)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-02-18 15:39:44.810 [main] EntityLoader - Static select for entity com.adhound.entity.State [NONE]: select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-18 15:39:44.810 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f677247]
[DEBUG] 2020-02-18 15:39:44.810 [main] MetamodelGraphWalker - Visiting attribute path : abbreviation
[DEBUG] 2020-02-18 15:39:44.810 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-18 15:39:44.810 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-18 15:39:44.810 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-18 15:39:44.811 [main] LoadPlanTreePrinter - LoadPlan(entity=com.adhound.entity.State)
    - Returns
       - EntityReturnImpl(entity=com.adhound.entity.State, querySpaceUid=<gen:0>, path=com.adhound.entity.State)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.adhound.entity.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-02-18 15:39:44.811 [main] EntityLoader - Static select for entity com.adhound.entity.State [READ]: select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-18 15:39:44.811 [main] Loader - Static select for action ACTION_MERGE on entity com.adhound.entity.State: select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-18 15:39:44.811 [main] Loader - Static select for action ACTION_REFRESH on entity com.adhound.entity.State: select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-18 15:39:44.829 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-18 15:39:44.829 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-18 15:39:44.830 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-18 15:39:44.833 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-18 15:39:44.833 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-18 15:39:44.834 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-18 15:39:44.834 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-18 15:39:44.835 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c6a5192
[DEBUG] 2020-02-18 15:39:44.836 [main] SessionFactoryRegistry - Registering SessionFactory: 7a560dac-6b06-46df-978a-8ec22e65fa89 (<unnamed>)
[DEBUG] 2020-02-18 15:39:44.836 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-18 15:39:44.882 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-18 15:39:44.897 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-18 15:39:44.906 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@46a795de
[DEBUG] 2020-02-18 15:39:44.920 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.adhound.entity.User as generatedAlias0
[DEBUG] 2020-02-18 15:39:44.924 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-18 15:39:44.931 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'adhound'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-18 15:39:44.946 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-18 15:39:44.954 [main] FromElement - FromClause{level=1} : com.adhound.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-18 15:39:44.954 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-02-18 15:39:44.955 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-18 15:39:44.955 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} users user0_ ) )
[DEBUG] 2020-02-18 15:39:44.960 [main] JoinProcessor - Using FROM fragment [users user0_]
[DEBUG] 2020-02-18 15:39:44.960 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-18 15:39:44.961 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=com.adhound.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address as address2_2_, user0_.city as city3_2_, user0_.email as email4_2_, user0_.fax as fax5_2_, user0_.first_name as first_na6_2_, user0_.last_name as last_nam7_2_, user0_.password as password8_2_, user0_.phone as phone9_2_, user0_.state_id as state_i10_2_, user0_.username as usernam11_2_, user0_.zipcode as zipcode12_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.adhound.entity.User}}

[DEBUG] 2020-02-18 15:39:44.961 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-18 15:39:44.964 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.adhound.entity.User as generatedAlias0
[DEBUG] 2020-02-18 15:39:44.964 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.email as email4_2_, user0_.fax as fax5_2_, user0_.first_name as first_na6_2_, user0_.last_name as last_nam7_2_, user0_.password as password8_2_, user0_.phone as phone9_2_, user0_.state_id as state_i10_2_, user0_.username as usernam11_2_, user0_.zipcode as zipcode12_2_ from users user0_
[DEBUG] 2020-02-18 15:39:44.964 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-18 15:39:44.973 [main] SQL - select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.email as email4_2_, user0_.fax as fax5_2_, user0_.first_name as first_na6_2_, user0_.last_name as last_nam7_2_, user0_.password as password8_2_, user0_.phone as phone9_2_, user0_.state_id as state_i10_2_, user0_.username as usernam11_2_, user0_.zipcode as zipcode12_2_ from users user0_
[DEBUG] 2020-02-18 15:39:44.993 [main] Loader - Result set row: 0
[DEBUG] 2020-02-18 15:39:44.997 [main] Loader - Result row: EntityKey[com.adhound.entity.User#1]
[DEBUG] 2020-02-18 15:39:45.005 [main] Loader - Result set row: 1
[DEBUG] 2020-02-18 15:39:45.005 [main] Loader - Result row: EntityKey[com.adhound.entity.User#2]
[DEBUG] 2020-02-18 15:39:45.005 [main] Loader - Result set row: 2
[DEBUG] 2020-02-18 15:39:45.005 [main] Loader - Result row: EntityKey[com.adhound.entity.User#3]
[DEBUG] 2020-02-18 15:39:45.007 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#1]
[DEBUG] 2020-02-18 15:39:45.008 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Road
[DEBUG] 2020-02-18 15:39:45.008 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.008 [main] TwoPhaseLoad - Processing attribute `city` : value = Fitchburg
[DEBUG] 2020-02-18 15:39:45.008 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.008 [main] TwoPhaseLoad - Processing attribute `email` : value = kkelm@outlook.com
[DEBUG] 2020-02-18 15:39:45.008 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.008 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-02-18 15:39:45.008 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.008 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kevin
[DEBUG] 2020-02-18 15:39:45.009 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.009 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelm
[DEBUG] 2020-02-18 15:39:45.009 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.009 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-02-18 15:39:45.009 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.009 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-02-18 15:39:45.009 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.009 [main] TwoPhaseLoad - Processing attribute `state` : value = 49
[DEBUG] 2020-02-18 15:39:45.009 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.014 [main] SQL - select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-18 15:39:45.020 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.020 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.021 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#49]
[DEBUG] 2020-02-18 15:39:45.021 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = WI
[DEBUG] 2020-02-18 15:39:45.021 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.021 [main] TwoPhaseLoad - Processing attribute `name` : value = Wisconsin
[DEBUG] 2020-02-18 15:39:45.021 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.022 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#49]
[DEBUG] 2020-02-18 15:39:45.022 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.022 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#49
[DEBUG] 2020-02-18 15:39:45.023 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 49
[DEBUG] 2020-02-18 15:39:45.023 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.023 [main] TwoPhaseLoad - Processing attribute `userRole` : value = kkelm
[DEBUG] 2020-02-18 15:39:45.023 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.023 [main] SQL - select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-18 15:39:45.025 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.026 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.026 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-02-18 15:39:45.026 [main] TwoPhaseLoad - Processing attribute `id` : value = 1
[DEBUG] 2020-02-18 15:39:45.026 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.026 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Administrator
[DEBUG] 2020-02-18 15:39:45.026 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.027 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-02-18 15:39:45.027 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.027 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#kkelm
[DEBUG] 2020-02-18 15:39:45.027 [main] TwoPhaseLoad - Processing attribute `username` : value = kkelm
[DEBUG] 2020-02-18 15:39:45.027 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.027 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-02-18 15:39:45.027 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.028 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#1]
[DEBUG] 2020-02-18 15:39:45.028 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#2]
[DEBUG] 2020-02-18 15:39:45.028 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-02-18 15:39:45.028 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.028 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-02-18 15:39:45.028 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.028 [main] TwoPhaseLoad - Processing attribute `email` : value = test@gmail.com
[DEBUG] 2020-02-18 15:39:45.028 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.028 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-02-18 15:39:45.028 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.029 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Darth
[DEBUG] 2020-02-18 15:39:45.029 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.029 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vader
[DEBUG] 2020-02-18 15:39:45.029 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.029 [main] TwoPhaseLoad - Processing attribute `password` : value = test
[DEBUG] 2020-02-18 15:39:45.029 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.029 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-02-18 15:39:45.029 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.029 [main] TwoPhaseLoad - Processing attribute `state` : value = 25
[DEBUG] 2020-02-18 15:39:45.029 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.029 [main] SQL - select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-18 15:39:45.030 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.030 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.030 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#25]
[DEBUG] 2020-02-18 15:39:45.030 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = MO
[DEBUG] 2020-02-18 15:39:45.030 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.030 [main] TwoPhaseLoad - Processing attribute `name` : value = Missouri
[DEBUG] 2020-02-18 15:39:45.030 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.030 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#25]
[DEBUG] 2020-02-18 15:39:45.030 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.031 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#25
[DEBUG] 2020-02-18 15:39:45.031 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 25
[DEBUG] 2020-02-18 15:39:45.031 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.031 [main] TwoPhaseLoad - Processing attribute `userRole` : value = distributor
[DEBUG] 2020-02-18 15:39:45.031 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.031 [main] SQL - select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-18 15:39:45.032 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.032 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.032 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-02-18 15:39:45.032 [main] TwoPhaseLoad - Processing attribute `id` : value = 2
[DEBUG] 2020-02-18 15:39:45.032 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.032 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-02-18 15:39:45.032 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.032 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-02-18 15:39:45.032 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.032 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#distributor
[DEBUG] 2020-02-18 15:39:45.032 [main] TwoPhaseLoad - Processing attribute `username` : value = distributor
[DEBUG] 2020-02-18 15:39:45.032 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.032 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-02-18 15:39:45.032 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#2]
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#3]
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Circle
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Processing attribute `city` : value = Markesan
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Processing attribute `email` : value = test@yahoo.com
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Luke
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Skywalker
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Processing attribute `password` : value = 123abc
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-02-18 15:39:45.033 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.033 [main] SQL - select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-18 15:39:45.034 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.034 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.034 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-02-18 15:39:45.034 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-02-18 15:39:45.035 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.035 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-02-18 15:39:45.035 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.035 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-02-18 15:39:45.035 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.035 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#33
[DEBUG] 2020-02-18 15:39:45.035 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-02-18 15:39:45.035 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.035 [main] TwoPhaseLoad - Processing attribute `userRole` : value = runner
[DEBUG] 2020-02-18 15:39:45.035 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.035 [main] SQL - select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-18 15:39:45.036 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.036 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.036 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#runner]
[DEBUG] 2020-02-18 15:39:45.036 [main] TwoPhaseLoad - Processing attribute `id` : value = 3
[DEBUG] 2020-02-18 15:39:45.036 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.036 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Runner
[DEBUG] 2020-02-18 15:39:45.036 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.036 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#runner]
[DEBUG] 2020-02-18 15:39:45.036 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.036 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#runner
[DEBUG] 2020-02-18 15:39:45.037 [main] TwoPhaseLoad - Processing attribute `username` : value = runner
[DEBUG] 2020-02-18 15:39:45.037 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.037 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-02-18 15:39:45.037 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.037 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#3]
[DEBUG] 2020-02-18 15:39:45.038 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-18 15:39:45.048 [main] SQL - select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.email as email4_2_0_, user0_.fax as fax5_2_0_, user0_.first_name as first_na6_2_0_, user0_.last_name as last_nam7_2_0_, user0_.password as password8_2_0_, user0_.phone as phone9_2_0_, user0_.state_id as state_i10_2_0_, user0_.username as usernam11_2_0_, user0_.zipcode as zipcode12_2_0_, state1_.id as id1_0_1_, state1_.states_Abbreviation as states_A2_0_1_, state1_.states_Name as states_N3_0_1_, userrole2_.username as username1_1_2_, userrole2_.id as id2_1_2_, userrole2_.role_name as role_nam3_1_2_ from users user0_ inner join states state1_ on user0_.state_id=state1_.id inner join user_roles userrole2_ on user0_.username=userrole2_.username where user0_.id=?
[DEBUG] 2020-02-18 15:39:45.050 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.050 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#1]
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Road
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Processing attribute `city` : value = Fitchburg
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Processing attribute `email` : value = kkelm@outlook.com
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kevin
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelm
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Processing attribute `state` : value = 49
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.051 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 49
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Processing attribute `userRole` : value = kkelm
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Processing attribute `username` : value = kkelm
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#1]
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#49]
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = WI
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Processing attribute `name` : value = Wisconsin
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#49]
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Processing attribute `id` : value = 1
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Administrator
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.052 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-02-18 15:39:45.052 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.053 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#1
[DEBUG] 2020-02-18 15:39:45.053 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-18 15:39:45.060 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-18 15:39:45.060 [main] SQL - select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.email as email4_2_, user0_.fax as fax5_2_, user0_.first_name as first_na6_2_, user0_.last_name as last_nam7_2_, user0_.password as password8_2_, user0_.phone as phone9_2_, user0_.state_id as state_i10_2_, user0_.username as usernam11_2_, user0_.zipcode as zipcode12_2_ from users user0_
[DEBUG] 2020-02-18 15:39:45.062 [main] Loader - Result set row: 0
[DEBUG] 2020-02-18 15:39:45.062 [main] Loader - Result row: EntityKey[com.adhound.entity.User#1]
[DEBUG] 2020-02-18 15:39:45.063 [main] Loader - Result set row: 1
[DEBUG] 2020-02-18 15:39:45.063 [main] Loader - Result row: EntityKey[com.adhound.entity.User#2]
[DEBUG] 2020-02-18 15:39:45.063 [main] Loader - Result set row: 2
[DEBUG] 2020-02-18 15:39:45.063 [main] Loader - Result row: EntityKey[com.adhound.entity.User#3]
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#1]
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Road
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Processing attribute `city` : value = Fitchburg
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Processing attribute `email` : value = kkelm@outlook.com
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kevin
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelm
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.063 [main] TwoPhaseLoad - Processing attribute `state` : value = 49
[DEBUG] 2020-02-18 15:39:45.064 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.064 [main] SQL - select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-18 15:39:45.065 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.065 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.065 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#49]
[DEBUG] 2020-02-18 15:39:45.065 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = WI
[DEBUG] 2020-02-18 15:39:45.065 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.065 [main] TwoPhaseLoad - Processing attribute `name` : value = Wisconsin
[DEBUG] 2020-02-18 15:39:45.065 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.065 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#49]
[DEBUG] 2020-02-18 15:39:45.065 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.066 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#49
[DEBUG] 2020-02-18 15:39:45.066 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 49
[DEBUG] 2020-02-18 15:39:45.066 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.066 [main] TwoPhaseLoad - Processing attribute `userRole` : value = kkelm
[DEBUG] 2020-02-18 15:39:45.066 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.066 [main] SQL - select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-18 15:39:45.067 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.068 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.068 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-02-18 15:39:45.068 [main] TwoPhaseLoad - Processing attribute `id` : value = 1
[DEBUG] 2020-02-18 15:39:45.068 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.068 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Administrator
[DEBUG] 2020-02-18 15:39:45.068 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.068 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-02-18 15:39:45.068 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.069 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#kkelm
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Processing attribute `username` : value = kkelm
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#1]
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#2]
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Street
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Processing attribute `email` : value = test@gmail.com
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Darth
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vader
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Processing attribute `password` : value = test
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Processing attribute `state` : value = 25
[DEBUG] 2020-02-18 15:39:45.069 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.070 [main] SQL - select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-18 15:39:45.071 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.071 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.071 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#25]
[DEBUG] 2020-02-18 15:39:45.071 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = MO
[DEBUG] 2020-02-18 15:39:45.071 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.071 [main] TwoPhaseLoad - Processing attribute `name` : value = Missouri
[DEBUG] 2020-02-18 15:39:45.071 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.071 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#25]
[DEBUG] 2020-02-18 15:39:45.071 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.071 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#25
[DEBUG] 2020-02-18 15:39:45.071 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 25
[DEBUG] 2020-02-18 15:39:45.071 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.071 [main] TwoPhaseLoad - Processing attribute `userRole` : value = distributor
[DEBUG] 2020-02-18 15:39:45.071 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.072 [main] SQL - select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-18 15:39:45.073 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.073 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.073 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-02-18 15:39:45.073 [main] TwoPhaseLoad - Processing attribute `id` : value = 2
[DEBUG] 2020-02-18 15:39:45.074 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.074 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Distributor
[DEBUG] 2020-02-18 15:39:45.074 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.074 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#distributor]
[DEBUG] 2020-02-18 15:39:45.074 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.074 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#distributor
[DEBUG] 2020-02-18 15:39:45.074 [main] TwoPhaseLoad - Processing attribute `username` : value = distributor
[DEBUG] 2020-02-18 15:39:45.074 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.074 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-02-18 15:39:45.074 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.074 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#2]
[DEBUG] 2020-02-18 15:39:45.074 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#3]
[DEBUG] 2020-02-18 15:39:45.074 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Circle
[DEBUG] 2020-02-18 15:39:45.074 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.074 [main] TwoPhaseLoad - Processing attribute `city` : value = Markesan
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Processing attribute `email` : value = test@yahoo.com
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Luke
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Skywalker
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Processing attribute `password` : value = 123abc
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-02-18 15:39:45.075 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.075 [main] SQL - select state0_.id as id1_0_0_, state0_.states_Abbreviation as states_A2_0_0_, state0_.states_Name as states_N3_0_0_ from states state0_ where state0_.id=?
[DEBUG] 2020-02-18 15:39:45.077 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.077 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.077 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-02-18 15:39:45.077 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-02-18 15:39:45.077 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.077 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-02-18 15:39:45.077 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.077 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-02-18 15:39:45.077 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.077 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.State#33
[DEBUG] 2020-02-18 15:39:45.077 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-02-18 15:39:45.077 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.077 [main] TwoPhaseLoad - Processing attribute `userRole` : value = runner
[DEBUG] 2020-02-18 15:39:45.077 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.077 [main] SQL - select userrole0_.username as username1_1_0_, userrole0_.id as id2_1_0_, userrole0_.role_name as role_nam3_1_0_ from user_roles userrole0_ where userrole0_.username=?
[DEBUG] 2020-02-18 15:39:45.079 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.079 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.079 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#runner]
[DEBUG] 2020-02-18 15:39:45.079 [main] TwoPhaseLoad - Processing attribute `id` : value = 3
[DEBUG] 2020-02-18 15:39:45.079 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.079 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Runner
[DEBUG] 2020-02-18 15:39:45.079 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.079 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#runner]
[DEBUG] 2020-02-18 15:39:45.079 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.079 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.UserRole#runner
[DEBUG] 2020-02-18 15:39:45.080 [main] TwoPhaseLoad - Processing attribute `username` : value = runner
[DEBUG] 2020-02-18 15:39:45.080 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.080 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-02-18 15:39:45.080 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.080 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#3]
[DEBUG] 2020-02-18 15:39:45.080 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-18 15:39:45.081 [main] SQL - select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.email as email4_2_0_, user0_.fax as fax5_2_0_, user0_.first_name as first_na6_2_0_, user0_.last_name as last_nam7_2_0_, user0_.password as password8_2_0_, user0_.phone as phone9_2_0_, user0_.state_id as state_i10_2_0_, user0_.username as usernam11_2_0_, user0_.zipcode as zipcode12_2_0_, state1_.id as id1_0_1_, state1_.states_Abbreviation as states_A2_0_1_, state1_.states_Name as states_N3_0_1_, userrole2_.username as username1_1_2_, userrole2_.id as id2_1_2_, userrole2_.role_name as role_nam3_1_2_ from users user0_ inner join states state1_ on user0_.state_id=state1_.id inner join user_roles userrole2_ on user0_.username=userrole2_.username where user0_.id=?
[DEBUG] 2020-02-18 15:39:45.082 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.083 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.083 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#3]
[DEBUG] 2020-02-18 15:39:45.083 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Circle
[DEBUG] 2020-02-18 15:39:45.083 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.083 [main] TwoPhaseLoad - Processing attribute `city` : value = Markesan
[DEBUG] 2020-02-18 15:39:45.083 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.083 [main] TwoPhaseLoad - Processing attribute `email` : value = test@yahoo.com
[DEBUG] 2020-02-18 15:39:45.083 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.083 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-02-18 15:39:45.083 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.083 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Luke
[DEBUG] 2020-02-18 15:39:45.083 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.083 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Skywalker
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Processing attribute `password` : value = 123abc
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Processing attribute `state` : value = 33
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 33
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Processing attribute `userRole` : value = runner
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Processing attribute `username` : value = runner
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#3]
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#33]
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = NC
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Processing attribute `name` : value = North Carolina
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#33]
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#runner]
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Processing attribute `id` : value = 3
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.084 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Runner
[DEBUG] 2020-02-18 15:39:45.085 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.085 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#runner]
[DEBUG] 2020-02-18 15:39:45.085 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.085 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#3
[DEBUG] 2020-02-18 15:39:45.085 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-18 15:39:45.087 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-18 15:39:45.087 [main] TransactionImpl - begin
[DEBUG] 2020-02-18 15:39:45.092 [main] SQL - select userrole_.username, userrole_.id as id2_1_, userrole_.role_name as role_nam3_1_ from user_roles userrole_ where userrole_.username=?
[DEBUG] 2020-02-18 15:39:45.095 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.099 [main] TransactionImpl - committing
[DEBUG] 2020-02-18 15:39:45.100 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-18 15:39:45.100 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-18 15:39:45.101 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-02-18 15:39:45.101 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-02-18 15:39:45.102 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-02-18 15:39:45.102 [main] EntityPrinter - com.adhound.entity.User{lastName=Skywalker, address=123 Test Circle, city=Markesan, stateId=33, zipcode=12345-67890, firstName=Luke, password=123abc, phone=(123) 456-7890, id=3, state=com.adhound.entity.State#33, fax=(123) 789-4560, userRole=com.adhound.entity.UserRole#runner, email=test@yahoo.com, username=runner}
[DEBUG] 2020-02-18 15:39:45.105 [main] SQL - delete from users where id=?
[DEBUG] 2020-02-18 15:39:45.111 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-18 15:39:45.111 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-18 15:39:45.112 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-02-18 15:39:45.112 [main] SQL - select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.email as email4_2_0_, user0_.fax as fax5_2_0_, user0_.first_name as first_na6_2_0_, user0_.last_name as last_nam7_2_0_, user0_.password as password8_2_0_, user0_.phone as phone9_2_0_, user0_.state_id as state_i10_2_0_, user0_.username as usernam11_2_0_, user0_.zipcode as zipcode12_2_0_, state1_.id as id1_0_1_, state1_.states_Abbreviation as states_A2_0_1_, state1_.states_Name as states_N3_0_1_, userrole2_.username as username1_1_2_, userrole2_.id as id2_1_2_, userrole2_.role_name as role_nam3_1_2_ from users user0_ inner join states state1_ on user0_.state_id=state1_.id inner join user_roles userrole2_ on user0_.username=userrole2_.username where user0_.id=?
[DEBUG] 2020-02-18 15:39:45.114 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.114 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#3
[DEBUG] 2020-02-18 15:39:45.114 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-18 15:39:45.118 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-18 15:39:45.118 [main] TransactionImpl - begin
[DEBUG] 2020-02-18 15:39:45.122 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-02-18 15:39:45.122 [main] SQL - insert into users (address, city, email, fax, first_name, last_name, password, phone, state_id, username, zipcode) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-18 15:39:45.127 [main] IdentifierGeneratorHelper - Natively generated identity: 9
[DEBUG] 2020-02-18 15:39:45.127 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.128 [main] AbstractSaveEventListener - Generated identifier: testUsername81, using strategy: org.hibernate.id.Assigned
[DEBUG] 2020-02-18 15:39:45.139 [main] SQL - select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.email as email4_2_0_, user0_.fax as fax5_2_0_, user0_.first_name as first_na6_2_0_, user0_.last_name as last_nam7_2_0_, user0_.password as password8_2_0_, user0_.phone as phone9_2_0_, user0_.state_id as state_i10_2_0_, user0_.username as usernam11_2_0_, user0_.zipcode as zipcode12_2_0_, state1_.id as id1_0_1_, state1_.states_Abbreviation as states_A2_0_1_, state1_.states_Name as states_N3_0_1_, userrole2_.username as username1_1_2_, userrole2_.id as id2_1_2_, userrole2_.role_name as role_nam3_1_2_ from users user0_ inner join states state1_ on user0_.state_id=state1_.id inner join user_roles userrole2_ on user0_.username=userrole2_.username where user0_.id=?
[DEBUG] 2020-02-18 15:39:45.143 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.143 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.144 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#1]
[DEBUG] 2020-02-18 15:39:45.144 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Road
[DEBUG] 2020-02-18 15:39:45.144 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.144 [main] TwoPhaseLoad - Processing attribute `city` : value = Fitchburg
[DEBUG] 2020-02-18 15:39:45.144 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.144 [main] TwoPhaseLoad - Processing attribute `email` : value = kkelm@outlook.com
[DEBUG] 2020-02-18 15:39:45.144 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kevin
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelm
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Processing attribute `state` : value = 49
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 49
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Processing attribute `userRole` : value = kkelm
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Processing attribute `username` : value = kkelm
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#1]
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#49]
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = WI
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Processing attribute `name` : value = Wisconsin
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#49]
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Processing attribute `id` : value = 1
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.145 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Administrator
[DEBUG] 2020-02-18 15:39:45.146 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.146 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-02-18 15:39:45.146 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.146 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#1
[DEBUG] 2020-02-18 15:39:45.146 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-18 15:39:45.147 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-18 15:39:45.147 [main] TransactionImpl - begin
[DEBUG] 2020-02-18 15:39:45.148 [main] TransactionImpl - committing
[DEBUG] 2020-02-18 15:39:45.148 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-18 15:39:45.149 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-18 15:39:45.149 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-02-18 15:39:45.149 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-02-18 15:39:45.149 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-02-18 15:39:45.149 [main] EntityPrinter - com.adhound.entity.User{lastName=Kelm, address=123 Test Road, city=Fitchburg, stateId=49, zipcode=12345-67890, firstName=Kevin, password=testPassword, phone=(123) 456-7890, id=1, state=com.adhound.entity.State#49, fax=(123) 789-4560, userRole=com.adhound.entity.UserRole#kkelm, email=kkelm@outlook.com, username=kkelm}
[DEBUG] 2020-02-18 15:39:45.149 [main] SQL - update users set address=?, city=?, email=?, fax=?, first_name=?, last_name=?, password=?, phone=?, state_id=?, username=?, zipcode=? where id=?
[DEBUG] 2020-02-18 15:39:45.151 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-18 15:39:45.152 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-18 15:39:45.152 [main] SQL - select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.email as email4_2_0_, user0_.fax as fax5_2_0_, user0_.first_name as first_na6_2_0_, user0_.last_name as last_nam7_2_0_, user0_.password as password8_2_0_, user0_.phone as phone9_2_0_, user0_.state_id as state_i10_2_0_, user0_.username as usernam11_2_0_, user0_.zipcode as zipcode12_2_0_, state1_.id as id1_0_1_, state1_.states_Abbreviation as states_A2_0_1_, state1_.states_Name as states_N3_0_1_, userrole2_.username as username1_1_2_, userrole2_.id as id2_1_2_, userrole2_.role_name as role_nam3_1_2_ from users user0_ inner join states state1_ on user0_.state_id=state1_.id inner join user_roles userrole2_ on user0_.username=userrole2_.username where user0_.id=?
[DEBUG] 2020-02-18 15:39:45.154 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 15:39:45.154 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-18 15:39:45.154 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.User#1]
[DEBUG] 2020-02-18 15:39:45.154 [main] TwoPhaseLoad - Processing attribute `address` : value = 123 Test Road
[DEBUG] 2020-02-18 15:39:45.154 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.154 [main] TwoPhaseLoad - Processing attribute `city` : value = Fitchburg
[DEBUG] 2020-02-18 15:39:45.154 [main] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.154 [main] TwoPhaseLoad - Processing attribute `email` : value = kkelm@outlook.com
[DEBUG] 2020-02-18 15:39:45.154 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.154 [main] TwoPhaseLoad - Processing attribute `fax` : value = (123) 789-4560
[DEBUG] 2020-02-18 15:39:45.154 [main] TwoPhaseLoad - Attribute (`fax`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.155 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kevin
[DEBUG] 2020-02-18 15:39:45.155 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.155 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelm
[DEBUG] 2020-02-18 15:39:45.155 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.155 [main] TwoPhaseLoad - Processing attribute `password` : value = testPassword
[DEBUG] 2020-02-18 15:39:45.155 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.155 [main] TwoPhaseLoad - Processing attribute `phone` : value = (123) 456-7890
[DEBUG] 2020-02-18 15:39:45.155 [main] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.155 [main] TwoPhaseLoad - Processing attribute `state` : value = 49
[DEBUG] 2020-02-18 15:39:45.155 [main] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.155 [main] TwoPhaseLoad - Processing attribute `stateId` : value = 49
[DEBUG] 2020-02-18 15:39:45.155 [main] TwoPhaseLoad - Attribute (`stateId`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.155 [main] TwoPhaseLoad - Processing attribute `userRole` : value = kkelm
[DEBUG] 2020-02-18 15:39:45.155 [main] TwoPhaseLoad - Attribute (`userRole`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.156 [main] TwoPhaseLoad - Processing attribute `username` : value = kkelm
[DEBUG] 2020-02-18 15:39:45.156 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.156 [main] TwoPhaseLoad - Processing attribute `zipcode` : value = 12345-67890
[DEBUG] 2020-02-18 15:39:45.156 [main] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.156 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.User#1]
[DEBUG] 2020-02-18 15:39:45.156 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.State#49]
[DEBUG] 2020-02-18 15:39:45.156 [main] TwoPhaseLoad - Processing attribute `abbreviation` : value = WI
[DEBUG] 2020-02-18 15:39:45.156 [main] TwoPhaseLoad - Attribute (`abbreviation`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.156 [main] TwoPhaseLoad - Processing attribute `name` : value = Wisconsin
[DEBUG] 2020-02-18 15:39:45.156 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.156 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.State#49]
[DEBUG] 2020-02-18 15:39:45.157 [main] TwoPhaseLoad - Resolving attributes for [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-02-18 15:39:45.157 [main] TwoPhaseLoad - Processing attribute `id` : value = 1
[DEBUG] 2020-02-18 15:39:45.157 [main] TwoPhaseLoad - Attribute (`id`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.157 [main] TwoPhaseLoad - Processing attribute `roleName` : value = Administrator
[DEBUG] 2020-02-18 15:39:45.157 [main] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 15:39:45.157 [main] TwoPhaseLoad - Done materializing entity [com.adhound.entity.UserRole#kkelm]
[DEBUG] 2020-02-18 15:39:45.157 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 15:39:45.157 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.adhound.entity.User#1
[DEBUG] 2020-02-18 15:39:45.157 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
